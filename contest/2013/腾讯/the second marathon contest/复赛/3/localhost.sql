-- phpMyAdmin SQL Dump
-- version 3.5.7
-- http://www.phpmyadmin.net
--
-- 主机: localhost
-- 生成日期: 2013 年 03 月 21 日 01:14
-- 服务器版本: 5.1.65
-- PHP 版本: 5.3.21

SET SQL_MODE="NO_AUTO_VALUE_ON_ZERO";
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;

--
-- 数据库: `wingusec_tksite`
--


-- --------------------------------------------------------

--
-- 表的结构 `tk_android_class`
--

CREATE TABLE IF NOT EXISTS `tk_android_class` (
  `id` int(11) NOT NULL,
  `name` varchar(45) NOT NULL,
  `link` varchar(255) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- 转存表中的数据 `tk_android_class`
--

INSERT INTO `tk_android_class` (`id`, `name`, `link`) VALUES
(102, '全部游戏', 'http://as.baidu.com/a/asgame?cid=102'),
(401, '休闲益智', 'http://as.baidu.com/a/asgame?cid=401'),
(402, '角色冒险', 'http://as.baidu.com/a/asgame?cid=402'),
(403, '动作格斗', 'http://as.baidu.com/a/asgame?cid=403'),
(404, '策略游戏', 'http://as.baidu.com/a/asgame?cid=404'),
(405, '体育竞速', 'http://as.baidu.com/a/asgame?cid=405'),
(406, '飞行射击', 'http://as.baidu.com/a/asgame?cid=406'),
(407, '卡片棋牌', 'http://as.baidu.com/a/asgame?cid=407'),
(408, '经营养成', 'http://as.baidu.com/a/asgame?cid=408'),
(410, '其他游戏', 'http://as.baidu.com/a/asgame?cid=400&amp;s=1');

-- --------------------------------------------------------

--
-- 表的结构 `tk_android_class_name`
--

CREATE TABLE IF NOT EXISTS `tk_android_class_name` (
  `tk_android_class` int(11) NOT NULL,
  `tk_android_name` int(11) NOT NULL,
  PRIMARY KEY (`tk_android_class`,`tk_android_name`),
  KEY `tk_android_class_idx` (`tk_android_class`),
  KEY `tk_android_name_idx` (`tk_android_name`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- 转存表中的数据 `tk_android_class_name`
--

INSERT INTO `tk_android_class_name` (`tk_android_class`, `tk_android_name`) VALUES
(102, 864557),
(102, 1054357),
(102, 1911229),
(102, 2027093),
(102, 2118772),
(102, 2336351),
(102, 2345748),
(102, 2516519),
(102, 2559640),
(102, 2571662),
(102, 2593096),
(102, 2605567),
(102, 2611822),
(102, 2632235);

-- --------------------------------------------------------

--
-- 表的结构 `tk_android_name`
--

CREATE TABLE IF NOT EXISTS `tk_android_name` (
  `id` int(11) NOT NULL,
  `name` varchar(45) NOT NULL,
  `link` varchar(255) NOT NULL,
  `img` varchar(255) NOT NULL,
  `apk` varchar(255) NOT NULL,
  `star` varchar(45) NOT NULL,
  `size` varchar(45) DEFAULT NULL,
  `time` varchar(45) DEFAULT NULL,
  `introduction` mediumtext,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- 转存表中的数据 `tk_android_name`
--

INSERT INTO `tk_android_name` (`id`, `name`, `link`, `img`, `apk`, `star`, `size`, `time`, `introduction`) VALUES
(864557, '武林OL', 'http://as.baidu.com/a/item?docid=864557&pre=web_am_asgame&pos=asgame_1003_13&f=asgame_1003_13', 'http://hiphotos.baidu.com/wisegame/pic/item/b588d43f8794a4c2937853b00ef41bd5ac6e39d6.jpg', 'http://gdown.baidu.com/data/wisegame/411f2b62c01c2572/WuLinOL.apk', ' ', ' ', ' ', ' '),
(1054357, '燃烧的蔬菜', 'http://as.baidu.com/a/item?docid=1054357&pre=web_am_asgame&pos=asgame_1003_4&f=asgame_1003_4', 'http://hiphotos.baidu.com/wisegame/pic/item/4d738bd4b31c8701f47ddcf4267f9e2f0608ffdd.jpg', 'http://apk.hiapk.com/down?aid=832958&em=13', ' ', ' ', ' ', ' '),
(1911229, '消灭星星(中文…', 'http://as.baidu.com/a/item?docid=1911229&pre=web_am_asgame&pos=asgame_1003_1&f=asgame_1003_1', 'http://hiphotos.baidu.com/wisegame/pic/item/6bfa513d269759ee7940d9d9b3fb43166d22df94.jpg', 'http://www.anzhi.com/dl_app.php?s=711943&channel=baidu', ' ', ' ', ' ', ' '),
(2027093, '武士Ⅱ：复仇', 'http://as.baidu.com/a/item?docid=2027093&pre=web_am_asgame&pos=asgame_1003_8&f=asgame_1003_8', 'http://hiphotos.baidu.com/wisegame/pic/item/ae11728b4710b912ac0ec124c3fdfc0393452218.jpg', 'http://gdown.baidu.com/data/wisegame/e6b8fd8908727ea8/wushiIIfuchou.apk', ' ', ' ', ' ', ' '),
(2118772, 'QQ御剑', 'http://as.baidu.com/a/item?docid=2118772&pre=web_am_asgame&pos=asgame_1003_12&f=asgame_1003_12', 'http://hiphotos.baidu.com/wisegame/pic/item/d9a1cd11728b4710b7369f0ac3cec3fdfd0323de.jpg', 'http://market.nduoa.com/apk/download/486129?from=baidu', ' ', ' ', ' ', ' '),
(2336351, '斗神诀OL', 'http://as.baidu.com/a/item?docid=2336351&pre=web_am_asgame&pos=asgame_1003_11&f=asgame_1003_11', 'http://hiphotos.baidu.com/wisegame/pic/item/e126cffc1e178a828f782397f703738da977e845.jpg', 'http://gdown.baidu.com/data/wisegame/3ecee02dcbcf4829/doushenjueOL.apk', ' ', ' ', ' ', ' '),
(2345748, '永生门', 'http://as.baidu.com/a/item?docid=2345748&pre=web_am_asgame&pos=asgame_1003_10&f=asgame_1003_10', 'http://hiphotos.baidu.com/wisegame/pic/item/b258ccbf6c81800a00079336b03533fa828b4723.jpg', 'http://gdown.baidu.com/data/wisegame/16da2024d6e222f0/yongshengmen.apk', ' ', ' ', ' ', ' '),
(2516519, '风云天下', 'http://as.baidu.com/a/item?docid=2516519&pre=web_am_asgame&pos=asgame_1003_7&f=asgame_1003_7', 'http://hiphotos.baidu.com/wisegame/pic/item/ccc379310a55b319eb012f5f42a98226cffc171b.jpg', 'http://gdown.baidu.com/data/wisegame/005e6002b6b13c6a/fengyuntianxiaOL.apk', ' ', ' ', ' ', ' '),
(2559640, '英雄联盟控', 'http://as.baidu.com/a/item?docid=2559640&pre=web_am_asgame&pos=asgame_1003_0&f=asgame_1003_0', 'http://hiphotos.baidu.com/wisegame/pic/item/56fae6cd7b899e5114d6683943a7d933c8950d46.jpg', 'http://www.appchina.com/market/d/645408/cop.baidu_0/com.mandi.lol.apk', ' ', ' ', ' ', ' '),
(2571662, '麻將天下', 'http://as.baidu.com/a/item?docid=2571662&pre=web_am_asgame&pos=asgame_1003_2&f=asgame_1003_2', 'http://hiphotos.baidu.com/wisegame/pic/item/bec451da81cb39db5ed8dd7bd1160924ab183087.jpg', 'http://down.android.d.cn/6/22/6897_104870?http://c.downandroid.com/android/new/game1/54/111854/mjtx_1362379268719.apk?f=baidu_1', ' ', ' ', ' ', ' '),
(2593096, '英雄杀', 'http://as.baidu.com/a/item?docid=2593096&pre=web_am_asgame&pos=asgame_1003_6&f=asgame_1003_6', 'http://hiphotos.baidu.com/wisegame/pic/item/c4efce1b9d16fdfab97be5c1b58f8c5494ee7b8d.jpg', 'http://www.coolapk.com/dl?v=QVBLNmVkNTBkOWltaQ&h=4fe5c98e1f6f3a4867a6f3ea4eae7113&from=baidu', ' ', ' ', ' ', ' '),
(2605567, '真实赛车3', 'http://as.baidu.com/a/item?docid=2605567&pre=web_am_asgame&pos=asgame_1003_5&f=asgame_1003_5', 'http://hiphotos.baidu.com/wisegame/pic/item/f8504fc2d56285355119973391ef76c6a7ef6323.jpg', 'http://android.155.cn/baidu.download.php?net=0&resource_id=173874', ' ', ' ', ' ', ' '),
(2611822, '君王2', 'http://as.baidu.com/a/item?docid=2611822&pre=web_am_asgame&pos=asgame_1003_9&f=asgame_1003_9', 'http://hiphotos.baidu.com/wisegame/pic/item/39afa40f4bfbfbed7c41ba6d79f0f736afc31f8c.jpg', 'http://gdown.baidu.com/data/wisegame/4cd56841f8a95b0d/junwang2.apk', ' ', ' ', ' ', ' '),
(2632235, '终极狂飙3D漂移', 'http://as.baidu.com/a/item?docid=2632235&pre=web_am_asgame&pos=asgame_1003_3&f=asgame_1003_3', 'http://hiphotos.baidu.com/wisegame/pic/item/6946f21fbe096b6381b807430d338744ebf8ac04.jpg', 'http://gdown.baidu.com/data/wisegame/66fb20fac05899ee/zhongjikuangbiao3Dpiaoyi.apk', ' ', ' ', ' ', ' ');

-- --------------------------------------------------------

--
-- 表的结构 `tk_blog`
--

CREATE TABLE IF NOT EXISTS `tk_blog` (
  `tk_blog_key` varchar(45) NOT NULL COMMENT '这里也要使用key了',
  `tk_blog_user` varchar(45) NOT NULL,
  `tk_blog_datetime` datetime NOT NULL,
  `tk_blog_title` varchar(45) NOT NULL,
  `tk_blog_content` longtext NOT NULL,
  `tk_blog_password` varchar(45) DEFAULT NULL,
  `tk_blog_category` varchar(45) DEFAULT NULL,
  PRIMARY KEY (`tk_blog_key`),
  KEY `tk_blog_user_idx` (`tk_blog_user`),
  KEY `tk_blog_user_idx1` (`tk_blog_user`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- 转存表中的数据 `tk_blog`
--

INSERT INTO `tk_blog` (`tk_blog_key`, `tk_blog_user`, `tk_blog_datetime`, `tk_blog_title`, `tk_blog_content`, `tk_blog_password`, `tk_blog_category`) VALUES
('tiankong1359350462', 'tiankong', '2013-01-28 13:21:02', '再次修改数据库', '<font color="#000000"><span style="font-size: 22px; line-height: 29px;">今天重新设计了数据库。</span></font><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;">前段时间设计的那个数据库有很大的局限性，考虑的也不完善。</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;">尤其是关于主键的选择，默认id为主键，对于后台管理来说其实并不怎么好。</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;">尤其是在同步数据时，两个数据库的数据合并时都会出现一些小问题。</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;">所以最好自己设计自己的主键，这样就可以避免很多问题了。</span></font></div>', NULL, NULL),
('tiankong1359908257', 'tiankong', '2013-02-04 00:17:37', 'PHP 引用文件', '<div style="text-align: center;"><font color="#000000">PHP 引用文件</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">服务器端引用 (SSI) 用于创建可在多个页面重复使用的函数、页眉、页脚或元素。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">通过 include() 或 require() 函数，您可以在服务器执行 PHP 文件之前在该文件中插入一个文件的内容。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">除了它们处理错误的方式不同之外，这两个函数在其他方面都是相同的。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">include() 函数会生成一个警告（但是脚本会继续执行）。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">而 require() 函数会生成一个致命错误（fatal error）（在错误发生后脚本会停止执行）。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">正因为在文件不存在或被重命名后脚本不会继续执行，因此我们推荐使用 require() 而不是 include()。</font></div>', NULL, NULL),
('tiankonguse1', 'tiankonguse', '2013-01-26 16:52:07', 'test', 'tset', NULL, NULL),
('tiankonguse1359554429', 'tiankonguse', '2013-01-30 22:00:29', 'javascrip笔记之对象', '\r\n\r\n\r\n\r\n\r\n<div style="color: rgb(0, 0, 0); font-size: 22px;">在javascrip中，对象是非常灵活的。</div><div style="color: rgb(0, 0, 0); font-size: 22px;"><br></div><div style="color: rgb(0, 0, 0); font-size: 22px;">那到底什么是对象呢？</div><div style="color: rgb(0, 0, 0); font-size: 22px;"><br></div><div style="color: rgb(0, 0, 0); font-size: 22px;">简单的说对象就是一个数据和处理函数的综合体，即对于使用者来说只需知道有哪些属性和方法。</div><div style="color: rgb(0, 0, 0); font-size: 22px;"><br></div><div style="color: rgb(0, 0, 0); font-size: 22px;">属性及数据，方法及处理函数。</div><div style="color: rgb(0, 0, 0); font-size: 22px;"><br></div><div style="color: rgb(0, 0, 0); font-size: 22px;">1. 最简单的是内置对象。</div><div style="color: rgb(0, 0, 0); font-size: 22px;"><br></div><div style="color: rgb(0, 0, 0); font-size: 22px;">例如</div><div style="color: rgb(0, 0, 0); font-size: 22px;"><pre><code class="javascript">var obj = new Object();</code></pre></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><br></div><div style="color: rgb(0, 0, 0); font-size: 22px;">然后我们可以为这个对象添加属性：</div><div style="color: rgb(0, 0, 0); font-size: 22px;"><pre><code class="javascript">obj.name = "tiankong";</code></pre></div><div style="color: rgb(0, 0, 0); font-size: 22px;">当然，我们也可以为这个对象添加方法。</div><div style="color: rgb(0, 0, 0); font-size: 22px;"><pre><code class="javascript">obj.fun = myfun;\r\n\r\nfunction myfun(){\r\n	this.name = “shen”；\r\n}</code></pre></div><div style="color: rgb(0, 0, 0); font-size: 22px;">2. 自定义对象--通过构造函数建立对象</div><div style="color: rgb(0, 0, 0); font-size: 22px;"><pre><code class="javascript">function OBJ(name){\r\n	this.name = name;\r\n	this.fun = myfun;\r\n}\r\n\r\nfunction myfun(){\r\n	this.name = “shen”；\r\n}\r\n\r\nvar objone = new OBJ("tiankong");\r\n</code></pre></div><div style="color: rgb(0, 0, 0); font-size: 22px;">当然，我们也可以随时的对这个对象添加属性和方法。</div><div style="color: rgb(0, 0, 0); font-size: 22px;"><pre><code class="javascript">objone.newname = "shen";</code></pre></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;">但是，用这种方法添加的属性和方法是obj</span></font><span style="color: rgb(0, 0, 0); font-size: 22px; line-height: 29px;">one</span><span style="font-size: 22px; line-height: 29px; color: rgb(0, 0, 0);">私有的，对于OBJ的其他的实例化无法使用。</span></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><br></span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;">要想为这个对象永久性的添加属性和方法就要使用prototype。</span></font></div><div><pre><code class="javascript">OBJ.prototype.newname = "newname";</code></pre></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;">这个也很容易理解，这个是OBJ对象通过</span></font><span style="color: rgb(0, 0, 0); font-size: 22px; line-height: 29px;">prototype添加的属性和方法属于OBJ对象的，所以所有的实例化都可以使用。而前面那个，是实例化的objone添加的属性和方法当然只有自己可以使用了。</span></div><div><span style="color: rgb(0, 0, 0); font-size: 22px; line-height: 29px;"><br></span></div><div><span style="color: rgb(0, 0, 0); font-size: 22px; line-height: 29px;">3.</span><span style="color: rgb(0, 0, 0); font-size: 22px; line-height: 29px;">定义实例化的对象</span><span style="color: rgb(0, 0, 0); font-size: 22px; line-height: 29px;">。</span></div><div><span style="color: rgb(0, 0, 0); font-size: 22px; line-height: 29px;"><br></span></div><div><span style="color: rgb(0, 0, 0); font-size: 22px; line-height: 29px;">实际上，对于javascript，我们可以直接这样定义一个实例化的对象。</span></div><div><pre><code class="javascript">objtwo = {};</code></pre></div><div><span style="color: rgb(0, 0, 0); font-size: 22px; line-height: 29px;">objtwo就是一个对象了，然后我们可以像上面一样为它添加属性和方法。</span></div><div><span style="color: rgb(0, 0, 0); font-size: 22px; line-height: 29px;"><br></span></div><div><span style="color: rgb(0, 0, 0); font-size: 22px; line-height: 29px;"><br></span></div><div><span style="color: rgb(0, 0, 0); font-size: 22px; line-height: 29px;">若想开始时对象就有属性和方法也可以。</span></div><div><pre><code class="javascript">objthree = {\r\n	name:"tiankong",\r\n	myfun :function(){  }\r\n};</code></pre></div><div style="color: rgb(0, 0, 0); font-size: 22px;">4.说到这里，就要深入谈谈一些问题了。</div><div style="color: rgb(0, 0, 0); font-size: 22px;"><br></div><div style="color: rgb(0, 0, 0); font-size: 22px;">看到上面讲的定义实例化的对象，有什么想法或疑问没有呢？</div><div style="color: rgb(0, 0, 0); font-size: 22px;"><br></div><div style="color: rgb(0, 0, 0); font-size: 22px;">给个小提示：数组。</div><div style="color: rgb(0, 0, 0); font-size: 22px;"><br></div><div style="color: rgb(0, 0, 0); font-size: 22px;">对，看看上面的objthree，怎么和数组有点相似呢？</div><div style="color: rgb(0, 0, 0); font-size: 22px;"><br></div><div style="color: rgb(0, 0, 0); font-size: 22px;">其实数组也是对象，只不过数组这个对象有个特殊的性质，就是可以用下标来访问。</div><div style="color: rgb(0, 0, 0); font-size: 22px;"><br></div><div style="color: rgb(0, 0, 0); font-size: 22px;">难道对象不能用下标来访问？</div><div style="color: rgb(0, 0, 0); font-size: 22px;"><br></div><div style="color: rgb(0, 0, 0); font-size: 22px;">当然可以。和数组的一样，对于特殊数据，只能直接通过名字来访问相关数据。</div><div style="color: rgb(0, 0, 0); font-size: 22px;"><br></div><div style="color: rgb(0, 0, 0); font-size: 22px;">所以，上面的对象用数组的方式来访问属性和方法就是下面的形式了。</div><div style="color: rgb(0, 0, 0); font-size: 22px;"><pre><code class="javascript">objthree["name"];\r\n\r\nobjthree["myfun"]();</code></pre></div><div style="color: rgb(0, 0, 0); font-size: 22px;">这样的好处很大，这里就不多提了。</div><div style="color: rgb(0, 0, 0); font-size: 22px;"><br></div><div style="color: rgb(0, 0, 0); font-size: 22px;">5.javascript是面向对象语言。</div><div style="color: rgb(0, 0, 0); font-size: 22px;"><br></div><div style="color: rgb(0, 0, 0); font-size: 22px;">大家应该都知道面向对象语言应该必备哪些特性吧。</div><div style="color: rgb(0, 0, 0); font-size: 22px;"><br></div><div style="color: rgb(0, 0, 0); font-size: 22px;">既然javascript是面向对象语言，那就可以封装，继承，多态了。</div><div style="color: rgb(0, 0, 0); font-size: 22px;"><br></div><div style="color: rgb(0, 0, 0); font-size: 22px;">要好好利用它是面向对象语言的这个优势哦！</div><div style="color: rgb(0, 0, 0); font-size: 22px;"><br></div>', '', ''),
('tiankonguse1359556594', 'tiankonguse', '2013-01-30 22:36:34', 'javascript笔记之对象(二)封装', '\r\n\r\n\r\n\r\n\r\n<div><font color="#000000"><span style="font-size: 22px; line-height: 29px;">javascript是面向对象语言，可以封装数据。但是看下面的例子：</span></font></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><br></div><div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;">function OBJ(name){</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>private:</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">		</span>this.name = name;</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>public:</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">		</span>this.fun = myfun;</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;">}</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><br></span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;">function myfun(){</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>return this.name;</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;">}</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><br></span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;">var obj = new OBJ("tiankong");</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><br></span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;">alert(obj.name);</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;">alert(obj.fun());</span></font></div></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><br></span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;">当我们执行这段代码时，发现与我们想象的不一样，name并没有被封装起来。</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><br></span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;">那该怎么办呢？</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><br></span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;">我们就要使用模块模式的思想来解决上面遇到的问题了。</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><br></span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;">首先介绍一下var关键字的一些含义。</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><br></span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><b><div>var标示符定义的变量的作用域是局部的，尽在当前作用域有效。</div><div>而未使用var标示符定义的变量的作用域默认是全局的。</div></b></span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><br></span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;">那么我们就可以充分利用var关键字来封装数据了。</span></font></div><div><br></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><div>var obj =(function(){</div><div><span class="Apple-tab-span" style="white-space:pre">	</span>var name="tiankong";</div><div><span class="Apple-tab-span" style="white-space:pre">	</span>function Getname(){</div><div><span class="Apple-tab-span" style="white-space:pre">		</span>return name;</div><div><span class="Apple-tab-span" style="white-space:pre">	</span>}</div><div><span class="Apple-tab-span" style="white-space:pre">	</span>return {getname:Getname};</div><div>})();</div><div><br></div><div>alert(obj.name);</div><div>alert(obj.getname());</div></span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><br></span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;">上面的代码，第一个就显示的应该是未定义，因为name属于匿名函数的属性，不是obj的属性，所以不能直接得到name，也就不可以修改name了。</span></font></div><div><br></div>', '', ''),
('tiankonguse1359559203', 'tiankonguse', '2013-01-30 23:20:03', 'javascrip笔记之函数的重载与变参', '\r\n\r\n\r\n\r\n\r\n<div>说函数的重载，其实是不准确的。</div><div><br></div><div>因为javascript不支持函数重载，也就是说一个函数名在一个作用域里只能出现一次。</div><div><br></div><div>那为什么还以函数的重载与变参为标题呢？</div><div><br></div><div>那是因为javascrip的函数和C的函数一样，允许有变长参数列表。</div><div><br></div><div>这样我们就可以根据参数的个数以及类型来实现相应的功能，也就达到了重载的目的了。</div><div><br></div><div>函数的实参存在arguments里。</div><div><br></div><div>或者说一个函数也就是一个对象。</div><div><br></div><div>而这些对象有内置属性与方法。</div><div><br></div><div>arguments就是函数对象的一个属性，当然还有其他属性。</div><div><br></div><div>我们可以用arguments[下标]的形式来访问参数。</div><div><br></div><div>例如：</div><div><br></div><div><div>function funone(){</div><div><span class="Apple-tab-span" style="white-space:pre">	</span>alert(arguments);</div><div><span class="Apple-tab-span" style="white-space:pre">	</span>for(var name in arguments){</div><div><span class="Apple-tab-span" style="white-space:pre">		</span>alert(arguments[name]);</div><div><span class="Apple-tab-span" style="white-space:pre">	</span>}</div><div>}</div><div><br></div><div>funone("tiankong","shen");</div></div><div><br></div><div>这里提示一下，arguments不是数组对象，而是arguments对象，虽然长得和数组很像。</div><div><br></div><div>可以看到输出的结果，arguments是一个对象。</div><div><br></div><div><div>只是arguments输出的属性不是实参列表，而是下标数字，然而我们可以用数字去访问参数。</div></div><div><br></div><div>那对象arguments必不可少的就应该有个属性或方法来表示参数的个数了。</div><div><br></div><div>就是length</div><div><br></div><div><div>function funtwo(){</div><div><span class="Apple-tab-span" style="white-space:pre">	</span>for(var i = 0,len = arguments.length; i &lt; len; ++i){</div><div><span class="Apple-tab-span" style="white-space:pre">		</span>alert(arguments[i]);</div><div><span class="Apple-tab-span" style="white-space:pre">	</span>}</div><div>}</div><div><br></div><div>funtwo("tiankong","shen");</div></div><div><br></div><div>这里用到了for( in )，不多少什么了。</div><div><br></div><div>但还用到了++i,这个倒要多说一句，在这里++i与i++区别很大的，不要小看他。</div><div><br></div>', NULL, NULL),
('tiankonguse1359643510', 'tiankonguse', '2013-01-31 22:45:10', '2013-1-31小记', '今天中午起床的。<div><br></div><div>刷牙洗脸吃饭后，我就开始玩电脑了。</div><div><br></div><div>做的第一件事是测试网络。因为我的android软件需要通过网页获得一些数据。所以，我准备以自己的电脑为服务器，然后让我的手机能够以局域网的形式访问我的电脑。</div><div><br></div><div>虽然中间尝试多次都没弄好，但最后还是成功了。</div><div><br></div><div>但是我的电脑还未安装小米手机的开发驱动程序，下次联网时记得要下载一个。</div><div><br></div><div>服务器搭建好后，我开始学习android的基础知识。</div><div><br></div><div>学习的还挺多，有spinner，DataPicker，AutoComplete，ExpandableListActivity，SeekBar,RatingBar，AppWidget。</div><div><br></div><div>当中最复杂的是AppWidget，不过对于我的这个软件，不需要这个东西。</div><div><br></div><div>而貌似其他的都需要用上的。</div><div><br></div><div>今晚在把这个网站增加几个功能：修改日志，改进登陆注册页面。</div><div><br></div><div><br></div><div><br></div>', NULL, NULL),
('tiankonguse1359656251', 'tiankonguse', '2013-02-01 02:17:31', '日志修改测试', '开始不写什么了。<div><br></div><div>经过测试，已经实现了修改日志的功能。</div><div><br></div><div>只是，我用了四个小时才实现这个功能。</div><div><br></div><div>其实，前三个小时一直在处理一个问题。</div><div><br></div><div>那就是，把数据传进ifram中去。</div><div><br></div><div>但是，一直出现各种问题。</div><div><br></div><div>后来才想起来，可能是因为网页未加载完的原因。</div><div><br></div><div>在jquery中可以很好的避免这个问题，不过需要用一个函数，功能与onload功能类似。</div><div><br></div><div>当发现是这个问题后，一切都差不多了。</div><div><br></div><div>睡觉了。</div><div><br></div><div>晚安！</div>', NULL, NULL),
('tiankonguse1359786466', 'tiankonguse', '2013-02-02 14:27:46', '2013-2-2小记', '<div><font color="#000000"><span style="font-size: 22px; line-height: 29px;">写了篇文章，名叫《hml学习之文档(网页),标签(tag),元素,属性,字符实体</span></font><span style="font-size: 22px; line-height: 29px; color: rgb(0, 0, 0);">》。</span></div><font color="#000000"><span style="font-size: 22px;"><div><font color="#000000"><span style="font-size: 22px;"><br></span></font></div>这篇文章本来好长好长的。</span></font><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><br></span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;">我总结了html基础知识，尤其是写了很多细节，很多提示，很多注意事项。<br></span></font><div><div style="color: rgb(0, 0, 0); font-size: 22px;"><br></div><div style="color: rgb(0, 0, 0); font-size: 22px;">但是，发生了一场意外，什么都没了。</div><div style="color: rgb(0, 0, 0); font-size: 22px;"><br></div><div style="color: rgb(0, 0, 0); font-size: 22px;">这提醒我给这个网站在增加一个功能：动态保存blog。</div></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><br></div><div style="color: rgb(0, 0, 0); font-size: 22px;">好吧，以后加上这个功能。</div></div>', NULL, NULL),
('tiankonguse1359863639', 'tiankonguse', '2013-02-03 11:53:59', '静电引发系统“无法识别的USB设备”', '<div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><br></span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;">我朋友的电脑今天插上U盘就会出现:"无法识别的USB设备：跟这台计算机连接的一个USB设备运行不正常，WINDOWS无法识别"。</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><br></span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;">但计算机的USB光电鼠标一直可以正常使用，不管插在那一个USB口上。</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><br></span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;">这到底是什么原因致使的呀？</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><br></span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;">在“设备管理器”的“通用串口总线控制器”中我逐个停用USB控制器设备，发现只要停用“SiS PCI to USB Enhanced Host Controller”，卸载“unkown device”设备，进行扫描检测硬件改动能找到插在计算机上的打印机和U盘了，而且插在其它的USB口上也能识别。</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><br></span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;">后来发现有可能是计算机静电引发，关机后对计算机进行静电释放，重新启动计算机，连接在计算机上的打印机和U盘很快被识别。&nbsp;</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><br></span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;">简单的放电方法：把计算机电源线从插座上拔下来，手接触插头的三个金属头即可。</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><br></span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;">计算机静电释放的正确方法：拔除主机上所有的连线（包括电源线，鼠标键盘线，显示器数据线，网线，外接设备连线等），按主机电源开关3-5次，每次按住开关一秒钟，中间间隔1-2秒。&nbsp;</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><br></span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;">现时值冬季，气候变得越来越干燥，计算机更容易积累静电导致莫名的计算机故障，严重的会致使硬件损坏。所以，在冬季，做好计算机的静电防止工作显得更加重要，尤其是计算机的静电防止。</span></font></div>', NULL, NULL),
('tiankonguse1359863772', 'tiankonguse', '2013-02-03 11:56:12', 'javascript笔记之var标示符', '<div>var标示符定义的变量的作用域是局部的，当前作用域。</div><div><br></div><div>而未使用var标示符定义的变量的作用域默认是全局的。</div>\r\n\r\n\r\n\r\n\r\n', '', ''),
('tiankonguse1359864035', 'tiankonguse', '2013-02-03 12:00:35', 'MYSQL的primary key与key', '<div style="text-align: center;"><font color="#000000"><span style="font-size: 22px; line-height: 29px;">MYSQL的primary key与key</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><br></span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;">primary key是主键&nbsp;</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>一般为自动增长并且是非空 int类型的，</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>主要用来保证数据的唯一性 .</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><br></span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;">提示：对于</span></font><span style="color: rgb(0, 0, 0); font-size: 22px; line-height: 29px;">primary key，最好设置为自己控制的</span><span style="color: rgb(0, 0, 0); font-size: 22px; line-height: 29px;">非空 int类型，而不是让数据库自动生成。</span></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><br></span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;">Key是索引约束，</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>对表中字段进行约束索引的，</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>都是通过primary foreign unique等创建的。</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>常见有foreign key，外键关联用的</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;">&nbsp;</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;">&nbsp;</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;">MYSQL建立数据表时，KEY的设置有什么用？</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><br></span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>key是指关键字，在每一个表所有记录中唯一，普通的表一般可以省去这一项。&nbsp;</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>另外，设置了关键字，在查询表的时候会加速查询。</span></font></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><br></div>\r\n\r\n\r\n\r\n\r\n', NULL, NULL);
INSERT INTO `tk_blog` (`tk_blog_key`, `tk_blog_user`, `tk_blog_datetime`, `tk_blog_title`, `tk_blog_content`, `tk_blog_password`, `tk_blog_category`) VALUES
('tiankonguse1359864183', 'tiankonguse', '2013-02-03 12:03:03', 'css中class的简单认识', '<div><font color="#000000"><span style="font-size: 22px; line-height: 29px;">css中class的使用多种多样，如果不弄清楚什么时候那个class起作用，那网页就变得非常混乱了。</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><br></span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;">下面举个小例子，来看清楚class的工作原理</span></font></div><div><br></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><br></span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;">1.对所有含有该class的区域起作用。</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><br></span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>例.</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>.test01 {</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">		</span>font-size: 22px;</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>}</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><br></span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>&lt;div class="test01"&gt;test&lt;/div&gt;</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><br></span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>这时，test显示的是22号大小的字</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><br></span></font></div><div><span class="Apple-tab-span" style="white-space: pre; font-size: 22px; line-height: 29px;"><font color="#000000">	</font></span></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;">2.如果在同一class文件内有两个test01,则覆盖的优先级为下高上低，也就是下面的覆盖上面的,覆盖的是相同的属性，不同的属性会合并。</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><br></span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>例.</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>.test01 {</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">		</span>color: blue;</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">		</span>font-size: 22px;</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>}</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>.test01 {</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">		</span>font-size: 32px;</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>}</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><br></span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>&lt;div class="test01"&gt;test&lt;/div&gt;</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>这时，test显示的是32号大小，颜色为blue的字</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><br></span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><br></span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;">3.若果多个css文件中有test01，则覆盖的优先级为下面的文件优先级高，上面的优先级低。</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><br></span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>例.</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>test01.css文件内</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>.test01 {</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">		</span>font-size: 12px;</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>}</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><br></span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><br></span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>test02.css文件内</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>.test01 {</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">		</span>font-size: 32px;</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>}</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><br></span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><br></span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><br></span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>网页中加入css文件顺序</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>&lt;link rel="stylesheet" type="text/css" href="test01.css" /&gt;</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>&lt;link rel="stylesheet" type="text/css" href="test02.css" /&gt;</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><br></span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>使用test01</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>&lt;div class="test"&gt;test01&lt;/div&gt;</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><br></span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>这时，test显示的是32号大小的字</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><br></span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;">4.包含在&lt;style type="text/css"&gt;&lt;/style&gt;里的class的优先级高于&lt;link type="text/css" href="" /&gt;里面clss的优先级。</span></font></div><div><span class="Apple-tab-span" style="white-space: pre; font-size: 22px; line-height: 29px;"><font color="#000000">	</font></span></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>test01.css文件内</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>.test01 {</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">		</span>font-size: 12px;</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>}</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><br></span></font></div><div><span class="Apple-tab-span" style="white-space: pre; font-size: 22px; line-height: 29px;"><font color="#000000">	</font></span></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>&lt;style type="text/css"&gt;</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">		</span>.test01 {</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">			</span>font-size: 32px;</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">		</span>}</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>&lt;/style&gt;</span></font></div><div><span class="Apple-tab-span" style="white-space: pre; font-size: 22px; line-height: 29px;"><font color="#000000">	</font></span></div><div><span class="Apple-tab-span" style="white-space: pre; font-size: 22px; line-height: 29px;"><font color="#000000">	</font></span></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>使用test01</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>&lt;div class="test01"&gt;test&lt;/div&gt;</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><br></span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>这时，test显示的是32号大小的字</span></font></div><div><span class="Apple-tab-span" style="white-space: pre; font-size: 22px; line-height: 29px;"><font color="#000000">	</font></span></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;">5.<span class="Apple-tab-span" style="white-space:pre">	</span>包含在标签里的style=""里的属性的优先级最高。</span></font></div><div><span class="Apple-tab-span" style="white-space: pre; font-size: 22px; line-height: 29px;"><font color="#000000">	</font></span></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>&lt;style type="text/css"&gt;</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">		</span>.test01 {</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">			</span>font-size: 12px;</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">		</span>}</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>&lt;/style&gt;</span></font></div><div><span class="Apple-tab-span" style="white-space: pre; font-size: 22px; line-height: 29px;"><font color="#000000">	</font></span></div><div><span class="Apple-tab-span" style="white-space: pre; font-size: 22px; line-height: 29px;"><font color="#000000">	</font></span></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>使用test01</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>&lt;div class="test01" style="font-size: 32px;" &gt;test&lt;/div&gt;</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><br></span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>这时，test显示的是32号大小的字</span></font></div><div><span class="Apple-tab-span" style="white-space: pre; font-size: 22px; line-height: 29px;"><font color="#000000">	</font></span></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><br></span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;">6.标签class="test01 test02"。</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><br></span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>例.</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>.test01 {</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">		</span>font-size: 12px;</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">		</span>color: green;</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>}</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><br></span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>.test02 {</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">		</span>font-size: 22px;</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">		</span>color: blue;</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>}</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><br></span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>.test01.test02{</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">		</span>font-size: 32px;</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>}<span class="Apple-tab-span" style="white-space:pre">	</span></span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><br></span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>使用test01</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>&lt;div class="test01 test02"&gt;test&lt;/div&gt;</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><br></span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><br></span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>这时，优先级最高的是.test01.test02</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>然后剩下test01与test02,这两个class的优先级一样高。</span></font></div><div><span class="Apple-tab-span" style="white-space: pre; font-size: 22px; line-height: 29px;"><font color="#000000">	</font></span></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>所以test0显示的是32号大小，颜色为blue的字。</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><br></span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;">7. <span class="Apple-tab-span" style="white-space:pre">	</span>标签class="test01 test02" 与 class="test02 test01" 以及 .test01.test02{} 与 .test02.test01{}</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><br></span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>.test01 {</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">		</span>font-size: 12px;</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">		</span>color: green;</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>}</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><br></span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>.test02 {</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">		</span>font-size: 22px;</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">		</span>color: blue;</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>}</span></font></div><div><span class="Apple-tab-span" style="white-space: pre; font-size: 22px; line-height: 29px;"><font color="#000000">	</font></span></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>.test01.test02{</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">		</span>font-size: 32px;</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>}<span class="Apple-tab-span" style="white-space:pre">	</span></span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>.test02.test01{</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">		</span>font-size: 42px;</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>}</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><br></span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>&lt;div class="test01 test02"&gt;test01 test02&lt;/div&gt;</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>&lt;div class="test02 test01"&gt;test02 test01&lt;/div&gt;</span></font></div><div><span class="Apple-tab-span" style="white-space: pre; font-size: 22px; line-height: 29px;"><font color="#000000">	</font></span></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>对于class="test01 test02"。</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">		</span>class="test01 test02"中的class的顺序与优先级无关的。</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">		</span>所以输出的“test01 test02”与“test02 test01”的效果是完全一样的。</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>对于.test01.test02和.test02.test01</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">		</span>.test01.test02{}中的class的顺序也与优先级无关的。</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">		</span>所以.test01.test02{}与.test02.test01{}的优先级相同。</span></font></div><div><span class="Apple-tab-span" style="white-space: pre; font-size: 22px; line-height: 29px;"><font color="#000000">	</font></span></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>所以，这里的输出显示42号大小blue颜色的字。</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><br></span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><br></span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;">8. 层次样式中的.test01 .test02{}</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><br></span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>例.</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>.test01 {</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">		</span>font-size: 12px;</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">		</span>color: green;</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>}</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><br></span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>.test02 {</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">		</span>font-size: 22px;</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">		</span>color: blue;</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>}</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><br></span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><br></span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>&lt;div class="test01"&gt;</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">		</span>only test1</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">		</span>&lt;div class="test02"&gt; test01-&gt;test02 &lt;/div&gt;</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>&lt;/div&gt;</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><br></span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><br></span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>这里的test1的样式应该都知道是什么。</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>test01-&gt;test02的样式也能想出来,是先显示.test02{}的样式，然后显示.test01{}的样式。</span></font></div><div><span class="Apple-tab-span" style="white-space: pre; font-size: 22px; line-height: 29px;"><font color="#000000">	</font></span></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>但是再加个class呢</span></font></div><div><span class="Apple-tab-span" style="white-space: pre; font-size: 22px; line-height: 29px;"><font color="#000000">	</font></span></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>.test02.test01{</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">		</span>font-size: 42px;</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>}</span></font></div><div><span class="Apple-tab-span" style="white-space: pre; font-size: 22px; line-height: 29px;"><font color="#000000">	</font></span></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><br></span></font></div><div><span class="Apple-tab-span" style="white-space: pre; font-size: 22px; line-height: 29px;"><font color="#000000">	</font></span></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>这时就不确定了吧</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>首先说明一点，在层次样式上与.test02.test01没有关系。</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>.test02.test01{}只与并列的class有关系</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>这是也可以判定上面输出的样式了。</span></font></div><div><span class="Apple-tab-span" style="white-space: pre; font-size: 22px; line-height: 29px;"><font color="#000000">	</font></span></div><div><span class="Apple-tab-span" style="white-space: pre; font-size: 22px; line-height: 29px;"><font color="#000000">	</font></span></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>如果再加个class呢</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>.test01 .test02{</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">		</span>font-size: 72px;</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>}</span></font></div><div><span class="Apple-tab-span" style="white-space: pre; font-size: 22px; line-height: 29px;"><font color="#000000">	</font></span></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>之前没遇到过这个class.</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>这个就是层次样式。</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>意思是在标签中有test01的区域内的标签中还要有test02的才有.test01 .test02{}的样式。</span></font></div><div><span class="Apple-tab-span" style="white-space: pre; font-size: 22px; line-height: 29px;"><font color="#000000">	</font></span></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>但是说到这还有个问题。</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>对于test01-&gt;test02是先显示.test02 {}的样式还是先显示.test01 .test02{}的样式呢。</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>这里可以明确的说出来：先显示.test01 .test02{}的样式。</span></font></div><div><span class="Apple-tab-span" style="white-space: pre; font-size: 22px; line-height: 29px;"><font color="#000000">	</font></span></div><div><span class="Apple-tab-span" style="white-space: pre; font-size: 22px; line-height: 29px;"><font color="#000000">	</font></span></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>说到这里，就能确定test01-&gt;test02的样式了，为72号字大小，blue颜色。</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><br></span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><br></span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;">9.层次样式中依旧存在的问题。</span></font></div><div><span class="Apple-tab-span" style="white-space: pre; font-size: 22px; line-height: 29px;"><font color="#000000">	</font></span></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>上面的最后一个问题明显不知所以然的。</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>那只是随便举的例子，然后说出了优先级，那再来一个其他的，就不知道谁的优先级高了。</span></font></div><div><span class="Apple-tab-span" style="white-space: pre; font-size: 22px; line-height: 29px;"><font color="#000000">	</font></span></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>例。</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>.test1 .test2 {</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">		</span>color: blue;</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>}</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><br></span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>.test3 {</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">		</span>color: green;</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>}</span></font></div><div><span class="Apple-tab-span" style="white-space: pre; font-size: 22px; line-height: 29px;"><font color="#000000">	</font></span></div><div><span class="Apple-tab-span" style="white-space: pre; font-size: 22px; line-height: 29px;"><font color="#000000">	</font></span></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>&lt;div class="test1"&gt;</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">		</span>&lt;div class="test2"&gt;</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">			</span>&lt;div class="test3"&gt;test&lt;/div&gt;</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">		</span>&lt;/div&gt;</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>&lt;/div&gt;<span class="Apple-tab-span" style="white-space:pre">	</span></span></font></div><div><span class="Apple-tab-span" style="white-space: pre; font-size: 22px; line-height: 29px;"><font color="#000000">	</font></span></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>这里的test是先显示.test3 {}的属性还是先显示.test1 .test2 {}的属性呢。</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>有些人可能会说肯定先显示.test3 {}的了。</span></font></div><div><span class="Apple-tab-span" style="white-space: pre; font-size: 22px; line-height: 29px;"><font color="#000000">	</font></span></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>那这个例子呢</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>.test1 .test4 {</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">		</span>color: blue;</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>}</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><br></span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>.test2 .test4 {</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">		</span>color: gray;</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>}</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><br></span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>.test3 .test4 {</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">		</span>color: green;</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>}</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><br></span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>.test1 .test3 {</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">		</span>color: red;</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>}</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><br></span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>.test2 .test3 {</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">		</span>color: yellow;</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>}</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><br></span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>.test1 .test2 {</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">		</span>color: silver;</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>}<span class="Apple-tab-span" style="white-space:pre">	</span></span></font></div><div><span class="Apple-tab-span" style="white-space: pre; font-size: 22px; line-height: 29px;"><font color="#000000">	</font></span></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>&lt;div class="test1"&gt;</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">		</span>1</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">		</span>&lt;div class="test2"&gt;</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">			</span>2</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">			</span>&lt;div class="test3"&gt;</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">				</span>3</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">				</span>&lt;div class="test4"&gt;4&lt;/div&gt;</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">			</span>&lt;/div&gt;</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">		</span>&lt;/div&gt;</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>&lt;/div&gt;<span class="Apple-tab-span" style="white-space:pre">	</span></span></font></div><div><span class="Apple-tab-span" style="white-space: pre; font-size: 22px; line-height: 29px;"><font color="#000000">	</font></span></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>数字1,2,3,4分别显示什么颜色知道吗？</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>有时候根据简单的逻辑推理也能推理正确，其实就是一个很简单的逻辑。</span></font></div><div><span class="Apple-tab-span" style="white-space: pre; font-size: 22px; line-height: 29px;"><font color="#000000">	</font></span></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>把所有标签看作一个树的节点，要显示的内容为叶子，</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>从叶子到根节点只有一个有序路径。</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>上面的例子的路径为 test1 -&gt; test2 -&gt; test3 -&gt; test4</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>然后那些clss也都看作一个路径。</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>例如：.test1 .test4 {}看作是路径 test1 -&gt; test4</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>然后起作用的class是有序路径的子路径。</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>例如test1 -&gt; test4是test1 -&gt; test2 -&gt; test3 -&gt; test4的一个子路径。</span></font></div><div><span class="Apple-tab-span" style="white-space: pre; font-size: 22px; line-height: 29px;"><font color="#000000">	</font></span></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>这是我们逆着看，就是从叶子到根看。先遇到的子路径优先级最高。</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>例如路径中先遇到test4，所以子路径中有test4的优先级最高。</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>如果有多个，则看下一个节点，即看test3。</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>当一个子路径已经全部匹配了的时候，还不能确定这个子路径的优先级是最高的。</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>例如.test1 .test4 {}与.test4 {}，匹配test4后，又可以匹配test1，所以test1-&gt;test4比test4的优先级高。这就是上一小节上最后一个问题的原因。</span></font></div><div><span class="Apple-tab-span" style="white-space: pre; font-size: 22px; line-height: 29px;"><font color="#000000">	</font></span></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><span class="Apple-tab-span" style="white-space:pre">	</span>总结：如果有多层的话，就按内层优先排序，内层相等时再按外层排序。记住内层的优先高于外层的这一点就能解决一切了。</span></font></div><div><span class="Apple-tab-span" style="white-space: pre; font-size: 22px; line-height: 29px;"><font color="#000000">	</font></span></div><div><br></div>\n\n\n\n\n', NULL, NULL);
INSERT INTO `tk_blog` (`tk_blog_key`, `tk_blog_user`, `tk_blog_datetime`, `tk_blog_title`, `tk_blog_content`, `tk_blog_password`, `tk_blog_category`) VALUES
('tiankonguse1359869093', 'tiankonguse', '2013-02-03 13:24:53', 'PHP操作MySQL的函数', '<div style="color: rgb(0, 0, 0); font-size: 22px;">对于初学者，只要知道操作mysql的简单函数，就可以生存了。</div><div style="color: rgb(0, 0, 0); font-size: 22px;"><br></div><div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;">&nbsp;</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;">&nbsp;(1)mysql_connect(主机,用户名,口令);&nbsp;</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><br></span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;">返回一个连接号.&nbsp;</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><br></span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;">注意:mysql各用户的口令可以随该用户所在机器IP地址不同而改变.&nbsp;</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><br></span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;">主机可以是IP地址或域名,不过一般是"127.0.0.1" 或"localhost"</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><br></span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><br></span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;">(2)mysql_create_db(数据库名); 不推荐使用。</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><br></span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><br></span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;">(3)mysql_select_db(数据库名,连接号);&nbsp;</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><br></span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;">连接一个数据库.&nbsp;</span></font></div><div><br></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><br></span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;">(4)mysql_query(SQL语句,连接号);&nbsp;</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><br></span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;">如果SQL语句是select,则返回一个结果号.&nbsp;</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><br></span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;">如果失败,返回false.&nbsp;</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><br></span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><br></span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;">(5)mysql_fetch_array(结果号);&nbsp;</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><br></span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;">取出下一行,返回一个数组.</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><br></span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;">可以用数字下标访问(第一个字段是下标 0),也可以用字符串下标访问(即使用各字段名). 如已取了最后一行,返回false.&nbsp;</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><br></span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><br></span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;">(6)mysql_fetch_field(结果号,[字段序号]);&nbsp;</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><br></span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;">如无字段序号,取下一个字段.&nbsp;</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><br></span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;">返回一个哈希表,下标有: name,table,max_length,not_null, primary_key, unique_key,multiple_key,numeric,blob,type,unsigned,zerofill&nbsp;</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><br></span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><br></span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;">(7)mysql_num_rows(结果号);mysql_num_fields(结果号);&nbsp;</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><br></span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><br></span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;">(8)mysql_free_result(结果号);&nbsp;</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><br></span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><br></span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;">(9)mysql_list_dbs();</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;">&nbsp; &nbsp;mysql_list_tables(数据库名);&nbsp;</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><br></span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><br></span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;">(10)mysql_close(连接号);&nbsp;</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><br></span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><br></span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><br></span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;">与mysql_connect完全相似,但建立一个"永久连接",该连接一经建立永不 关闭,即使使用mysql_close函数或程序执行完毕也不关闭.</span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;"><br></span></font></div><div><font color="#000000"><span style="font-size: 22px; line-height: 29px;">下一次试图建 立永久连接时,系统如发现已存在一个永久连接,则直接返回该连接号而不重新创建.&nbsp;</span></font></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><br></div></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><br></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><br></div>', NULL, NULL),
('tiankonguse1359893811', 'tiankonguse', '2013-02-03 20:16:51', '引号测试', '第一行 一个单引号 ''<div><br></div><div>第二行 一个双引号 "</div><div><br></div><div>第三行一对单引号''''</div><div><br></div><div>第四行一对双引号""</div><div><br></div><div>第五行 一个中文单引号 ’<div><br></div><div>第六行 一个中文双引号 “</div><div><br></div><div>第七行一对中文单引号‘’</div><div><br></div><div>第八行一对中文双引号”“</div><div><br></div></div>', NULL, NULL),
('tiankonguse1359895734', 'tiankonguse', '2013-02-03 20:48:54', 'mysql字符转义', '\r\n\r\n\r\n\r\n\r\n<div>起初，我知道我的网站可以sql注入，但是我没放在心上。</div><div><br></div><div>我本以为这不会影响我的正常生活。</div><div><br></div><div>但是后来发生了一些奇怪的事情，我现在知道问题在哪了。</div><div><br></div><div>我曾经发过一篇文章，所一篇很长很长的文章不见了，一直不知道什么原因。</div><div><br></div><div>后来又写过一篇短文章，无法发表。终于发现是引号的问题了。</div><div><br></div><div>但是当时我文章用的是双引号，于是我字符串用单引号来包围着，就这样投机取巧的解决问题了。</div><div><br></div><div>可是，后来又有一篇文章中有双引号时，我想查了仅有的资料，没找到对字符转义的库函数，于是想着什么什么时候自己写一个转义函数。</div><div><br></div><div>后来，上网一搜，php有相关的库函数，于是给我的网站加上这个小布丁。</div><div><br></div><div>现在写文章终于可以随便的写了，不用怕转义字符了。</div><div><br></div><div><br></div>', NULL, NULL),
('tiankonguse1359896121', 'tiankonguse', '2013-02-03 20:55:21', '代码高亮测试之cpp', '<pre><code class="cpp">\r\n	#include &lt;staio.h&gt;\r\n\r\n	int main(){\r\n                int a = 1;\r\n		printf("hello word!");\r\n	}\r\n\r\n</code></pre>', NULL, NULL),
('tiankonguse1359950664', 'tiankonguse', '2013-02-04 12:04:24', '代码高亮测试之javascript', '<pre><code class="javascript">/*\r\n * \r\n * 当点击逛逛时，跳到主页\r\n * \r\n */\r\nfunction OnClickInputVisitor() {\r\n    window.location.href = "/";\r\n\r\n}</code><code style="color: rgb(0, 0, 0); font-size: 22px;"></code></pre>', NULL, NULL),
('tiankonguse1359968605', 'tiankonguse', '2013-02-04 17:03:25', 'JavaScript学习之comments', '<div><font color="#000000"><br></font></div><div><font color="#000000">JavaScript offers two forms of comments, block comments formed with /* */ and&nbsp;</font><span style="color: rgb(0, 0, 0);">line-ending comments starting with //.&nbsp;</span></div><div><font color="#000000"><br></font></div><div><font color="#000000">Comments should be used liberally to&nbsp;</font><span style="color: rgb(0, 0, 0);">improve the readability of your programs.&nbsp;</span></div><div><font color="#000000"><br></font></div><div><font color="#000000">Take care that the comments always accurately&nbsp;</font><span style="color: rgb(0, 0, 0);">describe the code.&nbsp;</span></div><div><font color="#000000"><br></font></div><div><font color="#000000">Obsolete comments are worse than no comments.</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">The /* */ form of block comments came from a language called PL/I.&nbsp;</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">PL/I chose&nbsp;</font><span style="color: rgb(0, 0, 0);">those strange pairs as the symbols for comments because they were unlikely to occur&nbsp;</span><span style="color: rgb(0, 0, 0);">in that language’s programs, except perhaps in string literals.&nbsp;</span></div><div><span style="color: rgb(0, 0, 0);"><br></span></div><div><span style="color: rgb(0, 0, 0);">In JavaScript, those&nbsp;</span><span style="color: rgb(0, 0, 0);">pairs can also occur in regular expression literals, so block comments are not safe for&nbsp;</span><span style="color: rgb(0, 0, 0);">commenting out blocks of code. For example:</span></div><div><font color="#000000"><br></font></div><div><font color="#000000">/*</font></div><div><font color="#000000">var rm_a = /a*/.match(s);</font></div><div><font color="#000000">*/</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">causes a syntax error.&nbsp;</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">So, it is recommended that /* */ comments be avoided and //&nbsp;</font><span style="color: rgb(0, 0, 0);">comments be used instead.&nbsp;</span></div><div><br></div>\r\n\r\n\r\n\r\n\r\n', NULL, NULL),
('tiankonguse1360409334', 'tiankonguse', '2013-02-09 19:28:54', '(转)一次选择，一份思考', '背景<br><br>都知道这移动互联网的浪潮席卷而来，该死的死该伤的伤，处在这个风口浪尖的我，可谓在风浪中翻滚了一番。如果问这汹涌的浪潮带给谁最大的伤害，答案不仅仅是创业失败的创业者，而是处在一线的developer。<br><br>&nbsp; &nbsp;<br><br>2012年是动荡的一年，微信的横空初始给无数人带来了无线的遐想，于是大公司纷纷坐不住了，口号响亮的要杀入移动互联网，产品要快速的迭代，项目短期要成型，这种情况在很多公司中恐怕不在少数，就在这样一个动荡的局势下，我开始了我的第一份工作。<br><br>&nbsp; &nbsp;<br><br>这一年的收获<br><br>我很幸运的来到一家国内比较知名的公司，开始了我的职业生涯，而我的第一个平台是不温不火的Windows phone（别觉得平台小就没有研究的必要，若不是做WP的人少恐怕我也没这个机会来到这家知名公司）从11年10月来到公司实习开始，到如今做了一年半的时间，从小雏鹰到如今也能偶尔写篇博客分享点东西出来，这其中成长确实不少。也凭着WP认识了很多圈子内的好友，更有幸和微软总部的代表加上全国知名公司的WP开发者碰过一次会议，至今难忘。<br><br>&nbsp; &nbsp;<br><br>这一年WP的发展<br><br>微软确实在手机OS端反应稍微慢了一拍，不过Windows phone从7到8的转变着实不小，系统的进步暂且不提，系统生态这一块的发展还是比较令人满意的。用户买来赏心悦目的lumia920也不至于没有好软件可以用。加上Nokia的发力，相信也能如黄忠般老当益壮。<br><br>&nbsp; &nbsp;<br><br>这一次的选择<br><br>理想很丰满，现实很骨感，在移动互联网大潮背景下知名海外上市公司WP平台的Developer的命运就是面临转岗。从公司角度看也许是这样的：我们的产品要如组合拳般，一个接一个的问世，如此公司变要转成创业公司的形态，先做IOS和Android，如果有一天某款产品打到了用户的痛处，大火，那么回过头来再考虑小平台。我就看作是个可以理解的观点吧，不管是公司乱了阵脚还是别有安排，总是我的选择来了：去或者留。<br><br>&nbsp; &nbsp;<br><br>这一次选择的思考<br><br>做为小雏鹰的我，一时间着实乱了阵脚。忙着问了许多圈中好友，多数支持我转行做IOS，但最后我觉得，站在他们工作了许多年的高级developer来看，多个平台经验很好，但从一个刚毕业的新人的角度看，转平台或许不利于我的发展。诚然IOS机会很多，但机会多的带价就是竞争大，作为一个技术还没来得及沉淀的新人来说，匆匆转去IOS并不利，对Windows phone的热爱会给我带来更大的学习的动力，会让我有时间来思考和沉淀技术。<br><br>如果平台是现实生活中的语言，那么Windows phone 算是个小语种了，但语种大小不影响练习写作，平台大小也不影响编程内力的提升。也许这次选择放到2年后，那我很可能会选择留下跨平台，但现在我正式选择打包走人，找个优秀的团队继续做我的Metro，做我的WP。<br><br>&nbsp; &nbsp;<br><br>思考后的思考<br><br>国家发展讲究以人为本，那么团队的发展也是如此，诚然公司需要优秀的idea来支撑，但公司最基本的原子还是团队，开发团队。很遗憾之前的WP小分队不得不解散了，很遗憾Market里面我们只做到了4星，诸多遗憾只能化为动力，期待着下一个优秀的团队，期待为下一个团队做更大的贡献。<br><br>', NULL, NULL),
('tiankonguse1360410188', 'tiankonguse', '2013-02-09 19:43:08', '(转)也说说学习', '这两天看了大卫张的《大卫谈学习》，对自己这几年的学历历程以及对学习的探索的感悟给表达出来了，也勾起我对学习的思考过程。<br><br>在大学的四年过程之后，我明白了为什么要上大学，大学里面要学习那些知识以及如何学习这些知识。相对于社会来说，大学选择的余地比较小，对学习的理解也仅仅限于学习知识，而知识主要就是本专业学科以及这些专业衍生的基本技能。<br><br>工作这么长，开始也一直按照大学的方式去学习，但是发现往往在达到一定程度之后，成长的速度开始减慢并且开始停滞，在漫长的摸索阶段，对学习重新了有了新的领悟。<br><br>就像哲学的三个本质问题一样，对于任何举行的主动学习行为，我们首先要明确三个问题，简称WWH：Why,What,How。<br><br>对于认识学习这个问题上，也比较适用，也就是说我们要明确三个重要的问题：<br><br>Why：为什么要学习<br>这个是自己人生价值观的一部分，也就是学习的目的。最基本的目的，就是知识改变命运。根据马洛斯需求层级模型，大多数人学习就是为了获得更好的生活质量，至少要实现社交的需求。这个也是大多数人学习的直接动机，赚钱则是学习的最基本目的。<br><br>然后，在能够达到自己期望的赚钱目标之后，一部分学习则是为了自己的兴趣，部分是为了了解这个世界本质，部分是充实自己的生活，等等。<br><br>价值观不同，对待学习的态度也就不一样，自己的选择也就不同。<br><br>What：学习什么<br>这个是选择问题。当你明确学习目标的时候，有太多的方法和途径能够让你达成自己的目标，从而影响你自己学习目标就是你的选择。我个人认为选择是人生中最重要的一个环节，因为人生也是一个不断选择的过程。就拿技术人员来说，有太多的技术可以学习，工作中也有不同的工作可以进行选择。可能很大部分人都是顺其自然，但是如果自己从未选择过，就很难有成长。<br><br>How：如何学习<br>这个是方法论，当选择确定之后，可以通过大量的获取知识以及方法论加以精炼，从而形成适合自己的方法论。大部分人都在追求如何学习历程，也就是方法论。人生的每个阶段，学习的内容不一样，学习的方法也就有差别。小学生，大学生，职场新鲜人以及职场老人都有所不同。每跳跃一个阶段，学习的重点和方式也就不一样。<br><br>当然，上面所说的比较虚，简单的对照上面的三个过程，谈谈自己的一些经历以及感悟<br><br>刚进入公司的时候，学习的目的是很简单的，就是能够掌握基础技术技能，适应公司的要求。这个时候目标明确，选择比较少，学习成长很快，有一些具体的技术可以去学习，例如spring,struts,ibatis,esb,xfire 等等。这一类学习比较简单，网上有太多的教程可以参考。<br><br>随着项目经验的增长，自己的基本技术技能以及业务经验已经完全能够满足公司的要求，自己也能够带团队做项目。这个阶段差不多是3年。这个时候也是面临选择的时候，可以选择基础技术，系统分析，业务分析，管理。个人选择不同，导致你学习的内容不同。就像大卫张说的，大多数人工作技能来自自己前三年的所积累的，如果重复三年前的工作，即使时间在厂，也不会给自己带来任何提升。<br><br>这个阶段，你满足的工作的基本技能都已经有很大的积累，要开始进行选择，选择的方向不同，学习的内容不同，从而影响自己思维模型以及行为模式。这个时候工作的方面就要进行重点选择。今天微博上有一个前端大牛说：“职场老人应该挑工作，如果这个工作只是以前的重复，应该进行选择，而不是想职场新人那样，任何工作就不拒绝”。我个人认为这种思想的出发点是好的，但是方法不太对，毕竟大多数时候，你很难拒绝领导给你的工作，如果每个人都是这么想的，公司就没有办法运行，垃圾活给谁干。对于重复的工作，做到60分及格即可，应该在这个工作过程中尝试新的思维或者对待这份工作的侧重点不一样。就拿现在自己工作举例，我参与了一个项目，由于做过太多的项目，我的重点就不是很漂亮的完成任务，得到表扬。而是在项目过程中，学习如何管理项目，如何和业务方沟通，如何管理风险以及团队部门的冲突，如何去和架构师PK，挑战自己的薄弱项，比如沟通表达能力，忽悠能力，思辨能力。<br><br>重复的劳动不会带来成长，这个和《程序员修炼之道》里面提到的dry原则思想——don’t repeat yourself。如果你发现你在做重复的劳动并且没有办法避免，那就没有必要花太多的精力在上面，60分即可，把自己精力花在对自己更会有价值的事情上。我向来不认同诸葛亮式的事必亲恭的做事方式，这是典型的重复。<br><br>要避免重复，就要开始进行选择。这个阶段对自己选择能力的一个挑战。要学会拒绝，学会取舍。领导给你的工作，如果对自己过去的重复，并且自己也没有在这基础上做的更好，就努力拒绝。在有限的时间内，你的精力是有限的，不可能每个方面都可以做好，选择出色的完成公司的kpi或者自己人生的kpi，也是你的选择，你要进行取舍。在我们公司，最典型的重复自己的工作就是 客户服务人员，kpi的衡量就是谁接的电话多，这完全是对工作的重复，有达到超出期望kpi所需要的时间，不如自己换一种方式去思考和学习来的实惠的多。<br><br>在如何学习上面，我觉得每个阶段都不一样，根据学习目标，学习的方法也不一样。我会进行看书，但是现在把书分为三类：<br><br>第一类是具体技术类的，主要介绍某一类具体的技术，如何使用，如何实现，以及使用场景的。这一类某一门具体的技术偏多，比如java语言设计，javascript等等。这个应该属于短期记忆性，现在都会大体翻过一遍，了解语法，基本功能，基本的设计思想等等，基本上不会话太多时间记忆，用的时候百度一下，属于短期记忆型的。<br><br>第二类是方法论方面：这一类知识比较抽象，是通过很多小case进行总结抽象出来的。背后会体现一种哲学思想。这一类书记争议比较多，因为介绍的方法论不一定是普遍适用的。学习这一类主要是训练自己的抽象思维能力以及思辨能力，久而久之，会形成自己的处事哲学。比如《六顶思考帽》，《软件设计架构模式》，《程序员修炼之道》，这些书都是要不断重复的去阅读，然后在实践中检验，从而加深理解。这类书会改变自己的思维习惯，是一种长期记忆行为。<br><br>第三类是社科哲学类：这一类主要是主要是对世界的理解，对人生的理解，提高自身修养的，扩展自己的见识。这方面的书籍比较虚，但是对自己影响是最大的，而且这一类书要选择自己认同的，因为没有正确与错误。目前自己在这个方面相对少一点，而中国人在这方面是比较弱的，可能和中国学生从小的教育有关。对一个人长期的思维习惯和行为模式则是通过这一类书影响的，这一类书我会定期的阅读，重复的阅读。比如《罗素的故事》，《大道至简》，《linux/uinx设计思想》，《暗时间》，《黑客与画家》<br><br>每个人要想往上提升，要对自己的抽象能力要求越高，就要改变自己的思维习惯和行为模式。改变思想习惯和行为模式，就需要慢慢训练长期记忆，而长期记忆则是通过对第二类以及第三类知识的学习。<br><br><div align="right">转于此博客<br></div>\r\n\r\n\r\n\r\n\r\n', NULL, NULL),
('tiankonguse1360639087', 'tiankonguse', '2013-02-12 11:18:07', 'CSS 单位之尺寸', '<div><br></div><div><font color="#000000">单位<span class="Apple-tab-span" style="white-space:pre">	</span>描述</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">%<span class="Apple-tab-span" style="white-space:pre">	</span>百分比</font></div><div><font color="#000000">in<span class="Apple-tab-span" style="white-space:pre">	</span>英寸</font></div><div><font color="#000000">cm<span class="Apple-tab-span" style="white-space:pre">	</span>厘米</font></div><div><font color="#000000">mm<span class="Apple-tab-span" style="white-space:pre">	</span>毫米</font></div><div><font color="#000000">em<span class="Apple-tab-span" style="white-space:pre">	</span></font><span style="color: rgb(0, 0, 0);">1em 等于当前的字体尺寸。</span></div><div><span style="color: rgb(0, 0, 0);">&nbsp; <span class="Apple-tab-span" style="white-space:pre">	</span>2em 等于当前字体尺寸的两倍。</span></div><div><font color="#000000">&nbsp; <span class="Apple-tab-span" style="white-space:pre">	</span>例如，如果某元素以 12pt 显示，那么 2em 是24pt。</font></div><div><font color="#000000">&nbsp; <span class="Apple-tab-span" style="white-space:pre">	</span>在 CSS 中，em 是非常有用的单位，因为它可以自动适应用户所使用的字体。</font></div><div><font color="#000000">ex<span class="Apple-tab-span" style="white-space:pre">	</span>一个 ex 是一个字体的 x-height。 (x-height 通常是字体尺寸的一半。)</font></div><div><font color="#000000">pt<span class="Apple-tab-span" style="white-space:pre">	</span>磅 (1 pt 等于 1/72 英寸)</font></div><div><font color="#000000">pc<span class="Apple-tab-span" style="white-space:pre">	</span>12 点活字 (1 pc 等于 12 点)</font></div><div><font color="#000000">px<span class="Apple-tab-span" style="white-space:pre">	</span>像素 (计算机屏幕上的一个点)</font></div><div><font color="#000000"><br></font></div><div><br></div>\r\n\r\n\r\n\r\n\r\n', NULL, NULL),
('tiankonguse1360639188', 'tiankonguse', '2013-02-12 11:19:48', 'CSS 单位之颜色', '<div style="color: rgb(68, 68, 68);"><font color="#000000">颜色</font></div><div style="color: rgb(68, 68, 68);"><font color="#000000"><br></font></div><div style="color: rgb(68, 68, 68);"><font color="#000000">单位<span class="Apple-tab-span" style="white-space: pre;">	</span>描述</font></div><div style="color: rgb(68, 68, 68);"><font color="#000000">(颜色名) &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;颜色名称 (比如 red)</font></div><div style="color: rgb(68, 68, 68);"><font color="#000000">rgb(x,x,x) &nbsp; &nbsp; &nbsp; &nbsp;RGB 值 (比如 rgb(255,0,0))</font></div><div style="color: rgb(68, 68, 68);"><font color="#000000">rgb(x%, x%, x%) &nbsp;&nbsp;RGB 百分比值 (比如 rgb(100%,0%,0%))</font></div><div style="color: rgb(68, 68, 68);"><font color="#000000">#rrggbb<span class="Apple-tab-span" style="white-space: pre;">	</span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;十六进制数 (比如 #ff0000)</font></div><div style="color: rgb(68, 68, 68);"><font color="#000000"><br></font></div><div style="color: rgb(68, 68, 68);"><font color="#000000">在后来的浏览器中，支持rgba(x,x,x,x)，最后一个x代表透明度。但是，IE7以下的浏览器不支持这个属性</font></div><div style="color: rgb(68, 68, 68);"><font color="#000000"><br></font></div><div style="color: rgb(68, 68, 68);"><font color="#000000"><br></font></div>\r\n\r\n\r\n\r\n\r\n', NULL, NULL),
('tiankonguse1360656430', 'tiankonguse', '2013-02-12 16:07:10', 'CSS 单位之颜色', '<div align="center">CSS 单位之颜色</div><br><blockquote><blockquote><blockquote><blockquote>CSS 颜色可以用以下方法来规定 CSS 中的颜色：<br></blockquote></blockquote></blockquote></blockquote><blockquote style="margin: 0 0 0 40px; border: none; padding: 0px;"><blockquote><blockquote><blockquote><blockquote><blockquote><blockquote><blockquote><blockquote><ul><li>十六进制色</li><li>RGB 颜色</li><li>RGBA 颜色</li><li>HSL 颜色</li><li>HSLA 颜色</li><li>预定义/跨浏览器颜色名</li></ul></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote><br><blockquote><blockquote><blockquote><blockquote><ol><li><b>十六进制颜色</b></li></ol></blockquote></blockquote></blockquote></blockquote>所有浏览器都支持十六进制颜色值。<br>十六进制颜色是这样规定的：#RRGGBB，其中的 RR（红色）、GG（绿色）、BB（蓝色）十六进制整数规定了颜色的成分。所有值必须介于 0 与 FF 之间。<br><br><b>RGB 颜色</b><br>所有浏览器都支持 RGB 颜色值。<br>RGB 颜色值是这样规定的：rgb(red, green, blue)。每个参数 (red、green 以及 blue) 定义颜色的强度，可以是介于 0 与 255 之间的整数，或者是百分比值（从 0% 到 100%）。<br><br><b>RGBA 颜色</b><br>RGBA 颜色值得到以下浏览器的支持：IE9+、Firefox 3+、Chrome、Safari 以及 Opera 10+。<br>RGBA 颜色值是 RGB 颜色值的扩展，带有一个 alpha 通道 - 它规定了对象的不透明度。<br>RGBA 颜色值是这样规定的：rgba(red, green, blue, alpha)。alpha 参数是介于 0.0（完全透明）与 1.0（完全不透明）的数字。<br><br><b>HSL 颜色</b><br>HSL 颜色值得到以下浏览器的支持：IE9+、Firefox、Chrome、Safari 以及 Opera 10+。<br>HSL 指的是 hue（色调）、saturation（饱和度）、lightness（亮度） - 表示颜色柱面坐标表示法。<br>HSL 颜色值是这样规定的：hsl(hue, saturation, lightness)。<br>Hue 是色盘上的度数（从 0 到 360） - 0 (或 360) 是红色，120 是绿色，240 是蓝色。Saturation 是百分比值；0% 意味着灰色，而 100% 是全彩。Lightness 同样是百分比值；0% 是黑色，100% 是白色。&nbsp;&nbsp; &nbsp;<br><br><br><b>HSLA 颜色</b><br>HSLA 颜色值得到以下浏览器的支持：IE9+、Firefox 3+、Chrome、Safari 以及 Opera 10+。<br>HSLA 颜色值是 HSL 颜色值的扩展，带有一个 alpha 通道 - 它规定了对象的不透明度。<br>HSLA 颜色值是这样规定的：hsla(hue, saturation, lightness, alpha)，其中的 alpha 参数定义不透明度。alpha 参数是介于 0.0（完全透明）与 1.0（完全不透明）的数字。<br><br>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n<div><br></div>', NULL, NULL);
INSERT INTO `tk_blog` (`tk_blog_key`, `tk_blog_user`, `tk_blog_datetime`, `tk_blog_title`, `tk_blog_content`, `tk_blog_password`, `tk_blog_category`) VALUES
('tiankonguse1360656896', 'tiankonguse', '2013-02-12 16:14:56', 'DOM基础', '<div style="text-align: center;"><font color="#000000">DOM基础</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">在文档对象模型 (DOM) 中，每个节点都是一个对象。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">对象拥有方法（功能）和属性（关于对象的信息），并可通过 JavaScript 进行访问和操作。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">属性经常按照“某事物是什么”的方式来使用（例如节点名是 "book"）。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">方法经常按照“对某事物做什么”的方式来使用（例如删除 "book" 节点）。</font></div><div><font color="#000000">&nbsp;</font></div><div><font color="#000000">三个重要的DOM 节点属性是：</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">nodeName 属性</font></div><blockquote style="margin: 0 0 0 40px; border: none; padding: 0px;"><div><font color="#000000">nodeName 属性规定节点的名称。</font></div><div><font color="#000000">nodeName 是只读的</font></div><div><font color="#000000">元素节点的 nodeName 与标签名相同</font></div><div><font color="#000000">属性节点的 nodeName 是属性的名称</font></div><div><font color="#000000">文本节点的 nodeName 永远是 #text</font></div><div><font color="#000000">文档节点的 nodeName 永远是 #document<span class="Apple-tab-span" style="white-space:pre">	</span></font></div></blockquote><div><font color="#000000"><br></font></div><div><font color="#000000">nodeValue 属性</font></div><blockquote style="margin: 0 0 0 40px; border: none; padding: 0px;"><div><font color="#000000">nodeValue 属性规定节点的值。</font></div><div><font color="#000000">元素节点的 nodeValue 是 undefined</font></div><div><font color="#000000">文本节点的 nodeValue 是文本自身</font></div><div><font color="#000000">属性节点的 nodeValue 是属性的值</font></div></blockquote><div><span class="Apple-tab-span" style="white-space:pre"><font color="#000000">	</font></span></div><div><font color="#000000">nodeType &nbsp;属性</font></div><blockquote style="margin: 0 0 0 40px; border: none; padding: 0px;"><div><font color="#000000">nodeType 属性规定节点的类型。</font></div><div><font color="#000000">nodeType 是只读的。</font></div><div><font color="#000000">最重要的节点类型是：</font></div></blockquote><blockquote style="margin: 0 0 0 40px; border: none; padding: 0px;"><blockquote style="margin: 0 0 0 40px; border: none; padding: 0px;"><div><font color="#000000">元素类型<span class="Apple-tab-span" style="white-space:pre">	</span>节点类型</font></div></blockquote><blockquote style="margin: 0 0 0 40px; border: none; padding: 0px;"><div><font color="#000000">元素<span class="Apple-tab-span" style="white-space:pre">	</span>1</font></div></blockquote><blockquote style="margin: 0 0 0 40px; border: none; padding: 0px;"><div><font color="#000000">属性<span class="Apple-tab-span" style="white-space:pre">	</span>2</font></div></blockquote><blockquote style="margin: 0 0 0 40px; border: none; padding: 0px;"><div><font color="#000000">文本<span class="Apple-tab-span" style="white-space:pre">	</span>3</font></div></blockquote><blockquote style="margin: 0 0 0 40px; border: none; padding: 0px;"><div><font color="#000000">注释<span class="Apple-tab-span" style="white-space:pre">	</span>8</font></div></blockquote><blockquote style="margin: 0 0 0 40px; border: none; padding: 0px;"><div><font color="#000000">文档<span class="Apple-tab-span" style="white-space:pre">	</span>9</font></div></blockquote></blockquote><div><font color="#000000"><br></font></div><div><font color="#000000">获取元素的值</font></div><blockquote style="margin: 0 0 0 40px; border: none; padding: 0px;"><div><font color="#000000">在 DOM 中，每种成分都是节点。元素节点没有文本值。</font></div><div><font color="#000000">元素节点的文本存储在子节点中。该节点称为文本节点。</font></div><div><font color="#000000">获取元素文本的方法，就是获取这个子节点（文本节点）的值。<span class="Apple-tab-span" style="white-space:pre">		</span></font></div></blockquote><div><span class="Apple-tab-span" style="white-space:pre"><font color="#000000">		</font></span></div><div><font color="#000000">节点列表（NodeList 对象）由 getElementsByTagName() 方法和 childNodes 属性返回。</font></div><blockquote style="margin: 0 0 0 40px; border: none; padding: 0px;"><div><font color="#000000">NodeList 对象表示节点的列表。</font></div><div><font color="#000000">节点列表是节点的数组。</font></div><div><font color="#000000">使用从 0 开始的下标来访问节点列表中的节点。</font></div><div><font color="#000000">NodeList 对象会保持自身的更新。如果删除或添加了元素，列表会自动更新。</font></div><div><font color="#000000">节点列表的 length 属性是列表中节点的数量。</font></div></blockquote><div><font color="#000000"><br></font></div><div><font color="#000000">DOM Attribute List (Named Node Map)</font></div><blockquote style="margin: 0 0 0 40px; border: none; padding: 0px;"><div><font color="#000000">元素节点的 attributes 属性返回属性节点的列表。</font></div><div><font color="#000000">这被称为 Named Node Map，除了方法和属性上的差别外，它与节点列表相似。</font></div><div><font color="#000000">属性列表会保持自身的更新。如果删除或添加属性，这个列表会自动更新。</font></div></blockquote><div><span class="Apple-tab-span" style="white-space:pre"><font color="#000000">	</font></span></div><div><span class="Apple-tab-span" style="white-space:pre"><font color="#000000">	</font></span></div><div><font color="#000000">DOM - 空白和换行</font></div><blockquote style="margin: 0 0 0 40px; border: none; padding: 0px;"><div><font color="#000000">XML 经常在节点之间含有换行或空白字符。</font></div><div><font color="#000000">这是在使用简单的编辑器（比如记事本）时经常出现的情况。<span class="Apple-tab-span" style="white-space:pre">	</span></font></div></blockquote><div><span class="Apple-tab-span" style="white-space:pre"><font color="#000000">	</font></span></div><div><font color="#000000">忽略节点间的空文本</font></div><blockquote style="margin: 0 0 0 40px; border: none; padding: 0px;"><div><font color="#000000">如需忽略元素节点之间的空文本节点，需要检查节点类型。元素节点的类型是 1。</font></div></blockquote><blockquote style="margin: 0 0 0 40px; border: none; padding: 0px;"><div><span style="color: rgb(0, 0, 0);">Firefox，以及其他一些浏览器，会把空的空白或换行作为文本节点来处理，而 Internet Explorer 不会这样。</span><span class="Apple-tab-span" style="color: rgb(0, 0, 0); white-space: pre;">	</span></div></blockquote><blockquote style="margin: 0 0 0 40px; border: none; padding: 0px;"><div><font color="#000000">这会在使用下列属性使产生一个问题：firstChild、lastChild、nextSibling、previousSibling。</font></div></blockquote><blockquote style="margin: 0 0 0 40px; border: none; padding: 0px;"><div><font color="#000000">为了避免定位到空的文本节点（元素节点之间的空格和换行符号），我们使用一个函数来检查节点的类型：</font></div></blockquote><div><font color="#000000">&nbsp; &nbsp; function get_nextSibling(n){</font></div><div><font color="#000000">&nbsp; &nbsp; &nbsp; &nbsp; y=n.nextSibling;</font></div><div><span style="color: rgb(0, 0, 0);">&nbsp; &nbsp; &nbsp; &nbsp;</span><span style="color: rgb(0, 0, 0);">&nbsp;</span><font color="#000000">while (y.nodeType!=1){</font></div><div><span style="color: rgb(0, 0, 0);">&nbsp; &nbsp;</span><span style="color: rgb(0, 0, 0);">&nbsp;</span><span style="color: rgb(0, 0, 0);">&nbsp; &nbsp;</span><span style="color: rgb(0, 0, 0);">&nbsp;</span><span style="color: rgb(0, 0, 0);">&nbsp; &nbsp;</span><span style="color: rgb(0, 0, 0);">&nbsp;</span><span style="color: rgb(0, 0, 0);">y=y.nextSibling;</span></div><div><span style="color: rgb(0, 0, 0);">&nbsp; &nbsp;</span><span style="color: rgb(0, 0, 0);">&nbsp;</span><span style="color: rgb(0, 0, 0);">&nbsp; &nbsp;</span><span style="color: rgb(0, 0, 0);">&nbsp;</span><span style="color: rgb(0, 0, 0);">}</span></div><div><span style="color: rgb(0, 0, 0);">&nbsp; &nbsp;</span><span style="color: rgb(0, 0, 0);">&nbsp;</span><span style="color: rgb(0, 0, 0);">&nbsp; &nbsp;</span><span style="color: rgb(0, 0, 0);">&nbsp;</span><span style="color: rgb(0, 0, 0);">return y;</span></div><div><span style="color: rgb(0, 0, 0);">&nbsp; &nbsp;</span><span style="color: rgb(0, 0, 0);">&nbsp;</span><font color="#000000">}</font></div><div><span style="color: rgb(0, 0, 0);">&nbsp; &nbsp;</span><span style="color: rgb(0, 0, 0);">&nbsp;</span><font color="#000000">我们就可以使用 get_nextSibling(node) 来代替node.nextSibling 属性。</font></div><div><span style="color: rgb(0, 0, 0); white-space: pre;">	</span></div><div><font color="#000000">定位 DOM 节点</font></div><div><span style="color: rgb(0, 0, 0);">&nbsp; &nbsp;</span><span style="color: rgb(0, 0, 0);">&nbsp;</span><font color="#000000">通过节点间的关系访问节点树中的节点，通常称为定位节点 （"navigating nodes"）。</font></div><div><span style="color: rgb(0, 0, 0);">&nbsp; &nbsp;</span><span style="color: rgb(0, 0, 0);">&nbsp;</span><font color="#000000">在 XML DOM 中，节点的关系被定义为节点的属性：</font></div><div><ul><li><span style="color: rgb(0, 0, 0);">&nbsp; &nbsp;</span><span style="color: rgb(0, 0, 0);">&nbsp;</span><span style="color: rgb(0, 0, 0);">&nbsp; &nbsp;</span><span style="color: rgb(0, 0, 0);">&nbsp;</span><span style="color: rgb(0, 0, 0);">parentNode</span></li><li><span style="color: rgb(0, 0, 0);">&nbsp; &nbsp;</span><span style="color: rgb(0, 0, 0);">&nbsp;</span><span style="color: rgb(0, 0, 0);">&nbsp; &nbsp;</span><span style="color: rgb(0, 0, 0);">&nbsp;</span><span style="color: rgb(0, 0, 0);">childNodes</span></li><li><span style="color: rgb(0, 0, 0);">&nbsp; &nbsp;</span><span style="color: rgb(0, 0, 0);">&nbsp;</span><span style="color: rgb(0, 0, 0);">&nbsp; &nbsp;</span><span style="color: rgb(0, 0, 0);">&nbsp;</span><span style="color: rgb(0, 0, 0);">firstChild</span></li><li><span style="color: rgb(0, 0, 0);">&nbsp; &nbsp;</span><span style="color: rgb(0, 0, 0);">&nbsp;</span><span style="color: rgb(0, 0, 0);">&nbsp; &nbsp;</span><span style="color: rgb(0, 0, 0);">&nbsp;</span><span style="color: rgb(0, 0, 0);">lastChild</span></li><li><span style="color: rgb(0, 0, 0);">&nbsp; &nbsp;</span><span style="color: rgb(0, 0, 0);">&nbsp;</span><span style="color: rgb(0, 0, 0);">&nbsp; &nbsp;</span><span style="color: rgb(0, 0, 0);">&nbsp;</span><span style="color: rgb(0, 0, 0);">nextSibling</span></li><li><span style="color: rgb(0, 0, 0);">&nbsp; &nbsp;</span><span style="color: rgb(0, 0, 0);">&nbsp;</span><span style="color: rgb(0, 0, 0);">&nbsp; &nbsp;</span><span style="color: rgb(0, 0, 0);">&nbsp;</span><span style="color: rgb(0, 0, 0);">previousSibling</span></li></ul></div><div><font color="#000000"><br></font></div><div><font color="#000000">删除元素节点</font></div><div><span style="color: rgb(0, 0, 0);">&nbsp; &nbsp;</span><span style="color: rgb(0, 0, 0);">&nbsp;</span><font color="#000000">removeChild() 方法删除指定的节点。</font></div><div><span style="color: rgb(0, 0, 0);">&nbsp; &nbsp;</span><span style="color: rgb(0, 0, 0);">&nbsp;</span><font color="#000000">当一个节点被删除时，其所有子节点也会被删除。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">删除自身 - 删除当前的节点</font></div><div><span style="color: rgb(0, 0, 0);">&nbsp; &nbsp;</span><span style="color: rgb(0, 0, 0);">&nbsp;</span><font color="#000000">removeChild() 方法是唯一可以删除指定节点的方法。</font></div><div><span style="color: rgb(0, 0, 0);">&nbsp; &nbsp;</span><span style="color: rgb(0, 0, 0);">&nbsp;</span><font color="#000000">当你已定位需要删除的节点时，就可以通过使用 parentNode 属性和 removeChild() 方法来删除此节点。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">删除文本节点</font></div><div><span style="color: rgb(0, 0, 0);">&nbsp; &nbsp;</span><span style="color: rgb(0, 0, 0);">&nbsp;</span><font color="#000000">removeChild() 方法可用于删除文本节点。</font></div><div><span style="color: rgb(0, 0, 0);">&nbsp; &nbsp;</span><span style="color: rgb(0, 0, 0);">&nbsp;</span><font color="#000000">不太常用 removeChild() 从节点删除文本。</font></div><div><span style="color: rgb(0, 0, 0);">&nbsp; &nbsp;</span><span style="color: rgb(0, 0, 0);">&nbsp;</span><font color="#000000">可以使用 nodeValue 属性代替它。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">清空文本节点</font></div><div><span style="color: rgb(0, 0, 0);">&nbsp; &nbsp;</span><span style="color: rgb(0, 0, 0);">&nbsp;</span><font color="#000000">nodeValue 属性可用于改变或清空文本节点的值。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">根据名称删除属性节点</font></div><div><span style="color: rgb(0, 0, 0);">&nbsp; &nbsp;</span><span style="color: rgb(0, 0, 0);">&nbsp;</span><font color="#000000">removeAttribute(name) 方法用于根据名称删除属性节点。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">根据对象删除属性节点</font></div><div><span style="color: rgb(0, 0, 0);">&nbsp; &nbsp;</span><span style="color: rgb(0, 0, 0);">&nbsp;</span><font color="#000000">removeAttributeNode(node) 方法通过使用 Node 对象作为参数，来删除属性节点。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">替换元素节点</font></div><div><span style="color: rgb(0, 0, 0);">&nbsp; &nbsp;</span><span style="color: rgb(0, 0, 0);">&nbsp;</span><font color="#000000">replaceChild() 方法用于替换节点。<span class="Apple-tab-span" style="white-space:pre">	</span></font></div><div><span class="Apple-tab-span" style="white-space:pre"><font color="#000000">	</font></span></div><div><font color="#000000">替换文本节点中的数据</font></div><div><span style="color: rgb(0, 0, 0);">&nbsp; &nbsp;</span><span style="color: rgb(0, 0, 0);">&nbsp;</span><font color="#000000">replaceData() 方法用于替换文本节点中的数据。</font></div><div><span style="color: rgb(0, 0, 0);">&nbsp; &nbsp;</span><span style="color: rgb(0, 0, 0);">&nbsp;</span><font color="#000000">replaceData() 方法有三个参数：</font></div><div><span style="color: rgb(0, 0, 0);">&nbsp; &nbsp;</span><span style="color: rgb(0, 0, 0);">&nbsp;</span><span style="color: rgb(0, 0, 0);">&nbsp; &nbsp;</span><span style="color: rgb(0, 0, 0);">&nbsp;</span><span style="color: rgb(0, 0, 0);">offset - 在何处开始替换字符。Offset 值以 0 开始。</span></div><div><span style="color: rgb(0, 0, 0);">&nbsp; &nbsp;</span><span style="color: rgb(0, 0, 0);">&nbsp;</span><span style="color: rgb(0, 0, 0);">&nbsp; &nbsp;</span><span style="color: rgb(0, 0, 0);">&nbsp;</span><span style="color: rgb(0, 0, 0);">length - 要替换多少字符</span></div><div><span style="color: rgb(0, 0, 0);">&nbsp; &nbsp;</span><span style="color: rgb(0, 0, 0);">&nbsp;</span><span style="color: rgb(0, 0, 0);">&nbsp; &nbsp;</span><span style="color: rgb(0, 0, 0);">&nbsp;</span><span style="color: rgb(0, 0, 0);">string - 要插入的字符串</span><span class="Apple-tab-span" style="color: rgb(0, 0, 0); white-space: pre;">	</span></div><div><font color="#000000"><br></font></div><div><font color="#000000">使用 nodeValue 属性</font></div><div><span style="color: rgb(0, 0, 0);">&nbsp; &nbsp;</span><span style="color: rgb(0, 0, 0);">&nbsp;</span><font color="#000000">用 nodeValue 属性来替换文本节点中数据会更加容易。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">创建新的元素节点</font></div><div><span style="color: rgb(0, 0, 0);">&nbsp; &nbsp;</span><span style="color: rgb(0, 0, 0);">&nbsp;</span><font color="#000000">createElement() 方法创建新的元素节点：</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">创建新的属性节点</font></div><div><span style="color: rgb(0, 0, 0);">&nbsp; &nbsp;</span><span style="color: rgb(0, 0, 0);">&nbsp;</span><font color="#000000">createAttribute() 用于创建新的属性节点：</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">通过使用 setAttribute() 来创建属性</font></div><div><span style="color: rgb(0, 0, 0);">&nbsp; &nbsp;</span><span style="color: rgb(0, 0, 0);">&nbsp;</span><font color="#000000">由于 setAttribute() 可以在属性不存在的情况下创建新的属性，我们可以使用这个方法来创建新属性。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">创建文本节点</font></div><div><span style="color: rgb(0, 0, 0);">&nbsp; &nbsp;</span><span style="color: rgb(0, 0, 0);">&nbsp;</span><font color="#000000">createTextNode() 方法创建新的文本节点：</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">创建注释节点</font></div><div><span style="color: rgb(0, 0, 0);">&nbsp; &nbsp;</span><span style="color: rgb(0, 0, 0);">&nbsp;</span><font color="#000000">createComment() 方法创建一个新的注释节点。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">添加节点 - appendChild()</font></div><div><span style="color: rgb(0, 0, 0);">&nbsp; &nbsp;</span><span style="color: rgb(0, 0, 0);">&nbsp;</span><font color="#000000">appendChild() 方法向已存在的节点添加子节点。</font></div><div><span style="color: rgb(0, 0, 0);">&nbsp; &nbsp;</span><span style="color: rgb(0, 0, 0);">&nbsp;</span><font color="#000000">新节点会添加（追加）到任何已存在的子节点之后。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">插入节点 - insertBefore()</font></div><div><span style="color: rgb(0, 0, 0);">&nbsp; &nbsp;</span><span style="color: rgb(0, 0, 0);">&nbsp;</span><font color="#000000">insertBefore() 方法用于在指定的子节点之前插入节点。</font></div><div><span style="color: rgb(0, 0, 0);">&nbsp; &nbsp;</span><span style="color: rgb(0, 0, 0);">&nbsp;</span><font color="#000000">在被添加的节点的位置很重要时，此方法很有用。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">添加新属性</font></div><div><span style="color: rgb(0, 0, 0);">&nbsp; &nbsp;</span><span style="color: rgb(0, 0, 0);">&nbsp;</span><font color="#000000">addAtribute() 这个方法是不存在的。</font></div><div><span style="color: rgb(0, 0, 0);">&nbsp; &nbsp;</span><span style="color: rgb(0, 0, 0);">&nbsp;</span><font color="#000000">如果属性不存在，则 setAttribute() 可创建一个新的属性：</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">向文本节点添加文本 - insertData()</font></div><div><span style="color: rgb(0, 0, 0);">&nbsp; &nbsp;</span><span style="color: rgb(0, 0, 0);">&nbsp;</span><font color="#000000">insertData() 方法将数据插入已有的文本节点中。</font></div><div><span style="color: rgb(0, 0, 0);">&nbsp; &nbsp;</span><span style="color: rgb(0, 0, 0);">&nbsp;</span><font color="#000000">insertData() 方法有两个参数：</font></div><div><span style="color: rgb(0, 0, 0);">&nbsp; &nbsp;</span><span style="color: rgb(0, 0, 0);">&nbsp;</span><span style="color: rgb(0, 0, 0);">&nbsp; &nbsp;</span><span style="color: rgb(0, 0, 0);">&nbsp;</span><span style="color: rgb(0, 0, 0);">offset - 在何处开始插入字符（以 0 开始）</span></div><div><span style="color: rgb(0, 0, 0);">&nbsp; &nbsp;</span><span style="color: rgb(0, 0, 0);">&nbsp;</span><span style="color: rgb(0, 0, 0);">&nbsp; &nbsp;</span><span style="color: rgb(0, 0, 0);">&nbsp;</span><span style="color: rgb(0, 0, 0);">string - 要插入的字符串</span></div><div><font color="#000000"><br></font></div><div><font color="#000000">复制节点</font></div><div><span style="color: rgb(0, 0, 0);">&nbsp; &nbsp;</span><span style="color: rgb(0, 0, 0);">&nbsp;</span><font color="#000000">cloneNode() 方法创建指定节点的副本。</font></div><div><span style="color: rgb(0, 0, 0);">&nbsp; &nbsp;</span><span style="color: rgb(0, 0, 0);">&nbsp;</span><font color="#000000">cloneNode() 方法有一个参数（true 或 false）。</font></div><div><span style="color: rgb(0, 0, 0);">&nbsp; &nbsp;</span><span style="color: rgb(0, 0, 0);">&nbsp;</span><font color="#000000">该参数指示被复制的节点是否包括原节点的所有属性和子节点。</font></div><div><br></div>', NULL, NULL);
INSERT INTO `tk_blog` (`tk_blog_key`, `tk_blog_user`, `tk_blog_datetime`, `tk_blog_title`, `tk_blog_content`, `tk_blog_password`, `tk_blog_category`) VALUES
('tiankonguse1360660465', 'tiankonguse', '2013-02-12 17:14:25', '正则表达式记录', '<div style="text-align: center;"><font color="#000000">正则表达式记录</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">这篇记录虽说是讲的是正则表达式，但是对于完全没学过自学过正则表达式的人来说，还是有一定的难度的。</font></div><div><font color="#000000">还有，不同的语言，正则表达式的规则有点细微差异，所以还是以各自语言的文档为准。</font></div><div><font color="#000000">因为我写的文章主要是对自己学的东西的备忘录。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000" size="6"><b>正则表达式是干什么的？</b></font></div><div><font color="#000000"><br></font></div><div><font color="#000000">&nbsp; &nbsp; 在编写处理字符串的程序或网页时，经常会有查找符合某些复杂规则的字符串的需要。</font></div><div><font color="#000000"><span class="Apple-tab-span" style="white-space:pre">	</span>正则表达式就是用于描述这些规则的工具。换句话说，正则表达式就是记录文本规则的代码。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">在编写处理字符串的程序或网页时，经常会有查找符合某些复杂规则的字符串的需要。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">正则表达式就是用于描述这些规则的工具。换句话说，正则表达式就是记录文本规则的代码。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">很可能你使用过Windows/Dos下用于文件查找的通配符(wildcard)，也就是*和?。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">如果你想查找某个目录下的所有的Word文档的话，你会搜索*.doc。在这里，*会被解释成任意的字符串。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">和通配符类似，正则表达式也是用来进行文本匹配的工具，只不过比起通配符，它能更精确地描述你的需求——当然，代价就是更复杂</font></div><div><font color="#000000"><br></font></div><div><font color="#000000" size="6"><b>简单例子</b></font></div><div><font color="#000000"><br></font></div><div><font color="#000000">学习正则表达式的最好方法是从例子开始，理解例子之后再自己对例子进行修改，实验。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">下面给出了不少简单的例子，并对它们作了详细的说明。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">假设你在一篇英文小说里查找hi，你可以使用正则表达式hi。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">这几乎是最简单的正则表达式了，它可以精确匹配这样的字符串：由两个字符组成，前一个字符是h,后一个是i。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">通常，处理正则表达式的工具会提供一个忽略大小写的选项，如果选中了这个选项，它可以匹配hi,HI,Hi,hI这四种情况中的任意一种。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">不幸的是，很多单词里包含hi这两个连续的字符，比如him,history,high等等。</font></div><div><font color="#000000">用hi来查找的话，这里边的hi也会被找出来。如果要精确地查找hi这个单词的话，我们应该使用\\bhi\\b。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">\\b是正则表达式规定的一个特殊代码（好吧，某些人叫它元字符，metacharacter），代表着单词的开头或结尾，也就是单词的分界处。</font></div><div><font color="#000000">虽然通常英文的单词是由空格，标点符号或者换行来分隔的，但是\\b并不匹配这些单词分隔字符中的任何一个，它只匹配一个位置。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">如果需要更精确的说法，\\b匹配这样的位置：它的前一个字符和后一个字符不全是(一个是字符,一个不是字符或不存在)\\w。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000"><br></font></div><div><font color="#000000">假如你要找的是hi后面不远处跟着一个Lucy，你应该用\\bhi\\b.*\\bLucy\\b。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">这里，.是另一个元字符，匹配除了换行符以外的任意字符。</font></div><div><font color="#000000">*同样是元字符，不过它代表的不是字符，也不是位置，而是数量——它指定*前边的内容可以连续重复使用任意次以使整个表达式得到匹配。</font></div><div><font color="#000000">因此，.*连在一起就意味着任意数量的不包含换行的字符。现在\\bhi\\b.*\\bLucy\\b的意思就很明显了：先是一个单词hi,然后是任意个任意字符(但不能是换行)，最后是Lucy这个单词。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">如果同时使用其它元字符，我们就能构造出功能更强大的正则表达式。比如下面这个例子：</font></div><div><font color="#000000">0\\d\\d-\\d\\d\\d\\d\\d\\d\\d\\d匹配这样的字符串：以0开头，然后是两个数字，然后是一个连字号“-”，最后是8个数字(也就是中国的电话号码。当然，这个例子只能匹配区号为3位的情形)。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">这里的\\d是个新的元字符，匹配一位数字(0，或1，或2，或……)。</font></div><div><font color="#000000">-不是元字符，只匹配它本身——连字符(或者减号，或者中横线，或者随你怎么称呼它)。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">为了避免那么多烦人的重复，我们也可以这样写这个表达式：0\\d{2}-\\d{8}。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">这里\\d后面的{2}({8})的意思是前面\\d必须连续重复匹配2次(8次)。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000"><br></font></div><div><font color="#000000" size="6"><b>样例测试</b></font></div><div><font color="#000000"><br></font></div><div><font color="#000000">上面稍微介绍后，我们可以写出很多简单的正则表达式。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">但是写的对不对呢？</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">这就要测试了。其实对于编程，能看到结果或效果能给人很大的动力。于是这里先看看怎么测试吧！</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">这里介绍两个测试的网址</font></div><div><font color="#000000">1.http://www.regexbuddy.com/</font></div><div><font color="#000000">2.http://regexpal.com/</font></div><div><font color="#000000"><br></font></div><div><font color="#000000" size="6"><b>元字符</b></font></div><div><font color="#000000"><br></font></div><div><font color="#000000">现在你已经知道几个很有用的元字符了，如\\b,.,*，还有\\d.</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">正则表达式里还有更多的元字符，比如\\s匹配任意的空白符，包括空格，制表符(Tab)，换行符，中文全角空格等。</font></div><div><font color="#000000">\\w匹配字母或数字或下划线或汉字等。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000"><br></font></div><div><font color="#000000">常用的元字符</font></div><div><font color="#000000">代码<span class="Apple-tab-span" style="white-space:pre">	</span>说明</font></div><div><font color="#000000">.<span class="Apple-tab-span" style="white-space:pre">	</span>匹配除换行符以外的任意字符</font></div><div><font color="#000000">\\w<span class="Apple-tab-span" style="white-space:pre">	</span>匹配字母或数字或下划线或汉字</font></div><div><font color="#000000">\\s<span class="Apple-tab-span" style="white-space:pre">	</span>匹配任意的空白符</font></div><div><font color="#000000">\\d<span class="Apple-tab-span" style="white-space:pre">	</span>匹配数字</font></div><div><font color="#000000">\\b<span class="Apple-tab-span" style="white-space:pre">	</span>匹配单词的开始或结束</font></div><div><font color="#000000">^<span class="Apple-tab-span" style="white-space:pre">	</span>匹配字符串的开始</font></div><div><font color="#000000">$<span class="Apple-tab-span" style="white-space:pre">	</span>匹配字符串的结束</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">下面来看看更多的例子：</font></div><div><font color="#000000">\\ba\\w*\\b匹配以字母a开头的单词——先是某个单词开始处(\\b)，然后是字母a,然后是任意数量的字母或数字(\\w*)，最后是单词结束处(\\b)。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">\\d+匹配1个或更多连续的数字。这里的+是和*类似的元字符，不同的是*匹配重复任意次(可能是0次)，而+则匹配重复1次或更多次。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">\\b\\w{6}\\b 匹配刚好6个字符的单词。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">元字符^（和数字6在同一个键位上的符号）和$都匹配一个位置，这和\\b有点类似。</font></div><div><font color="#000000">^匹配你要用来查找的字符串的开头，$匹配结尾。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">这两个代码在验证输入的内容时非常有用，比如一个网站如果要求你填写的QQ号必须为5位到12位数字时，可以使用：^\\d{5,12}$。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">这里的{5,12}和前面介绍过的{2}是类似的，只不过{2}匹配只能不多不少重复2次，{5,12}则是重复的次数不能少于5次，不能多于12次，否则都不匹配。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">因为使用了^和$，所以输入的整个字符串都要用来和\\d{5,12}来匹配，也就是说整个输入必须是5到12个数字，因此如果输入的QQ号能匹配这个正则表达式的话，那就符合要求了。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">和忽略大小写的选项类似，有些正则表达式处理工具还有一个处理多行的选项。如果选中了这个选项，^和$的意义就变成了匹配行的开始处和结束处</font></div><div><font color="#000000"><br></font></div><div><font color="#000000"><br></font></div><div><font color="#000000" size="6"><b>字符转义</b></font></div><div><font color="#000000"><br></font></div><div><font color="#000000">如果你想查找元字符本身的话，比如你查找.,或者*,就出现了问题：你没办法指定它们，因为它们会被解释成别的意思。这时你就得使用\\来取消这些字符的特殊意义。因此，你应该使用\\.和\\*。当然，要查找\\本身，你也得用\\\\.</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">例如：deerchao\\.net匹配deerchao.net，C:\\\\Windows匹配C:\\Windows。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000"><br></font></div><div><font color="#000000" size="6"><b>重复</b></font></div><div><font color="#000000">你已经看过了前面的*,+,{2},{5,12}这几个匹配重复的方式了。下面是正则表达式中所有的限定符(指定数量的代码，例如*,{5,12}等)：</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">常用的限定符</font></div><div><font color="#000000">代码/语法<span class="Apple-tab-span" style="white-space:pre">	</span>说明</font></div><div><font color="#000000">*<span class="Apple-tab-span" style="white-space:pre">	</span>重复零次或更多次</font></div><div><font color="#000000">+<span class="Apple-tab-span" style="white-space:pre">	</span>重复一次或更多次</font></div><div><font color="#000000">?<span class="Apple-tab-span" style="white-space:pre">	</span>重复零次或一次</font></div><div><font color="#000000">{n}<span class="Apple-tab-span" style="white-space:pre">	</span>重复n次</font></div><div><font color="#000000">{n,}<span class="Apple-tab-span" style="white-space:pre">	</span>重复n次或更多次</font></div><div><font color="#000000">{n,m}<span class="Apple-tab-span" style="white-space:pre">	</span>重复n到m次</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">下面是一些使用重复的例子：</font></div><div><font color="#000000">Windows\\d+匹配Windows后面跟1个或更多数字</font></div><div><font color="#000000">^\\w+匹配一行的第一个单词(或整个字符串的第一个单词，具体匹配哪个意思得看选项设置)</font></div><div><font color="#000000"><br></font></div><div><font color="#000000"><br></font></div><div><font color="#000000" size="6"><b>字符类</b></font></div><div><font color="#000000">要想查找数字，字母或数字，空白是很简单的，因为已经有了对应这些字符集合的元字符，但是如果你想匹配没有预定义元字符的字符集合(比如元音字母a,e,i,o,u),应该怎么办？</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">很简单，你只需要在方括号里列出它们就行了，像[aeiou]就匹配任何一个英文元音字母，[.?!]匹配标点符号(.或?或!)。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">我们也可以轻松地指定一个字符范围，像[0-9]代表的含意与\\d就是完全一致的：一位数字；同理[a-z0-9A-Z_]也完全等同于\\w（如果只考虑英文的话）。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">下面是一个更复杂的表达式：\\(?0\\d{2}[) -]?\\d{8}。</font></div><div><font color="#000000">这个表达式可以匹配几种格式的电话号码，像(010)88886666，或022-22334455，或02912345678等。我们对它进行一些分析吧：首先是一个转义字符\\(,它能出现0次或1次(?),然后是一个0，后面跟着2个数字(\\d{2})，然后是)或-或空格中的一个，它出现1次或不出现(?)，最后是8个数字(\\d{8})。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000"><br></font></div><div><font color="#000000" size="6"><b>分枝条件</b></font></div><div><font color="#000000"><br></font></div><div><font color="#000000">不幸的是，刚才那个表达式也能匹配010)12345678或(022-87654321这样的“不正确”的格式。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">要解决这个问题，我们需要用到分枝条件。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">正则表达式里的分枝条件指的是有几种规则，如果满足其中任意一种规则都应该当成匹配，具体方法是用|把不同的规则分隔开。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">听不明白？没关系，看例子：</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">0\\d{2}-\\d{8}|0\\d{3}-\\d{7}这个表达式能匹配两种以连字号分隔的电话号码：一种是三位区号，8位本地号(如010-12345678)，一种是4位区号，7位本地号(0376-2233445)。</font></div><div><font color="#000000">\\(?0\\d{2}\\)?[- ]?\\d{8}|0\\d{2}[- ]?\\d{8}这个表达式匹配3位区号的电话号码，其中区号可以用小括号括起来，也可以不用</font></div><div><font color="#000000">区号与本地号间可以用连字号或空格间隔，也可以没有间隔。</font></div><div><font color="#000000">你可以试试用分枝条件把这个表达式扩展成也支持4位区号的。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">\\d{5}-\\d{4}|\\d{5}这个表达式用于匹配美国的邮政编码。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">美国邮编的规则是5位数字，或者用连字号间隔的9位数字。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">之所以要给出这个例子是因为它能说明一个问题：使用分枝条件时，要注意各个条件的顺序。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">如果你把它改成\\d{5}|\\d{5}-\\d{4}的话，那么就只会匹配5位的邮编(以及9位邮编的前5位)。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">原因是匹配分枝条件时，将会从左到右地测试每个条件，如果满足了某个分枝的话，就不会去再管其它的条件了。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000" size="6"><b>分组</b></font></div><div><font color="#000000"><br></font></div><div><font color="#000000">我们已经提到了怎么重复单个字符（直接在字符后面加上限定符就行了）；但如果想要重复多个字符又该怎么办？</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">你可以用小括号来指定子表达式(也叫做分组)，然后你就可以指定这个子表达式的重复次数了，你也可以对子表达式进行其它一些操作(后面会有介绍)。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">(\\d{1,3}\\.){3}\\d{1,3}是一个简单的IP地址匹配表达式。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">要理解这个表达式，请按下列顺序分析它：\\d{1,3}匹配1到3位的数字，(\\d{1,3}\\.){3}匹配三位数字加上一个英文句号(这个整体也就是这个分组)重复3次，最后再加上一个一到三位的数字(\\d{1,3})。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">不幸的是，它也将匹配256.300.888.999这种不可能存在的IP地址。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">如果能使用算术比较的话，或许能简单地解决这个问题，但是正则表达式中并不提供关于数学的任何功能，所以只能使用冗长的分组，选择，字符类来描述一个正确的IP地址：((2[0-4]\\d|25[0-5]|[01]?\\d\\d?)\\.){3}(2[0-4]\\d|25[0-5]|[01]?\\d\\d?)。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">理解这个表达式的关键是理解2[0-4]\\d|25[0-5]|[01]?\\d\\d?，这里我就不细说了，你自己应该能分析得出来它的意义。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000"><br></font></div><div><font color="#000000" size="6"><b>反义</b></font></div><div><font color="#000000">有时需要查找不属于某个能简单定义的字符类的字符。比如想查找除了数字以外，其它任意字符都行的情况，这时需要用到反义：</font></div><div><font color="#000000">表3.常用的反义代码</font></div><div><font color="#000000">代码/语法<span class="Apple-tab-span" style="white-space:pre">	</span>说明</font></div><div><font color="#000000">\\W<span class="Apple-tab-span" style="white-space:pre">	</span>匹配任意不是字母，数字，下划线，汉字的字符</font></div><div><font color="#000000">\\S<span class="Apple-tab-span" style="white-space:pre">	</span>匹配任意不是空白符的字符</font></div><div><font color="#000000">\\D<span class="Apple-tab-span" style="white-space:pre">	</span>匹配任意非数字的字符</font></div><div><font color="#000000">\\B<span class="Apple-tab-span" style="white-space:pre">	</span>匹配不是单词开头或结束的位置</font></div><div><font color="#000000">[^x]<span class="Apple-tab-span" style="white-space:pre">	</span>匹配除了x以外的任意字符</font></div><div><font color="#000000">[^aeiou]<span class="Apple-tab-span" style="white-space:pre">	</span>匹配除了aeiou这几个字母以外的任意字符</font></div><div><font color="#000000">例子：\\S+匹配不包含空白符的字符串。</font></div><div><font color="#000000">&lt;a[^&gt;]+&gt;匹配用尖括号括起来的以a开头的字符串。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000" size="6"><b>后向引用</b></font></div><div><font color="#000000">使用小括号指定一个子表达式后，匹配这个子表达式的文本(也就是此分组捕获的内容)可以在表达式或其它程序中作进一步的处理。默认情况下，每个分组会自动拥有一个组号，规则是：从左向右，以分组的左括号为标志，第一个出现的分组的组号为1，第二个为2，以此类推。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">后向引用用于重复搜索前面某个分组匹配的文本。例如，\\1代表分组1匹配的文本。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">难以理解？请看示例：</font></div><div><font color="#000000">\\b(\\w+)\\b\\s+\\1\\b可以用来匹配重复的单词，像go go, 或者kitty kitty。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">这个表达式首先是一个单词，也就是单词开始处和结束处之间的多于一个的字母或数字(\\b(\\w+)\\b)，这个单词会被捕获到编号为1的分组中，然后是1个或几个空白符(\\s+)，最后是分组1中捕获的内容（也就是前面匹配的那个单词）(\\1)。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">你也可以自己指定子表达式的组名。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">要指定一个子表达式的组名，请使用这样的语法：(?&lt;Word&gt;\\w+)(或者把尖括号换成''也行：(?''Word''\\w+)),这样就把\\w+的组名指定为Word了。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">要反向引用这个分组捕获的内容，你可以使用\\k&lt;Word&gt;,所以上一个例子也可以写成这样：\\b(?&lt;Word&gt;\\w+)\\b\\s+\\k&lt;Word&gt;\\b。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">使用小括号的时候，还有很多特定用途的语法。下面列出了最常用的一些：</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">常用分组语法</font></div><div><font color="#000000">分类 &nbsp; &nbsp; &nbsp; 代码/语法 &nbsp; &nbsp;说明</font></div><div><font color="#000000">捕获 &nbsp; &nbsp; &nbsp;(exp) &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;匹配exp,并捕获文本到自动命名的组里</font></div><div><font color="#000000">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; (?&lt;name&gt;exp) &nbsp; 匹配exp,并捕获文本到名称为name的组里，也可以写成(?''name''exp)</font></div><div><font color="#000000">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; (?:exp) &nbsp; &nbsp; &nbsp; &nbsp;匹配exp,不捕获匹配的文本，也不给此分组分配组号</font></div><div><font color="#000000">零宽断言 (?=exp) &nbsp; &nbsp; &nbsp; &nbsp;匹配exp前面的位置</font></div><div><font color="#000000">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; (?&lt;=exp) &nbsp; &nbsp; &nbsp; 匹配exp后面的位置</font></div><div><font color="#000000">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; (?!exp) &nbsp; &nbsp; &nbsp; &nbsp;匹配后面跟的不是exp的位置</font></div><div><font color="#000000">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; (?&lt;!exp) &nbsp; &nbsp; &nbsp; 匹配前面不是exp的位置</font></div><div><font color="#000000">注释 &nbsp; &nbsp;(?#comment) &nbsp; &nbsp; 这种类型的分组不对正则表达式的处理产生任何影响，用于提供注释让人阅读</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">我们已经讨论了前两种语法。</font></div><div><font color="#000000">第三个(?:exp)不会改变正则表达式的处理方式，只是这样的组匹配的内容不会像前两种那样被捕获到某个组里面，也不会拥有组号。“</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">断言用来声明一个应该为真的事实。正则表达式中只有当断言为真时才会继续进行匹配。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000" size="6"><b>零宽断言</b></font></div><div><font color="#000000"><br></font></div><div><font color="#000000">接下来的四个用于查找在某些内容(但并不包括这些内容)之前或之后的东西，也就是说它们像\\b,^,$那样用于指定一个位置，这个位置应该满足一定的条件(即断言)，因此它们也被称为零宽断言。最好还是拿例子来说明吧：</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">(?=exp)也叫零宽度正预测先行断言，它断言自身出现的位置的后面能匹配表达式exp。比如\\b\\w+(?=ing\\b)，匹配以ing结尾的单词的前面部分(除了ing以外的部分)，如查找I''m singing while you''re dancing.时，它会匹配sing和danc。</font></div><div><font color="#000000">(?&lt;=exp)也叫零宽度正回顾后发断言，它断言自身出现的位置的前面能匹配表达式exp。比如(?&lt;=\\bre)\\w+\\b会匹配以re开头的单词的后半部分(除了re以外的部分)，例如在查找reading a book时，它匹配ading。</font></div><div><font color="#000000">假如你想要给一个很长的数字中每三位间加一个逗号(当然是从右边加起了)，你可以这样查找需要在前面和里面添加逗号的部分：((?&lt;=\\d)\\d{3})+\\b，用它对1234567890进行查找时结果是234567890。</font></div><div><font color="#000000">下面这个例子同时使用了这两种断言：(?&lt;=\\s)\\d+(?=\\s)匹配以空白符间隔的数字(再次强调，不包括这些空白符)。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000" size="6"><b>负向零宽断言</b></font></div><div><font color="#000000"><br></font></div><div><font color="#000000">前面我们提到过怎么查找不是某个字符或不在某个字符类里的字符的方法(反义)。但是如果我们只是想要确保某个字符没有出现，但并不想去匹配它时怎么办？例如，如果我们想查找这样的单词--它里面出现了字母q,但是q后面跟的不是字母u,我们可以尝试这样：</font></div><div><font color="#000000">\\b\\w*q[^u]\\w*\\b匹配包含后面不是字母u的字母q的单词。但是如果多做测试(或者你思维足够敏锐，直接就观察出来了)，你会发现，如果q出现在单词的结尾的话，像Iraq,Benq，这个表达式就会出错。这是因为[^u]总要匹配一个字符，所以如果q是单词的最后一个字符的话，后面的[^u]将会匹配q后面的单词分隔符(可能是空格，或者是句号或其它的什么)，后面的\\w*\\b将会匹配下一个单词，于是\\b\\w*q[^u]\\w*\\b就能匹配整个Iraq fighting。负向零宽断言能解决这样的问题，因为它只匹配一个位置，并不消费任何字符。现在，我们可以这样来解决这个问题：\\b\\w*q(?!u)\\w*\\b。</font></div><div><font color="#000000">零宽度负预测先行断言(?!exp)，断言此位置的后面不能匹配表达式exp。例如：\\d{3}(?!\\d)匹配三位数字，而且这三位数字的后面不能是数字；\\b((?!abc)\\w)+\\b匹配不包含连续字符串abc的单词。</font></div><div><font color="#000000">同理，我们可以用(?&lt;!exp),零宽度负回顾后发断言来断言此位置的前面不能匹配表达式exp：(?&lt;![a-z])\\d{7}匹配前面不是小写字母的七位数字。</font></div><div><font color="#000000">一个更复杂的例子：(?&lt;=&lt;(\\w+)&gt;).*(?=&lt;\\/\\1&gt;)匹配不包含属性的简单HTML标签内里的内容。(?&lt;=&lt;(\\w+)&gt;)指定了这样的前缀：被尖括号括起来的单词(比如可能是&lt;b&gt;)，然后是.*(任意的字符串),最后是一个后缀(?=&lt;\\/\\1&gt;)。注意后缀里的\\/，它用到了前面提过的字符转义；\\1则是一个反向引用，引用的正是捕获的第一组，前面的(\\w+)匹配的内容，这样如果前缀实际上是&lt;b&gt;的话，后缀就是&lt;/b&gt;了。整个表达式匹配的是&lt;b&gt;和&lt;/b&gt;之间的内容(再次提醒，不包括前缀和后缀本身)。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000" size="6"><b>注释</b></font></div><div><font color="#000000">小括号的另一种用途是通过语法(?#comment)来包含注释。例如：2[0-4]\\d(?#200-249)|25[0-5](?#250-255)|[01]?\\d\\d?(?#0-199)。</font></div><div><font color="#000000">要包含注释的话，最好是启用“忽略模式里的空白符”选项，这样在编写表达式时能任意的添加空格，Tab，换行，而实际使用时这些都将被忽略。启用这个选项后，在#后面到这一行结束的所有文本都将被当成注释忽略掉。例如，我们可以前面的一个表达式写成这样：</font></div><div><font color="#000000">&nbsp; &nbsp; &nbsp; (?&lt;= &nbsp; &nbsp;# 断言要匹配的文本的前缀</font></div><div><font color="#000000">&nbsp; &nbsp; &nbsp; &lt;(\\w+)&gt; # 查找尖括号括起来的字母或数字(即HTML/XML标签)</font></div><div><font color="#000000">&nbsp; &nbsp; &nbsp; ) &nbsp; &nbsp; &nbsp; # 前缀结束</font></div><div><font color="#000000">&nbsp; &nbsp; &nbsp; .* &nbsp; &nbsp; &nbsp;# 匹配任意文本</font></div><div><font color="#000000">&nbsp; &nbsp; &nbsp; (?= &nbsp; &nbsp; # 断言要匹配的文本的后缀</font></div><div><font color="#000000">&nbsp; &nbsp; &nbsp; &lt;\\/\\1&gt; &nbsp;# 查找尖括号括起来的内容：前面是一个"/"，后面是先前捕获的标签</font></div><div><font color="#000000">&nbsp; &nbsp; &nbsp; ) &nbsp; &nbsp; &nbsp; # 后缀结束</font></div><div><font color="#000000"><br></font></div><div><font color="#000000"><font size="6"><b>贪婪与懒惰</b></font><span class="Apple-tab-span" style="white-space:pre">	</span> &nbsp;</font></div><div><font color="#000000">当正则表达式中包含能接受重复的限定符时，通常的行为是（在使整个表达式能得到匹配的前提下）匹配尽可能多的字符。以这个表达式为例：a.*b，它将会匹配最长的以a开始，以b结束的字符串。如果用它来搜索aabab的话，它会匹配整个字符串aabab。这被称为贪婪匹配。</font></div><div><font color="#000000">有时，我们更需要懒惰匹配，也就是匹配尽可能少的字符。前面给出的限定符都可以被转化为懒惰匹配模式，只要在它后面加上一个问号?。这样.*?就意味着匹配任意数量的重复，但是在能使整个匹配成功的前提下使用最少的重复。现在看看懒惰版的例子吧：</font></div><div><font color="#000000">a.*?b匹配最短的，以a开始，以b结束的字符串。如果把它应用于aabab的话，它会匹配aab（第一到第三个字符）和ab（第四到第五个字符）。<span class="Apple-tab-span" style="white-space:pre">	</span> &nbsp;</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">懒惰限定符</font></div><div><font color="#000000">代码/语法<span class="Apple-tab-span" style="white-space:pre">	</span>说明</font></div><div><font color="#000000">*?<span class="Apple-tab-span" style="white-space:pre">	</span>重复任意次，但尽可能少重复</font></div><div><font color="#000000">+?<span class="Apple-tab-span" style="white-space:pre">	</span>重复1次或更多次，但尽可能少重复</font></div><div><font color="#000000">??<span class="Apple-tab-span" style="white-space:pre">	</span>重复0次或1次，但尽可能少重复</font></div><div><font color="#000000">{n,m}?<span class="Apple-tab-span" style="white-space:pre">	</span>重复n到m次，但尽可能少重复</font></div><div><font color="#000000">{n,}?<span class="Apple-tab-span" style="white-space:pre">	</span>重复n次以上，但尽可能少重复<span class="Apple-tab-span" style="white-space:pre">	</span> &nbsp;</font></div><div><font color="#000000"><br></font></div><div><font color="#000000"><br></font></div><div><font color="#000000" size="6"><b>处理选项</b></font></div><div><font color="#000000">上面介绍了几个选项如忽略大小写，处理多行等，这些选项能用来改变处理正则表达式的方式。下面是.Net中常用的正则表达式选项：</font></div><div><font color="#000000">表6.常用的处理选项</font></div><div><font color="#000000">名称<span class="Apple-tab-span" style="white-space:pre">	</span>说明</font></div><div><font color="#000000">IgnoreCase(忽略大小写)<span class="Apple-tab-span" style="white-space:pre">	</span>匹配时不区分大小写。</font></div><div><font color="#000000">Multiline(多行模式)<span class="Apple-tab-span" style="white-space:pre">	</span>更改^和$的含义，使它们分别在任意一行的行首和行尾匹配，而不仅仅在整个字符串的开头和结尾匹配。(在此模式下,$的精确含意是:匹配\\n之前的位置以及字符串结束前的位置.)</font></div><div><font color="#000000">Singleline(单行模式)<span class="Apple-tab-span" style="white-space:pre">	</span>更改.的含义，使它与每一个字符匹配（包括换行符\\n）。</font></div><div><font color="#000000">IgnorePatternWhitespace(忽略空白)<span class="Apple-tab-span" style="white-space:pre">	</span>忽略表达式中的非转义空白并启用由#标记的注释。</font></div><div><font color="#000000">ExplicitCapture(显式捕获)<span class="Apple-tab-span" style="white-space:pre">	</span>仅捕获已被显式命名的组。</font></div><div><font color="#000000">一个经常被问到的问题是：是不是只能同时使用多行模式和单行模式中的一种？答案是：不是。这两个选项之间没有任何关系，除了它们的名字比较相似（以至于让人感到疑惑）以外。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000" size="6"><b>关于正则表达式语言元素</b></font></div><div><font color="#000000"><br></font></div><div><font color="#000000">代码/语法<span class="Apple-tab-span" style="white-space:pre">	</span>说明</font></div><div><font color="#000000">\\a<span class="Apple-tab-span" style="white-space:pre">	</span>报警字符(打印它的效果是电脑嘀一声)</font></div><div><font color="#000000">\\b<span class="Apple-tab-span" style="white-space:pre">	</span>通常是单词分界位置，但如果在字符类里使用代表退格</font></div><div><font color="#000000">\\t<span class="Apple-tab-span" style="white-space:pre">	</span>制表符，Tab</font></div><div><font color="#000000">\\r<span class="Apple-tab-span" style="white-space:pre">	</span>回车</font></div><div><font color="#000000">\\v<span class="Apple-tab-span" style="white-space:pre">	</span>竖向制表符</font></div><div><font color="#000000">\\f<span class="Apple-tab-span" style="white-space:pre">	</span>换页符</font></div><div><font color="#000000">\\n<span class="Apple-tab-span" style="white-space:pre">	</span>换行符</font></div><div><font color="#000000">\\e<span class="Apple-tab-span" style="white-space:pre">	</span>Escape</font></div><div><font color="#000000">\\0nn<span class="Apple-tab-span" style="white-space:pre">	</span>ASCII代码中八进制代码为nn的字符</font></div><div><font color="#000000">\\xnn<span class="Apple-tab-span" style="white-space:pre">	</span>ASCII代码中十六进制代码为nn的字符</font></div><div><font color="#000000">\\unnnn<span class="Apple-tab-span" style="white-space:pre">	</span>Unicode代码中十六进制代码为nnnn的字符</font></div><div><font color="#000000">\\cN<span class="Apple-tab-span" style="white-space:pre">	</span>ASCII控制字符。比如\\cC代表Ctrl+C</font></div><div><font color="#000000">\\A<span class="Apple-tab-span" style="white-space:pre">	</span>字符串开头(类似^，但不受处理多行选项的影响)</font></div><div><font color="#000000">\\Z<span class="Apple-tab-span" style="white-space:pre">	</span>字符串结尾或行尾(不受处理多行选项的影响)</font></div><div><font color="#000000">\\z<span class="Apple-tab-span" style="white-space:pre">	</span>字符串结尾(类似$，但不受处理多行选项的影响)</font></div><div><font color="#000000">\\G<span class="Apple-tab-span" style="white-space:pre">	</span>当前搜索的开头</font></div><div><font color="#000000">\\p{name}<span class="Apple-tab-span" style="white-space:pre">	</span>Unicode中命名为name的字符类，例如\\p{IsGreek}</font></div><div><font color="#000000">(?&gt;exp)<span class="Apple-tab-span" style="white-space:pre">	</span>贪婪子表达式</font></div><div><font color="#000000">(?&lt;x&gt;-&lt;y&gt;exp)<span class="Apple-tab-span" style="white-space:pre">	</span>平衡组</font></div><div><font color="#000000">(?im-nsx:exp)<span class="Apple-tab-span" style="white-space:pre">	</span>在子表达式exp中改变处理选项</font></div><div><font color="#000000">(?im-nsx)<span class="Apple-tab-span" style="white-space:pre">	</span>为表达式后面的部分改变处理选项</font></div><div><font color="#000000">(?(exp)yes|no)<span class="Apple-tab-span" style="white-space:pre">	</span>把exp当作零宽正向先行断言，如果在这个位置能匹配，使用yes作为此组的表达式；否则使用no</font></div><div><font color="#000000">(?(exp)yes)<span class="Apple-tab-span" style="white-space:pre">	</span>同上，只是使用空表达式作为no</font></div><div><font color="#000000">(?(name)yes|no)<span class="Apple-tab-span" style="white-space:pre">	</span>如果命名为name的组捕获到了内容，使用yes作为表达式；否则使用no</font></div><div><font color="#000000">(?(name)yes)<span class="Apple-tab-span" style="white-space: pre;">	</span>同上，只是使用空表达式作为no</font></div>\r\n\r\n\r\n\r\n\r\n', NULL, NULL),
('tiankonguse1360673726', 'tiankonguse', '2013-02-12 20:55:26', '实现插入代码的功能', '<br><pre><code class="cpp">	#include &lt;stdio.h&gt;\r\n\r\n	int main(){\r\n                int a = 1;\r\n		printf("hello word!");\r\n	}</code></pre><br><pre><code class="cpp">	#include &lt;staio.h&gt;\r\n\r\n	int main(){\r\n                int a = 1;\r\n		printf("hello word!");\r\n	}</code></pre><div><br></div><br><pre><code class="cpp">	#include&lt;stdio.h&gt;\r\n	\r\n	int main(){\r\n\r\n		return 0;	\r\n	}</code></pre><div><br></div><div><br></div><div><br><pre><code class="cpp">	#include&lt;stdio.h&gt;\r\n	\r\n	int main(){\r\n		int s = 1 + 6;\r\n		if(s == 8){\r\n			\r\n		}\r\n		printf("%c %d\\n",''\\x2f'',''\\x2f'');\r\n		getchar();\r\n		return 0;	\r\n	}</code></pre><br></div><div><br><pre><code class="javascript">function warnCharsNotInBag(s, bag){\r\n    var i,c;\r\n    var returnString = true;\r\n\r\n    for (i = 0; i &lt; s.length; i++){\r\n        c = s.charAt(i);\r\n        if (bag.indexOf(c) == -1){\r\n            returnString = false;\r\n            break;\r\n        }\r\n    }\r\n\r\n    return returnString;\r\n}</code></pre><br></div>', NULL, NULL);
INSERT INTO `tk_blog` (`tk_blog_key`, `tk_blog_user`, `tk_blog_datetime`, `tk_blog_title`, `tk_blog_content`, `tk_blog_password`, `tk_blog_category`) VALUES
('tiankonguse1360676681', 'tiankonguse', '2013-02-12 21:44:41', 'WML基础标示符', '<div><font color="#000000"><div style="text-align: center;"><font size="6">WML基础标示符</font></div><div style="font-size: 22px;">WML是Wireless Markup Language的简称。</div><div style="font-size: 22px;"><br></div></font></div><div><font color="#000000" size="5"><b>Deck / Card 元素</b></font></div><div style="font-size: 22px;"><font color="#000000">开始标签 &nbsp; &nbsp;作用</font></div><div style="font-size: 22px;"><font color="#000000">&lt;access&gt; &nbsp; &nbsp;定义关于 deck 的访问控件的信息。</font></div><div style="font-size: 22px;"><font color="#000000">&lt;card&gt; &nbsp; &nbsp; &nbsp;定义 deck 中的一个 card。</font></div><div style="font-size: 22px;"><font color="#000000">&lt;head&gt; &nbsp; &nbsp; &nbsp;包含关于文档的信息。</font></div><div style="font-size: 22px;"><font color="#000000">&lt;meta&gt; &nbsp; &nbsp; &nbsp;定义有关文档的元信息。</font></div><div style="font-size: 22px;"><font color="#000000">&lt;template&gt; &nbsp;为 deck 中的所有 card 定义代码模板。</font></div><div style="font-size: 22px;"><font color="#000000">&lt;wml&gt; &nbsp; &nbsp; &nbsp; 定义 WML deck (WML 根)</font></div><div style="font-size: 22px;"><font color="#000000">&lt;!--&gt; &nbsp; &nbsp; &nbsp; 定义注释。</font></div><div style="font-size: 22px;"><font color="#000000"><br></font></div><div style="font-size: 22px;"><font color="#000000"><br></font></div><div><font color="#000000" size="5"><b>文本元素</b></font></div><div style="font-size: 22px;"><font color="#000000">开始标签 &nbsp; &nbsp;作用</font></div><div style="font-size: 22px;"><font color="#000000">&lt;br&gt; &nbsp; &nbsp; &nbsp; &nbsp;定义一个换行。</font></div><div style="font-size: 22px;"><font color="#000000">&lt;p&gt; &nbsp; &nbsp; &nbsp; &nbsp; 定义一个段落。</font></div><div style="font-size: 22px;"><font color="#000000">&lt;table&gt; &nbsp; &nbsp; 定义表格。</font></div><div style="font-size: 22px;"><font color="#000000">&lt;td&gt; &nbsp; &nbsp; &nbsp; &nbsp;定义一个表格单元（表格数据）。</font></div><div style="font-size: 22px;"><font color="#000000">&lt;tr&gt; &nbsp; &nbsp; &nbsp; &nbsp;定义一个表格行。</font></div><div style="font-size: 22px;"><font color="#000000"><br></font></div><div style="font-size: 22px;"><font color="#000000"><br></font></div><div><font color="#000000" size="5"><b>文本格式化标签</b></font></div><div style="font-size: 22px;"><font color="#000000">开始标签 &nbsp; &nbsp;作用</font></div><div style="font-size: 22px;"><font color="#000000">&lt;b&gt;<span class="Apple-tab-span" style="white-space:pre">	</span>&nbsp; &nbsp; 定义粗体的文本。</font></div><div style="font-size: 22px;"><font color="#000000">&lt;big&gt; &nbsp; &nbsp; &nbsp; 定义大号的文本。</font></div><div style="font-size: 22px;"><font color="#000000">&lt;em&gt; &nbsp; &nbsp; &nbsp; &nbsp;定义着重文本。</font></div><div style="font-size: 22px;"><font color="#000000">&lt;i&gt; &nbsp; &nbsp; &nbsp; &nbsp; 定义斜体的文本。</font></div><div style="font-size: 22px;"><font color="#000000">&lt;small&gt; &nbsp; &nbsp; 定义小号的文本。</font></div><div style="font-size: 22px;"><font color="#000000">&lt;strong&gt; &nbsp; &nbsp;定义强调文本。</font></div><div style="font-size: 22px;"><font color="#000000">&lt;u&gt; &nbsp; &nbsp; &nbsp; &nbsp; 定义下划线文本。</font></div><div style="font-size: 22px;"><font color="#000000"><br></font></div><div><font color="#000000" size="5"><b>锚元素</b></font></div><div style="font-size: 22px;"><font color="#000000">开始标签 &nbsp; &nbsp;作用</font></div><div style="font-size: 22px;"><font color="#000000">&lt;a&gt; &nbsp; &nbsp; &nbsp; &nbsp; 定义一个锚（链接）。</font></div><div style="font-size: 22px;"><font color="#000000">&lt;anchor&gt; &nbsp; &nbsp;定义一个锚（链接）。</font></div><div style="font-size: 22px;"><font color="#000000"><br></font></div><div><font color="#000000" size="5"><b>图像元素</b></font></div><div style="font-size: 22px;"><font color="#000000">开始标签 &nbsp;&nbsp;作用&nbsp;</font></div><div style="font-size: 22px;"><font color="#000000">&lt;img&gt;<span class="Apple-tab-span" style="white-space:pre">	</span> &nbsp; 定义图像。</font></div><div style="font-size: 22px;"><font color="#000000"><br></font></div><div><font color="#000000" size="5"><b>事件元素</b></font></div><div style="font-size: 22px;"><font color="#000000">开始标签 &nbsp; &nbsp;作用</font></div><div style="font-size: 22px;"><font color="#000000">&lt;do&gt; &nbsp; &nbsp; &nbsp; &nbsp;在用户点击屏幕上的一个单词或短语时激活一个任务。</font></div><div style="font-size: 22px;"><font color="#000000">&lt;onevent&gt; &nbsp; 包含了当某些事件发生时所执行的代码。</font></div><div style="font-size: 22px;"><font color="#000000">&lt;postfield&gt;&nbsp;包含了连同 &lt;go&gt; 标签被送往服务器的信息。</font></div><div style="font-size: 22px;"><font color="#000000"><br></font></div><div style="font-size: 22px;"><font color="#000000"><br></font></div><div><font color="#000000" size="5"><b>任务元素</b></font></div><div style="font-size: 22px;"><font color="#000000">开始标签 &nbsp; &nbsp;作用</font></div><div style="font-size: 22px;"><font color="#000000">&lt;go&gt;<span class="Apple-tab-span" style="white-space:pre">	</span> &nbsp; &nbsp;表示跳转到新卡片的动作。<span class="Apple-tab-span" style="white-space:pre">	</span></font></div><div style="font-size: 22px;"><font color="#000000">&lt;noop&gt;<span class="Apple-tab-span" style="white-space:pre">	</span> &nbsp; &nbsp;表示不进行任何动作（noop 指的是 "no operation"）。</font></div><div style="font-size: 22px;"><font color="#000000">&lt;prev&gt;<span class="Apple-tab-span" style="white-space:pre">	</span> &nbsp; &nbsp;表示返回前一个访问过的卡片。</font></div><div style="font-size: 22px;"><font color="#000000">&lt;refresh&gt; &nbsp;&nbsp;刷新指定的卡片变量。如果有变量显示在屏幕上，此任务也会刷新屏幕。</font></div><div style="font-size: 22px;"><font color="#000000"><br></font></div><div><font color="#000000" size="5"><b>输入元素</b></font></div><div style="font-size: 22px;"><font color="#000000">开始标签<span class="Apple-tab-span" style="white-space:pre">	</span>作用</font></div><div style="font-size: 22px;"><font color="#000000">&lt;fieldset&gt;<span class="Apple-tab-span" style="white-space:pre">	</span>用于对卡片中的相关元素进行分组。</font></div><div style="font-size: 22px;"><font color="#000000">&lt;input&gt; <span class="Apple-tab-span" style="white-space:pre">	</span>定义输入字段（用户可在其中输入文本的文本域）。</font></div><div style="font-size: 22px;"><font color="#000000">&lt;optgroup&gt;<span class="Apple-tab-span" style="white-space:pre">	</span>定义可选列表中的一组选项。</font></div><div style="font-size: 22px;"><font color="#000000">&lt;option&gt;<span class="Apple-tab-span" style="white-space:pre">	</span>定义可选列表中的选项。</font></div><div style="font-size: 22px;"><font color="#000000">&lt;select&gt;<span class="Apple-tab-span" style="white-space:pre">	</span>定义可选列表。</font></div><div style="font-size: 22px;"><font color="#000000"><br></font></div><div><font color="#000000" size="5"><b>变量元素</b></font></div><div style="font-size: 22px;"><font color="#000000">开始标签 &nbsp; &nbsp;作用</font></div><div style="font-size: 22px;"><font color="#000000">&lt;setvar&gt; &nbsp; &nbsp;在 &lt;go&gt;、&lt;prev&gt; 或 &lt;refresh&gt; 任务中把变量设置为指定的值。</font></div><div style="font-size: 22px;"><font color="#000000">&lt;timer&gt;<span class="Apple-tab-span" style="white-space:pre">	</span> &nbsp; &nbsp;定义卡片计时器。</font></div><div style="font-size: 22px;"><font color="#000000"><br></font></div><div><font color="#000000" size="5"><b>字符实体</b></font></div><div style="font-size: 22px;"><font color="#000000">结果 &nbsp; &nbsp;描述 &nbsp; &nbsp; &nbsp; &nbsp; <span class="Apple-tab-span" style="white-space:pre">	</span> &nbsp;<span class="Apple-tab-span" style="white-space:pre">	</span> &nbsp; 实体名称 &nbsp; &nbsp; &nbsp;实体编号</font></div><div style="font-size: 22px;"><font color="#000000">&amp; &nbsp; &nbsp; &nbsp; ampersand<span class="Apple-tab-span" style="white-space:pre">	</span> &nbsp;<span class="Apple-tab-span" style="white-space:pre">	</span> &nbsp;&nbsp;&amp;amp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&amp;#38;&nbsp;</font></div><div style="font-size: 22px;"><font color="#000000">'' &nbsp; &nbsp; &nbsp; apostrophe<span class="Apple-tab-span" style="white-space:pre">	</span> &nbsp; <span class="Apple-tab-span" style="white-space:pre">	</span>&nbsp;&nbsp;&nbsp;&amp;apos; &nbsp; &nbsp; &nbsp; &nbsp; &amp;#39;</font></div><div style="font-size: 22px;"><font color="#000000">&gt; &nbsp; &nbsp; &nbsp; greater-than &nbsp; <span class="Apple-tab-span" style="white-space:pre">	</span> &nbsp;<span class="Apple-tab-span" style="white-space:pre">	</span> &nbsp; &amp;gt; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &amp;#62;</font></div><div style="font-size: 22px;"><font color="#000000">&lt; &nbsp; &nbsp; &nbsp; less-than<span class="Apple-tab-span" style="white-space:pre">	</span> &nbsp;<span class="Apple-tab-span" style="white-space:pre">	</span> &nbsp;&nbsp;&amp;lt; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &amp;#60;</font></div><div style="font-size: 22px;"><font color="#000000">&nbsp; &nbsp; &nbsp; &nbsp; non-breaking space<span class="Apple-tab-span" style="white-space:pre">	</span> &nbsp; &amp;nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &amp;#160;</font></div><div style="font-size: 22px;"><font color="#000000">" &nbsp; &nbsp; &nbsp; quotation mark<span class="Apple-tab-span" style="white-space:pre">	</span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&amp;quot; &nbsp; &nbsp; &nbsp; &nbsp; &amp;#34;</font></div><div style="font-size: 22px;"><font color="#000000">&nbsp; &nbsp; &nbsp; &nbsp; soft hyphen<span class="Apple-tab-span" style="white-space:pre">	</span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &amp;shy; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&amp;#173;</font></div><div style="font-size: 22px;"><br></div>\r\n\r\n\r\n\r\n\r\n', NULL, NULL),
('tiankonguse1360677146', 'tiankonguse', '2013-02-12 21:52:26', 'WAP背景知识', '<div style="text-align: center;"><font color="#000000">WAP背景知识</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">WAP 协议用于在无线客户端（比如移动电话）上展示因特网内容。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">WAP 论坛 (WAP Forum)</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">无线应用协议 (WAP) 论坛为数字移动电话和其他无线终端开发了事实上的全球标准。&nbsp;</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">WAP 论坛发布了开放的全球无线协议规范，此规范基于已有的因特网标准，比如 XML 和 IP。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">这个 WAP 论坛已经被统一在开放移动联盟 (OMA) 中，不再以独立组织的形式存在。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">WAP 的规范化工作在 OMA 中得到了延续。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000"><br></font></div><div><font color="#000000">OMA (Open Mobile Alliance：开放移动联盟)</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">开发移动联盟是领导性的产业论坛，旨在发展市场驱动的、可共用的移动服务。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">OMA 在 2002 年 6 月成立时，有接近 200 个公司参与，包括处于世界领导地位的移动操作系统、设备和网络提供商、信息技术公司以及内容和服务提供商。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">"开放移动联盟" 这个新组织的是在 "开放移动平台"组织 （Open Mobile Architecture initiative）和 WAP 论坛的基础上形成的新国际化组织。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">这个国际新组织旨在推动全球实现开放的标准，确保互用性，推动全球移动服务市场发展，召示了一个全球共享的平台即将为国际移动互联产业的发展提供更广阔的舞台。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">"开放移动联盟"为移动通信业界提供开放的标准，创建满足市场及客户需要，跨国家、跨运营商和跨移动终端设备的互用性的服务。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">为了发展移动通信市场，支持"开放移动联盟"的公司将共同努力，推出一系列新颖、功能强劲的移动信息、通信和娱乐服务及应用系统。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">OMA 会员</font></div><div><font color="#000000">爱立信、IBM、英特尔、微软、摩托罗拉、NEC、诺基亚、NTT DoCoMo、Philips及三星等300以上的公司为其会员。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">设有15个工作组和2个委员会，正在制定许多规格。与ITU-T、W3C等国际标准化组织有密切合作关系。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">MobileDev - 无线应用开发 (Wireless Application Development)</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">MobileDev is the first Wireless Development Environment (WDE) specifically for WAP Internet applications.&nbsp;</font></div><div><font color="#000000">Its innovative open-ended development model integrates a graphical application mapper with a wizard interface and a rich tool set.&nbsp;</font></div><div><font color="#000000">MobileDev supports WAP technologies like WML, HDML, Microsoft Active Server Pages (ASP), Perl and Java Server Pages (JSP).</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">Using the GUI application mapper to show the relationships between objects, developers can quickly outline the components of a WAP application.&nbsp;</font></div><div><font color="#000000">Then they can take advantage of wizards that generate Decks and Cards in both WML and HDML, and use MobileDev''s code builder to write WML/HDML syntax that complements the wizard-generated code.</font></div><div><font color="#000000">The integration of the application mapper with wizards and the code builder provides a seamless WDE that delivers results fast.</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">MobileDev comes complete with its own powerful integrated runtime engine, MobileDev Server Script.&nbsp;</font></div><div><font color="#000000">Server Script can quickly create prototypes or build full-blown business WAP applications that can be natively connected to an RDBMS.&nbsp;</font></div><div><font color="#000000">MobileDev WDE is also designed to support development in ASP, JSP, Perl or other template-based server technologies.</font></div><div><font color="#000000"><br></font></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><br></div>\r\n\r\n\r\n\r\n\r\n', NULL, NULL),
('tiankonguse1360678070', 'tiankonguse', '2013-02-12 22:07:50', 'WAP基础知识', '<div style="text-align: center;"><font color="#000000" size="6">WAP基础知识</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">WAP 协议被设计为用来在诸如移动电话之类的无线客户端上展示因特网内容。</font></div><div><font color="#000000">WML 是用来创建供 WAP 浏览器显示的页面的语言。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000"><br></font></div><div><font color="#000000" size="5"><b>什么是 WAP？</b></font></div><div><font color="#000000">无线产品提出了 WAP 的理念。此标准的要点是在无线设备上展示因特网内容。</font></div><div><font color="#000000">WAP 指无线应用协议</font></div><div><font color="#000000">WAP 是一种应用程序通信协议</font></div><div><font color="#000000">WAP 被用来访问服务及信息</font></div><div><font color="#000000">WAP 继承于因特网标准</font></div><div><font color="#000000">WAP 针对诸如移动电话的手持设备</font></div><div><font color="#000000">WAP 是一种为微浏览器设计的协议</font></div><div><font color="#000000">WAP 使创建针对移动设备的 web 应用程序成为可能</font></div><div><font color="#000000">WAP 使用标记语言 WML（不是 HTML）</font></div><div><font color="#000000">WAP 作为 XML 1.0 的一种应用被定义</font></div><div><font color="#000000"><br></font></div><div><font color="#000000" size="5"><b>无线应用协议（Wireless Application Protocol）</b></font></div><div><font color="#000000">WAP 是一种用于在无线终端（比如数字移动电话）进行信息服务的主要的标准。</font></div><div><font color="#000000">WAP 标准基于因特网标准（HTML、XML 以及 TCP/IP）。</font></div><div><font color="#000000">它包括 WML 语言规范、WMLScript 规范以及无线电话应用接口规范（WTAI）。</font></div><div><font color="#000000">WAP 由 WAP 论坛（WAP forum ）发布，被爱立信、摩托罗拉、诺基亚以及 Unwired Planet 创建于 1997 年。</font></div><div><font color="#000000">论坛的成员目前占据着超过 90% 的全球手机市场，同时又是领先的基础设施提供商、软件提供商及其他机构。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000" size="5"><b>WAP 微浏览器</b></font></div><div><font color="#000000">为了适合小型无线终端，WAP使用了一种微浏览器。</font></div><div><font color="#000000">微浏览器是一种小型软件，可向硬件、内存和 CPU 发布基本的指令。它可以显示用一种由被称为 WML 的受限标记语言编写的信息。</font></div><div><font color="#000000">微浏览器也可翻译一种被称为 WMLScript 的 JavaScript 简化版。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000" size="5"><b>什么是 WML？</b></font></div><div><font color="#000000">WML 指无线标记语言。</font></div><div><font color="#000000">它是一种从 HTML 继承而来的标记语言，但是 WML 基于 XML，因此它较 HTML 更严格。</font></div><div><font color="#000000">WML 被用来创建可显示在 WAP 浏览器中的页面。</font></div><div><font color="#000000">用WML编写的页面被称为 DECKS。</font></div><div><font color="#000000">DECKS 是作为一套 CARDS 被构造的。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000" size="5"><b>什么是 WMLScript？</b></font></div><div><font color="#000000">WML 使用 WMLScript 在客户端运行简单的代码。</font></div><div><font color="#000000">WMLScript 是一种轻量级的 JavaScript 语言。</font></div><div><font color="#000000">不过，WML 脚本并不嵌在 WML 页面中。</font></div><div><font color="#000000">WML页面仅仅含有对脚本 URL 的引用。</font></div><div><font color="#000000">WML 脚本在 WAP 浏览器运行之前，需要先在服务器上被编译为字节编码。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000" size="5"><b>WAP 主页</b></font></div><div><font color="#000000">WAP 的主页与 HTML 的主页非常不同。</font></div><div><font color="#000000">用于 WAP 的标记语言是 WML (Wireless Markup Language)。</font></div><div><font color="#000000">WML 使用标签 - 类似 HTML - 但是语法更严格且遵守 XML 1.0 标准。</font></div><div><font color="#000000">WML 页面的扩展名是 *.WML，就像 HTML 页面的扩展名是 *.HTML 一样。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000" size="5"><b>WML 标签</b></font></div><div><font color="#000000">WML 几乎都是关于文本的。</font></div><div><font color="#000000">会拖慢手持设备之间通信的标签不会成为 WML 标志的组成部分。</font></div><div><font color="#000000">表格和图像的使用被严格限制。</font></div><div><font color="#000000">由于 WML 是一种 XML 应用，因此其标签对大小写敏感（&lt;wml&gt; 与 &lt;WML&gt; 不同），且标签必须正确关闭。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000" size="5"><b>WML Deck 和 Card</b></font></div><div><font color="#000000">WML 页面叫作 DECK（卡片组）。</font></div><div><font color="#000000">DECK 是由一系列 CARD （卡片）构造的，卡片之间通过链接彼此联系。</font></div><div><font color="#000000">card 元素可包含文本、标记、链接、输入字段、task、图像等等。</font></div><div><font color="#000000">当从移动电话访问一张 WML 页面时，页面中的所有卡片都会从 WAP 服务器下载下来。</font></div><div><font color="#000000">卡片之间的导航是通过电话的计算机完成的 - 在电话内部 - 不需要对服务器的额外访问。</font></div><div><font color="#000000"><br></font></div><div><br></div>\r\n\r\n\r\n\r\n\r\n', NULL, NULL),
('tiankonguse1360728841', 'tiankonguse', '2013-02-13 12:14:01', 'JavaScript之call方法', '<div style="text-align: center;"><font color="#000000">JavaScript之call方法</font></div><div><font color="#000000">&nbsp;</font></div><div><font color="#000000">&nbsp;call() 方法是与经典的对象冒充方法最相似的方法。</font></div><div><font color="#000000">&nbsp;它的第一个参数用作 this 的对象。其他参数都直接传递给函数自身。</font></div><div><font color="#000000">&nbsp;</font></div><div><font color="#000000">&nbsp;例如code1：</font></div><div><font color="#000000"><br></font></div><div><br><pre><code class="javascript">function sayColor(sPrefix,sSuffix) {\r\n    alert(sPrefix + this.color + sSuffix);\r\n};\r\n\r\nvar obj = new Object();\r\nobj.color = "blue";\r\n\r\nsayColor.call(obj, "The color is ", "a very nice color indeed.");</code></pre><br></div><div><font color="#000000"><br></font></div><div><font color="#000000">在这个例子中，函数 sayColor() 在对象外定义，即使它不属于任何对象，也可以引用关键字 this。</font></div><div><font color="#000000">对象 obj 的 color 属性等于 blue。</font></div><div><font color="#000000">调用 call() 方法时，第一个参数是 obj，说明应该赋予 sayColor() 函数中的 this 关键字值是 obj。</font></div><div><font color="#000000">第二个和第三个参数是字符串。</font></div><div><font color="#000000">它们与 sayColor() 函数中的参数 sPrefix 和 sSuffix 匹配，最后生成的消息 "The color is blue, a very nice color indeed." 将被显示出来。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">这里可能看的不是太明白。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">我这样转化一下就容易理解了。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">例code2:</font></div><div><font color="#000000"><br></font></div><div><br><pre><code class="javascript">var obj = new Object();\r\n\r\nobj.color = "blue";\r\n\r\nobj.sayColor = function(sPrefix,sSuffix) {\r\n    alert(sPrefix + this.color + sSuffix);\r\n};\r\n\r\nobj.sayColor("The color is ", "a very nice color indeed.");</code></pre><br></div><div><font color="#000000"><br></font></div><div><font color="#000000"><br></font></div><div><font color="#000000">这两个代码的效果一样，但是本质却不一样。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">最大的区别是code1中的sayColor是一个独立函数，而code2中的sayColor是对象的一个方法。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000"><br></font></div><div><font color="#000000"><br></font></div><div><font color="#000000">&nbsp;</font></div>\r\n\r\n\r\n\r\n\r\n', NULL, NULL),
('tiankonguse1360730187', 'tiankonguse', '2013-02-13 12:36:27', 'JavaScript之apply方法', '<div style="text-align: center;"><font color="#000000">JavaScript之apply方法</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">apply() 方法有两个参数，用作 this 的对象和要传递给函数的参数的数组。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">例code1：</font></div><div><font color="#000000"><br></font></div><div><br><pre><code class="javascript">function sayColor(sPrefix,sSuffix) {\r\n    alert(sPrefix + this.color + sSuffix);\r\n};\r\n\r\nvar obj = new Object();\r\nobj.color = "blue";\r\n\r\nsayColor.apply(obj, new Array("The color is ", "a very nice color indeed."));</code></pre><br></div><div><font color="#000000"><br></font></div><div><font color="#000000">这个例子与 <a href="http://127.0.0.1:8080/blog.php?blogid=tiankonguse1360728841">JavaScript之apply方法</a> 中的例子code2 相同，只是现在调用的是 apply() 方法。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">调用 apply() 方法时，第一个参数仍是 obj，说明应该赋予 sayColor() 函数中的 this 关键字值是 obj。</font></div><div><font color="#000000">第二个参数是由两个字符串构成的数组，与 sayColor() 函数中的参数 sPrefix 和 sSuffix 匹配，最后生成的消息仍是 "The color is blue, a very nice color indeed."，将被显示出来。</font></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><br></div>\r\n\r\n\r\n\r\n\r\n', NULL, NULL),
('tiankonguse1360731174', 'tiankonguse', '2013-02-13 12:52:54', 'JavaScript之arguments 对象', '<div style="text-align: center;"><font color="#000000">JavaScript之arguments 对象</font></div><div><font color="#000000"><br></font></div><div><font color="#000000"><b>arguments 对象</b></font></div><div><font color="#000000"><br></font></div><div><font color="#000000">在函数代码中，使用特殊对象 arguments，开发者无需明确指出参数名，就能访问它们。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000"><b>检测参数个数</b></font></div><div><font color="#000000"><br></font></div><div><font color="#000000">还可以用 arguments 对象检测函数的参数个数，引用属性 arguments.length 即可。</font></div><div><font color="#000000"><br></font></div><div><b style="color: rgb(0, 0, 0);">没有函数重载</b></div><div><font color="#000000">与其他程序设计语言不同，ECMAScript 不会验证传递给函数的参数个数是否等于函数定义的参数个数。</font></div><div><font color="#000000">开发者定义的函数都可以接受任意个数的参数（根据 Netscape 的文档，最多可接受 25 个），而不会引发任何错误。</font></div><div><font color="#000000">任何遗漏的参数都会以 undefined 传递给函数，多余的函数将忽略。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000"><br></font></div><div><font color="#000000"><b>模拟函数重载</b></font></div><div><font color="#000000">用 arguments 对象判断传递给函数的参数个数，即可模拟函数重载。</font></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><br></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><br></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><br></div>\r\n\r\n\r\n\r\n\r\n', NULL, NULL),
('tiankonguse1360731999', 'tiankonguse', '2013-02-13 13:06:39', 'JavaScript之Function 对象', '<div style="text-align: center;"><font color="#000000">JavaScript之Function 对象</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">ECMAScript 的函数实际上是功能完整的对象。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000"><b>Function 对象（类）</b></font></div><div><font color="#000000"><br></font></div><div><font color="#000000">ECMAScript 最令人感兴趣的可能莫过于函数实际上是功能完整的对象。</font></div><div><font color="#000000">Function 类可以表示开发者定义的任何函数。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000"><b>创建函数</b></font></div><div><font color="#000000"><br></font></div><div><font color="#000000">用 Function 类直接创建函数的语法如下：</font></div><div><br></div><div><pre><code class="javascript">var function_name = new function(arg1, arg2, ..., argN, function_body);</code></pre></div><div><br></div><div><font color="#000000">在上面的形式中，每个 arg 都是一个参数，最后一个参数是函数主体（要执行的代码）。这些参数必须是字符串。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">例code1</font></div><div><br></div><div><pre><code class="javascript">function sayHi(sName, sMessage) {\r\n  alert("Hello " + sName + sMessage);\r\n}</code></pre></div><div><font color="#000000"><br></font></div><div><font color="#000000">还可以这样定义它：</font></div><div><font color="#000000">例code2</font></div><div><br><pre><code class="javascript">var sayHi =  new Function("sName", "sMessage",</code><code class="javascript">    "alert(\\"Hello \\" + sName + sMessage);");</code></pre></div><div><font color="#000000"><br></font></div><div><font color="#000000">虽然由于字符串的关系，这种形式写起来有些困难，但有助于理解函数只不过是一种引用类型，它们的行为与用 Function 类明确创建的函数行为是相同的。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000"><br></font></div><div><font color="#000000"><b>函数重载</b></font></div><div><font color="#000000"><br></font></div><div><font color="#000000">例code3</font></div><div><br></div><div><pre><code class="javascript">function doAdd(iNum) {\r\n  alert(iNum + 20);\r\n}\r\n\r\nfunction doAdd(iNum) {\r\n  alert(iNum + 10);\r\n}\r\n\r\ndoAdd(10);	//输出 "20"</code></pre></div><div><font color="#000000"><br></font></div><div><font color="#000000">为什么呢？</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">如果以下面的形式重写该代码块，这个概念就清楚了：</font></div><div><font color="#000000">例code4</font></div><div><br></div><div><pre><code class="javascript">var doAdd = new Function("iNum", "alert(iNum + 20)");\r\nvar doAdd = new Function("iNum", "alert(iNum + 10)");\r\ndoAdd(10);</code></pre></div><div><font color="#000000"><br></font></div><div><font color="#000000">请观察这段代码，很显然，doAdd 的值被改成了指向不同对象的指针。</font></div><div><font color="#000000">函数名只是指向函数对象的引用值，行为就像其他对象一样。</font></div><div><font color="#000000">甚至可以使两个变量指向同一个函数：</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">例code5</font></div><div><br><pre><code class="javascript">var doAdd = new Function("iNum", "alert(iNum + 10)");\r\nvar alsodoAdd = doAdd;\r\ndoAdd(10);	//输出 "20"\r\nalsodoAdd(10);	//输出 "20"</code></pre></div><div><br></div><div><font color="#000000">在这里，变量 doAdd 被定义为函数，然后 alsodoAdd 被声明为指向同一个函数的指针。</font></div><div><font color="#000000">用这两个变量都可以执行该函数的代码，并输出相同的结果 - "20"。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000"><b>函数作为参数</b></font></div><div><font color="#000000"><br></font></div><div><font color="#000000">如果函数名只是指向函数的变量，那么可以把函数作为参数传递给另一个函数吗？</font></div><div><font color="#000000">回答是肯定的！</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">例code6</font></div><div><br></div><div><pre><code class="javascript">function callAnotherFunc(fnFunction, vArgument) {\r\n  fnFunction(vArgument);\r\n}\r\n\r\nvar doAdd = new Function("iNum", "alert(iNum + 10)");\r\n\r\ncallAnotherFunc(doAdd, 10);	//输出 "20"</code></pre></div><div><font color="#000000"><br></font></div><div><font color="#000000">在上面的例子中，callAnotherFunc() 有两个参数 - 要调用的函数和传递给该函数的参数。</font></div><div><font color="#000000">这段代码把 doAdd() 传递给 callAnotherFunc() 函数，参数是 10，输出 "20"。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">注意：尽管可以使用 Function 构造函数创建函数，但最好不要使用它，因为用它定义函数比用传统方式要慢得多。</font></div><div><font color="#000000">不过，所有函数都应看作 Function 类的实例。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000"><br></font></div><div><font color="#000000"><b>Function 对象的 length 属性</b></font></div><div><font color="#000000"><br></font></div><div><font color="#000000">函数属于引用类型，所以它们也有属性和方法。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">ECMAScript 定义的属性 length 声明了函数期望的参数个数。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">例code7</font></div><div><br></div><div><pre><code class="javascript">function doAdd(iNum) {\r\n  alert(iNum + 10);\r\n}\r\n\r\nfunction sayHi() {\r\n  alert("Hi");\r\n}\r\n\r\nalert(doAdd.length);	//输出 "1"\r\nalert(sayHi.length);	//输出 "0"</code></pre></div><div><font color="#000000"><br></font></div><div><font color="#000000"><b>Function 对象的方法</b></font></div><div><font color="#000000"><br></font></div><div><font color="#000000">Function 对象也有与所有对象共享的 valueOf() 方法和 toString() 方法。</font></div><div><font color="#000000">这两个方法返回的都是函数的源代码，在调试时尤其有用。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">例code8</font></div><div><br></div><div><pre><code class="javascript">function doAdd(iNum) {\r\n  alert(iNum + 10);\r\n}\r\n\r\ndocument.write(doAdd.toString());</code></pre><br></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><br></div>\r\n\r\n\r\n\r\n\r\n', NULL, NULL),
('tiankonguse1360732385', 'tiankonguse', '2013-02-13 13:13:05', 'JavaScript之闭包（closure）', '<div style="text-align: center;"><font color="#000000" size="5"><b>JavaScript之闭包（closure）</b></font></div><div><br></div><div><font color="#000000">闭包，指的是词法表示包括不被计算的变量的函数，也就是说，函数可以使用函数之外定义的变量。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000"><b>简单的闭包</b></font></div><div><font color="#000000"><br></font></div><div><font color="#000000">在 ECMAScript 中使用全局变量是一个简单的闭包实例。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">请思考下面这段代码：</font></div><div><font color="#000000">例code1</font></div><div><br></div><div><pre><code class="javascript">var sMessage = "hello world";\r\n\r\nfunction sayHelloWorld() {\r\n  alert(sMessage);\r\n}\r\n\r\nsayHelloWorld();</code></pre></div><div><font color="#000000"><br></font></div><div><font color="#000000">在上面这段代码中，脚本被载入内存后，并没有为函数 sayHelloWorld() 计算变量 sMessage 的值。</font></div><div><font color="#000000">该函数捕获 sMessage 的值只是为了以后的使用，也就是说，解释程序知道在调用该函数时要检查 sMessage 的值。</font></div><div><font color="#000000">sMessage 将在函数调用 sayHelloWorld() 时（最后一行）被赋值，显示消息 "hello world"。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000"><b>复杂的闭包</b></font></div><div><font color="#000000"><br></font></div><div><font color="#000000">在一个函数中定义另一个会使闭包变得更加复杂。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">例code2</font></div><div><br></div><div><pre><code class="javascript">var iBaseNum = 10;\r\n\r\nfunction addNum(iNum1, iNum2) {\r\n  function doAdd() {\r\n    return iNum1 + iNum2 + iBaseNum;\r\n  }\r\n  return doAdd();\r\n}</code></pre></div><div><font color="#000000"><br></font></div><div><font color="#000000">这里，函数 addNum() 包括函数 doAdd() （闭包）。</font></div><div><font color="#000000">内部函数是一个闭包，因为它将获取外部函数的参数 iNum1 和 iNum2 以及全局变量 iBaseNum 的值。&nbsp;</font></div><div><font color="#000000">addNum() 的最后一步调用了 doAdd()，把两个参数和全局变量相加，并返回它们的和。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">这里要掌握的重要概念是，doAdd() 函数根本不接受参数，它使用的值是从执行环境中获取的。</font></div><div><font color="#000000">可以看到，闭包是 JAVAScript 中非常强大多用的一部分，可用于执行复杂的计算。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000"><b>提示</b></font></div><div><font color="#000000">就像使用任何高级函数一样，使用闭包要小心，因为它们可能会变得非常复杂。</font></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><br></div>\r\n\r\n\r\n\r\n\r\n', NULL, NULL),
('tiankonguse1360736627', 'tiankonguse', '2013-02-13 14:23:47', 'JavaScript 之 Object对象', '<div style="text-align: center;"><font color="#000000" size="6"><b>JavaScript 之 Object对象</b></font></div><div><font color="#000000"><br></font></div><div><font color="#000000">Object 对象自身用处不大，不过在了解其他类之前，还是应该了解它。</font></div><div><font color="#000000">因为 JavaScript 中的 Object 对象与 Java 中的 java.lang.Object 相似，ECMAScript 中的所有对象都由这个对象继承而来，Object 对象中的所有属性和方法都会出现在其他对象中，所以理解了 Object 对象，就可以更好地理解其他对象。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000" size="5"><b>Object 对象具有下列属性：</b></font></div><div><font color="#000000" size="5">constructor</font></div><blockquote style="margin: 0 0 0 40px; border: none; padding: 0px;"><div><font color="#000000">对创建对象的函数的引用（指针）。</font></div><div><font color="#000000">对于 Object 对象，该指针指向原始的 Object() 函数。</font></div><div><font color="#000000">值可能是：</font></div></blockquote><blockquote style="margin: 0 0 0 40px; border: none; padding: 0px;"><blockquote style="margin: 0 0 0 40px; border: none; padding: 0px;"><div><div>Object</div></div></blockquote><blockquote style="margin: 0 0 0 40px; border: none; padding: 0px;"><div><div>Function</div></div></blockquote><blockquote style="margin: 0 0 0 40px; border: none; padding: 0px;"><div><div>Array</div></div></blockquote><blockquote style="margin: 0 0 0 40px; border: none; padding: 0px;"><div><div>String</div></div></blockquote><blockquote style="margin: 0 0 0 40px; border: none; padding: 0px;"><div><div>Boolean</div></div></blockquote><blockquote style="margin: 0 0 0 40px; border: none; padding: 0px;"><div><div>Number</div></div></blockquote><blockquote style="margin: 0 0 0 40px; border: none; padding: 0px;"><div><div>Date</div></div></blockquote><blockquote style="margin: 0 0 0 40px; border: none; padding: 0px;"><div><div>RegExp</div></div></blockquote><blockquote style="margin: 0 0 0 40px; border: none; padding: 0px;"><div><div>Error</div></div></blockquote><blockquote style="margin: 0 0 0 40px; border: none; padding: 0px;"><div><div>EvalError</div></div></blockquote><blockquote style="margin: 0 0 0 40px; border: none; padding: 0px;"><div><div>RangeError</div></div></blockquote><blockquote style="margin: 0 0 0 40px; border: none; padding: 0px;"><div><div>ReferenceError</div></div></blockquote><blockquote style="margin: 0 0 0 40px; border: none; padding: 0px;"><div><div>SyntaxError</div></div></blockquote><blockquote style="margin: 0 0 0 40px; border: none; padding: 0px;"><div><div>TypeError</div></div></blockquote><blockquote style="margin: 0 0 0 40px; border: none; padding: 0px;"><div><div>URIError</div></div></blockquote></blockquote><div><font color="#000000"><br></font></div><div><font color="#000000">Prototype</font></div><blockquote style="margin: 0 0 0 40px; border: none; padding: 0px;"><div><font color="#000000">对该对象的对象原型的引用。</font></div><div><font color="#000000">对于所有的对象，它默认返回 Object 对象的一个实例。</font></div><div><font color="#000000">prototype 属性使您有能力向对象添加属性和方法。</font></div></blockquote><div><font color="#000000"><br></font></div><div><font color="#000000">Object 对象还具有几个方法：</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">hasOwnProperty(property)</font></div><div><font color="#000000">判断对象是否有某个特定的属性。必须用字符串指定该属性。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">IsPrototypeOf(object)</font></div><div><font color="#000000">判断该对象是否为另一个对象的原型。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">PropertyIsEnumerable</font></div><div><font color="#000000">判断给定的属性是否可以用 for...in 语句进行枚举。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">ToString()</font></div><div></div><div><font color="#000000">返回对象的原始字符串表示。</font></div><div><font color="#000000">对于 Object 对象，ECMA-262 没有定义这个值，所以不同的 ECMAScript 实现具有不同的值。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">ValueOf()</font></div><div><font color="#000000">返回最适合该对象的原始值。</font></div><div><font color="#000000">对于许多对象，该方法返回的值都与 ToString() 的返回值相同。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">toSource()<span class="Apple-tab-span" style="white-space:pre">	</span></font></div><div><font color="#000000">返回该对象的源代码。</font></div><div><font color="#000000">注释：上面列出的每种属性和方法都会被其他对象覆盖。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">当 对象 和运算符 new 一起作为构造函数使用时，它返回一个新创建的对象。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">如果不用 new 运算符，把对象作为一个函数来调用，它将把自己的参数转换成一个原始的数值，并且返回这个值。</font></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><br></div>\r\n\r\n\r\n\r\n\r\n', NULL, NULL),
('tiankonguse1360736710', 'tiankonguse', '2013-02-13 14:25:10', 'JavaScript 之 Boolean 对象', '<div style="text-align: center;"><font color="#000000" size="5"><b>JavaScript 之 Boolean 对象</b></font></div><div><font color="#000000"><br></font></div><div><br></div><div><font color="#000000">Boolean 对象表示两个值："true" 或 "false"。</font></div><div><font color="#000000">Boolean 对象是 Boolean 原始类型的引用类型。</font></div><div><font color="#000000">Boolean 对象是一个将布尔值打包的布尔对象。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">要创建 Boolean 对象，只需要传递 Boolean 值作为参数：</font></div><div><br></div><div><pre><code class="javascript">var oBooleanObject = new Boolean(value);</code></pre></div><div><font color="#000000"><br></font></div><div><font color="#000000">参数 value 由布尔对象存放的值或者要转换成布尔值的值。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">Boolean 对象将覆盖 Object 对象的 ValueOf() 方法，返回原始值，即 true 和 false。</font></div><div><font color="#000000">ToString() 方法也会被覆盖，返回字符串 "true" 或 "false"。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">遗憾的是，在 ECMAScript 中很少使用 Boolean 对象，即使使用，也不易理解。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">问题通常出现在 Boolean 表达式中使用 Boolean 对象时。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">例如：</font></div><div><br></div><div><pre><code class="javascript">var oFalseObject = new Boolean(false);\r\nvar bResult = oFalseObject &amp;&amp; true;	//输出 true</code></pre></div><div><font color="#000000"><br></font></div><div><font color="#000000">在这段代码中，用 false 值创建 Boolean 对象。</font></div><div><font color="#000000">然后用这个值与原始值 true 进行 AND 操作。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">在 Boolean 运算中，false 和 true 进行 AND 操作的结果是 false。</font></div><div><font color="#000000">不过，在这行代码中，计算的是 oFalseObject，而不是它的值 false。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">正如前面讨论过的，在 Boolean 表达式中，所有对象都会被自动转换为 true，所以 oFalseObject 的值是 true。</font></div><div><font color="#000000">然后 true 再与 true 进行 AND 操作，结果为 true。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">注意：虽然你应该了解 Boolean 对象的可用性，不过最好还是使用 Boolean 原始值，避免发生这里提到的问题。</font></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><br></div>\r\n\r\n\r\n\r\n\r\n', NULL, NULL);
INSERT INTO `tk_blog` (`tk_blog_key`, `tk_blog_user`, `tk_blog_datetime`, `tk_blog_title`, `tk_blog_content`, `tk_blog_password`, `tk_blog_category`) VALUES
('tiankonguse1360736924', 'tiankonguse', '2013-02-13 14:28:44', 'JavaScript 之 Number 对象', '<div style="text-align: center;"><font color="#000000"><b>JavaScript 之 Number 对象</b></font></div><div><br></div><div><font color="#000000">Number 对象是原始数值的包装对象。</font></div><div><font color="#000000">正如你可能想到的，Number 对象是 Number 原始类型的引用类型。</font></div><div><font color="#000000">要创建 Number 对象，采用下列代码：</font></div><div><br></div><div><pre><code class="javascript">var oNumberObject = new Number(68);</code></pre></div><div><font color="#000000"><br></font></div><div><font color="#000000">所有特殊值都是 Number 对象的静态属性。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">要得到数字对象的 Number 原始值，只需要使用 valueOf() 方法：</font></div><div><br></div><div><pre><code class="javascript">var iNumber = oNumberObject.valueOf();</code></pre></div><div><font color="#000000"><br></font></div><div><font color="#000000"><b>新增属性</b></font></div><div><font color="#000000"><span class="Apple-tab-span" style="white-space:pre">	</span>MAX_VALUE<span class="Apple-tab-span" style="white-space:pre">	</span>&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;可表示的最大的数。</font></div><div><font color="#000000"><span class="Apple-tab-span" style="white-space:pre">	</span>MIN_VALUE<span class="Apple-tab-span" style="white-space:pre">	</span>&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;可表示的最小的数。</font></div><div><font color="#000000"><span class="Apple-tab-span" style="white-space:pre">	</span>NaN<span class="Apple-tab-span" style="white-space:pre">	</span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;非数字值。</font></div><div><font color="#000000"><span class="Apple-tab-span" style="white-space:pre">	</span>NEGATIVE_INFINITY<span class="Apple-tab-span" style="white-space:pre">	</span>负无穷大，溢出时返回该值。</font></div><div><font color="#000000"><span class="Apple-tab-span" style="white-space:pre">	</span>POSITIVE_INFINITY<span class="Apple-tab-span" style="white-space:pre">	</span>正无穷大，溢出时返回该值。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000"><br></font></div><div><font color="#000000"><b>新增方法</b></font></div><div><font color="#000000"><br></font></div><div><font color="#000000">toFixed() 方法</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">toFixed() 方法返回的是具有指定位数小数的数字的字符串表示。</font></div><div><font color="#000000">例如：</font></div><div><br></div><div><pre><code class="javascript">var oNumberObject = new Number(68);\r\nalert(oNumberObject.toFixed(2));  //输出 "68.00"</code></pre></div><div><font color="#000000"><br></font></div><div><font color="#000000">在这里，toFixed() 方法的参数是 2，说明应该显示两位小数。</font></div><div><font color="#000000">该方法返回 "68.00"，空的字符串位由 0 来补充。</font></div><div><font color="#000000">对于处理货币的应用程序，该方法非常有用。</font></div><div><font color="#000000">toFixed() 方法能表示具有 0 到 20 位小数的数字，超过这个范围的值会引发错误。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">toExponential() 方法</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">与格式化数字相关的另一个方法是 toExponential()，它返回的是用科学计数法表示的数字的字符串形式。</font></div><div><font color="#000000">与 toFixed() 方法相似，toExponential() 方法也有一个参数，指定要输出的小数的位数。</font></div><div><font color="#000000">例如：</font></div><div><br></div><div><pre><code class="javascript">var oNumberObject = new Number(68);\r\nalert(oNumberObject.toExponential(1));  //输出 "6.8e+1"</code></pre></div><div><font color="#000000"><br></font></div><div><font color="#000000">这段代码的结果是 "6.8e+1"，前面解释过，它表示 6.8x101。</font></div><div><font color="#000000">问题是，如果不知道要用哪种形式（预定形式或指数形式）表示数字怎么办？</font></div><div><font color="#000000">可以用 toPrecision() 方法。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">toPrecision() 方法</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">toPrecision() 方法根据最有意义的形式来返回数字的预定形式或指数形式。</font></div><div><font color="#000000">它有一个参数，即用于表示数的数字总数（不包括指数）。</font></div><div><font color="#000000">例如，</font></div><div><br></div><div><pre><code class="javascript">var oNumberObject = new Number(68);\r\nalert(oNumberObject.toPrecision(1));  //输出 "7e+1"</code></pre></div><div><font color="#000000"><br></font></div><div><font color="#000000">这段代码的任务是用一位数字表示数字 68，结果为 "7e+1"，以另外的形式表示即 70。</font></div><div><font color="#000000">的确，toPrecision() 方法会对数进行舍入。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">不过，如果用 2 位数字表示 68，就容易多了：</font></div><div><br></div><div><pre><code class="javascript">var oNumberObject = new Number(68);\r\nalert(oNumberObject.toPrecision(2));  //输出 "68"</code></pre></div><div><font color="#000000"><br></font></div><div><font color="#000000">当然，输出的是 "68"，因为这正是该数的准确表示。</font></div><div><font color="#000000">不过，如果指定的位数多于需要的位数又如何呢？</font></div><div><br><pre><code class="javascript">var oNumberObject = new Number(68);\r\nalert(oNumberObject.toPrecision(3));  //输出 "68.0"</code></pre><br></div><div><font color="#000000">在这种情况下，toPrecision(3) 等价于 toFixed(1)，输出的是 "68.0"。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">toFixed()、toExponential() 和 toPrecision() 方法都会进行舍入操作，以便用正确的小数位数正确地表示一个数。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">提示：与 Boolean 对象相似，Number 对象也很重要，不过应该少用这种对象，以避免潜在的问题。只要可能，都使用数字的原始表示法。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">toLocaleString()&nbsp;</font></div><div><font color="#000000"><span class="Apple-tab-span" style="white-space:pre">	</span>可把一个 Number 对象转换为本地格式的字符串。</font></div><div><font color="#000000"><span class="Apple-tab-span" style="white-space:pre">	</span>数字的字符串表示，由实现决定。</font></div><div><font color="#000000"><span class="Apple-tab-span" style="white-space:pre">	</span>根据本地规范进行格式化，可能影响到小数点或千分位分隔符采用的标点符号。</font></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><br></div>\r\n\r\n\r\n\r\n\r\n', NULL, NULL),
('tiankonguse1360737269', 'tiankonguse', '2013-02-13 14:34:29', 'JavaScript 之 String 对象', '<div style="text-align: center;"><font color="#000000"><b>JavaScript 之 String 对象</b></font></div><div><font color="#000000"><br></font></div><div><font color="#000000"><br></font></div><div><font color="#000000">String 对象是 String 原始类型的对象表示法，它是以下方式创建的：</font></div><div><br></div><div><pre><code class="javascript">var oStringObject = new String("hello world");</code></pre></div><div><font color="#000000"><br></font></div><div><font color="#000000">String 对象的 valueOf() 方法和 toString() 方法都会返回 String 类型的原始值：</font></div><div><br></div><div><pre><code class="javascript">alert(oStringObject.valueOf() == oStringObject.toString());	//输出 "true"</code></pre></div><div><font color="#000000"><br></font></div><div><font color="#000000">如果运行这段代码，输出是 "true"，说明这些值真的相等。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">注释：String 对象是 ECMAScript 中比较复杂的引用类型之一。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">新增属性</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">length 属性</font></div><div><font color="#000000">String 对象具有属性 length，它是字符串中的字符个数：</font></div><div><br></div><div><pre><code class="javascript">var oStringObject = new String("hello world");\r\nalert(oStringObject.length);	//输出 "11"</code></pre></div><div><font color="#000000"><br></font></div><div><font color="#000000">这个例子输出的是 "11"，即 "hello world" 中的字符个数。</font></div><div><font color="#000000">注意，即使字符串包含双字节的字符（与 ASCII 字符相对，ASCII 字符只占用一个字节），每个字符也只算一个字符。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000"><br></font></div><div><font color="#000000">charAt()&nbsp;</font></div><div><font color="#000000"><span class="Apple-tab-span" style="white-space:pre">	</span>返回的是包含指定位置处的单个字符：</font></div><div><br></div><div><pre><code class="javascript">var oStringObject = new String("hello world");\r\nalert(oStringObject.charAt(1));	//输出 "e"</code></pre></div><div><font color="#000000"><br></font></div><div><font color="#000000">在字符串 "hello world" 中，位置 1 处的字符是 "e"。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">charCodeAt()</font></div><div><font color="#000000"><span class="Apple-tab-span" style="white-space:pre">	</span>返回的是包含指定位置处的单个字符的数值：</font></div><div><pre><code class="javascript">var oStringObject = new String("hello world");\r\nalert(oStringObject.charCodeAt(1));	//输出 "101"</code></pre></div><div><font color="#000000"><br></font></div><div><font color="#000000">这个例子输出 "101"，即小写字母 "e" 的字符代码。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">concat()&nbsp;</font></div><div><font color="#000000"><span class="Apple-tab-span" style="white-space:pre">	</span>用于把一个或多个字符串和String 对象相连组成一个新的String对象，并返回。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">该方法返回的是 新的String 原始值，保持原始的 String 对象不变：</font></div><div><br></div><div><pre><code class="javascript">var oStringObject = new String("hello ");\r\nvar sResult = oStringObject.concat("world");\r\nalert(sResult);		//输出 "hello world"\r\nalert(oStringObject);	//输出 "hello "</code></pre></div><div><font color="#000000"><br></font></div><div><font color="#000000">在上面这段代码中，调用 concat() 方法返回的是 "hello world"。</font></div><div><font color="#000000">可以用 + 代替。</font></div><div><pre><code class="javascript">var oStringObject = new String("hello ");\r\nvar sResult = oStringObject + "world";\r\nalert(sResult);		//输出 "hello world"\r\nalert(oStringObject);	//输出 "hello "</code></pre></div><div><br></div><div><font color="#000000">indexOf()</font></div><div><font color="#000000"><span class="Apple-tab-span" style="white-space:pre">	</span>返回的指定的子串在另一个字符串中的位置,从字符串的开头开始检索，如果没有找不到子串，则返回 -1。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">lastIndexOf()</font></div><div><font color="#000000"><span class="Apple-tab-span" style="white-space:pre">	</span>返回的指定的子串在另一个字符串中的位置,从字符串的结尾开始检索，如果没有找不到子串，则返回 -1。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">例如：</font></div><div><pre><code class="javascript">var oStringObject = new String("hello world!");\r\nalert(oStringObject.indexOf("o"));		输出 "4"\r\nalert(oStringObject.lastIndexOf("o"));	输出 "7"</code></pre></div><div><font color="#000000"><br></font></div><div><font color="#000000">在这里，第一个 "o" 字符串出现在位置 4，即 "hello" 中的 "o"；</font></div><div><font color="#000000">最后一个 "o" 出现在位置 7，即 "world" 中的 "o"。</font></div><div><font color="#000000">如果该字符串中只有一个 "o" 字符串，那么 indexOf() 和 lastIndexOf() 方法返回的位置相同。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">localeCompare() 方法</font></div><div><font color="#000000"><span class="Apple-tab-span" style="white-space:pre">	</span>对字符串进行比较。</font></div><div><span class="Apple-tab-span" style="white-space:pre"><font color="#000000">	</font></span></div><div><font color="#000000">该方法有一个参数 - 要进行比较的字符串，返回的是下列三个值之一：</font></div><div><font color="#000000">如果 String 对象按照字母顺序排在参数中的字符串之前，返回负数。</font></div><div><font color="#000000">如果 String 对象等于参数中的字符串，返回 0</font></div><div><font color="#000000">如果 String 对象按照字母顺序排在参数中的字符串之后，返回正数。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">注释：如果返回负数，那么最常见的是 -1，不过真正返回的是由实现决定的。</font></div><div><font color="#000000">如果返回正数，那么同样的，最常见的是 1，不过真正返回的是由实现决定的。</font></div><div><font color="#000000">示例如下：</font></div><div><pre><code class="javascript">var oStringObject = new String("yellow");\r\nalert(oStringObject.localeCompare("brick"));		//输出 "1"\r\nalert(oStringObject.localeCompare("yellow"));		//输出 "0"\r\nalert(oStringObject.localeCompare("zoo"));		//输出 "-1"</code></pre></div><div><font color="#000000"><br></font></div><div><font color="#000000">在这段代码中，字符串 "yellow" 与 3 个值进行了对比，即 "brick"、"yellow" 和 "zoo"。</font></div><div><font color="#000000">由于按照字母顺序排列，"yellow" 位于 "brick" 之后，所以 localeCompare() 返回 1；</font></div><div><font color="#000000">"yellow" 等于 "yellow"，所以 localeCompare() 返回 0；</font></div><div><font color="#000000">"zoo" 位于 "yellow" 之后，localeCompare() 返回 -1。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">再强调一次，由于返回的值是由实现决定的，所以最好以下面的方式调用 localeCompare() 方法：</font></div><div><br></div><div><pre><code class="javascript">var oStringObject1 = new String("yellow");\r\nvar oStringObject2 = new String("brick");\r\n\r\nvar iResult = oStringObject1.localeCompare(oStringObject2);\r\n\r\nif(iResult &lt; 0) {\r\n  alert(oStringObject1 + " comes before " + oStringObject2);\r\n} else if (iResult &gt; 0) {\r\n  alert(oStringObject1 + " comes after " + oStringObject2);\r\n} else {\r\n  alert("The two strings are equal");\r\n}</code></pre><br></div><div><font color="#000000">采用这种结构，可以确保这段代码在所有实现中都能正确运行。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">localeCompare()方法的独特之处在于，实现所处的区域确切说明了这种方法运行的方式。</font></div><div><font color="#000000">在美国，英语是ECMAScript实现的标准语言，localeCompare()是区分大小写的。</font></div><div><font color="#000000">不过，在其他区域，情况可能并非如此。</font></div><div><font color="#000000"><br></font></div><div><br></div><div><font color="#000000">substring()<span class="Apple-tab-span" style="white-space:pre">	</span></font></div><div><font color="#000000"><span class="Apple-tab-span" style="white-space:pre">	</span>从子串创建字符串值,接受一个或两个参数。</font></div><div><font color="#000000"><span class="Apple-tab-span" style="white-space:pre">	</span>第一个参数是要获取的子串的起始位置，第二个参数（如果使用的话）是要获取子串终止前的位置。</font></div><div><font color="#000000"><span class="Apple-tab-span" style="white-space:pre">	</span>如果省略第二个参数，终止位就默认为字符串的长度。</font></div><div><font color="#000000"><span class="Apple-tab-span" style="white-space:pre">	</span>如果参数为负数，则转化为0.</font></div><div><span class="Apple-tab-span" style="white-space:pre"><font color="#000000">	</font></span></div><div><span class="Apple-tab-span" style="white-space:pre"><font color="#000000">	</font></span></div><div><font color="#000000">slice()</font></div><div><font color="#000000"><span class="Apple-tab-span" style="white-space:pre">	</span>从子串创建字符串值,接受一个或两个参数。</font></div><div><font color="#000000"><span class="Apple-tab-span" style="white-space:pre">	</span>基本功能和slice()一样，只是当有负数时的处理方法不同。</font></div><div><font color="#000000"><span class="Apple-tab-span" style="white-space:pre">	</span>如果参数为负数，则不断加上字符串长度直到为正。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">例1</font></div><div><br><pre><code class="javascript">var oStringObject = new String("hello world");\r\nalert(oStringObject.slice("-3"));		//输出 "rld"\r\nalert(oStringObject.substring("-3"));	//输出 "hello world"\r\nalert(oStringObject.slice("3, -4"));		//输出 "lo w"\r\nalert(oStringObject.substring("3, -4"));	//输出 "hel"</code></pre><br></div><div><font color="#000000">toLowerCase()</font></div><div><font color="#000000"><span class="Apple-tab-span" style="white-space:pre">	</span>把字符串转换成全小写的</font></div><div><font color="#000000">toLocaleLowerCase()</font></div><div><font color="#000000"><span class="Apple-tab-span" style="white-space:pre">	</span>把字符串转换成全小写的</font></div><div><font color="#000000">toUpperCase()</font></div><div><font color="#000000"><span class="Apple-tab-span" style="white-space:pre">	</span>把字符串转换成全大写的</font></div><div><font color="#000000">toLocaleUpperCase()</font></div><div><font color="#000000"><span class="Apple-tab-span" style="white-space:pre">	</span>把字符串转换成全大写的</font></div><div><pre><code class="javascript">var oStringObject = new String("Hello World");\r\nalert(oStringObject.toLocaleUpperCase());	//输出 "HELLO WORLD"\r\nalert(oStringObject.toUpperCase());		//输出 "HELLO WORLD"\r\nalert(oStringObject.toLocaleLowerCase());	//输出 "hello world"\r\nalert(oStringObject.toLowerCase());		//输出 "hello world"</code></pre></div><div><font color="#000000"><br></font></div><div><font color="#000000">有几种语言对 Unicode 大小写转换应用了特定的规则，因此必须使用区域特定的方法才能进行正确的转换。</font></div><div><font color="#000000">一般来说，如果不知道在以哪种编码运行一种语言，则使用区域特定的方法比较安全。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">提示：记住，String 对象的所有属性和方法都可应用于 String 原始值上，因为它们是伪对象。</font></div>', NULL, NULL),
('tiankonguse1360737385', 'tiankonguse', '2013-02-13 14:36:25', '对象的类型 typeof 与 instanceof', '<div style="text-align: center;"><font color="#000000"><b>对象的类型 typeof 与 instanceof</b></font></div><div><font color="#000000"><br></font></div><div><font color="#000000">typeof 运算符有一个参数，即要检查的变量或值。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">对变量或值调用 typeof 运算符将返回下列值之一：</font></div><div><font color="#000000"><span class="Apple-tab-span" style="white-space:pre">	</span>undefined - 如果变量是 Undefined 类型的&nbsp;</font></div><div><font color="#000000"><span class="Apple-tab-span" style="white-space:pre">		</span>Undefined 类型只有一个值，即 undefined。</font></div><div><font color="#000000"><span class="Apple-tab-span" style="white-space:pre">		</span>当声明的变量未初始化时，该变量的默认值是 undefined。</font></div><div><font color="#000000"><span class="Apple-tab-span" style="white-space:pre">	</span>boolean - 如果变量是 Boolean 类型的&nbsp;</font></div><div><font color="#000000"><span class="Apple-tab-span" style="white-space:pre">	</span>number - 如果变量是 Number 类型的&nbsp;</font></div><div><font color="#000000"><span class="Apple-tab-span" style="white-space:pre">	</span>string - 如果变量是 String 类型的&nbsp;</font></div><div><font color="#000000"><span class="Apple-tab-span" style="white-space:pre">	</span>object - 如果变量是一种引用类型或 Null 类型的&nbsp;</font></div><div><font color="#000000"><br></font></div><div><font color="#000000"><br></font></div><div><font color="#000000"><br></font></div><div><font color="#000000">在使用 typeof 运算符时采用引用类型存储值会出现一个问题，无论引用的是什么类型的对象，它都返回 "object"。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">这是就要使用</font><span style="color: rgb(0, 0, 0);">instanceof</span><span style="color: rgb(0, 0, 0);">运算符了。</span></div><div><font color="#000000"><br></font></div><div><font color="#000000">instanceof 运算符与 typeof 运算符相似，用于识别正在处理的对象的类型。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">与 typeof 方法不同的是，instanceof 方法要求开发者明确地确认对象为某特定类型。</font></div>\r\n\r\n\r\n\r\n\r\n', NULL, NULL),
('tiankonguse1360841264', 'tiankonguse', '2013-02-14 19:27:44', 'HTML DOM 节点类型', '<ul><li><span style="color: rgb(0, 0, 0); font-size: x-large; font-family: ''Times New Roman''; line-height: normal;">ELEMENT_NODE :&nbsp;1 &nbsp;</span><span style="color: rgb(0, 0, 0); font-size: x-large; font-family: ''Times New Roman''; line-height: normal;">元素</span></li><li><font color="#000000" face="Times New Roman" size="5"><span style="line-height: normal;"><br></span></font></li><li><span style="color: rgb(0, 0, 0); font-size: x-large; font-family: ''Times New Roman''; line-height: normal;">ATTRIBUTE_NODE : 2&nbsp;</span><span style="color: rgb(0, 0, 0); font-size: x-large; font-family: ''Times New Roman''; line-height: normal;">属性</span></li><li><font color="#000000" face="Times New Roman" size="5"><span style="line-height: normal;"><br></span></font></li><li><span style="color: rgb(0, 0, 0); font-size: x-large; font-family: ''Times New Roman''; line-height: normal;">TEXT_NODE : 3&nbsp;</span><span style="color: rgb(0, 0, 0); font-size: x-large; font-family: ''Times New Roman''; line-height: normal;">文本</span></li><li><font color="#000000" face="Times New Roman" size="5"><span style="line-height: normal;"><br></span></font></li><li><span style="color: rgb(0, 0, 0); font-family: ''Times New Roman''; font-size: x-large; line-height: normal;">CDATA_SECTION_NODE:4</span></li><li><font color="#000000" face="Times New Roman" size="5"><span style="line-height: normal;"><br></span></font></li><li><span style="color: rgb(0, 0, 0); font-family: ''Times New Roman''; font-size: x-large; line-height: normal;">ENTITY_REFERENCE_NODE:5</span></li><li><font color="#000000" face="Times New Roman" size="5"><span style="line-height: normal;"><br></span></font></li><li><span style="color: rgb(0, 0, 0); font-family: ''Times New Roman''; font-size: x-large; line-height: normal;">ENTITY_NODE:6</span></li><li><font color="#000000" face="Times New Roman" size="5"><span style="line-height: normal;"><br></span></font></li><li><span style="color: rgb(0, 0, 0); font-family: ''Times New Roman''; font-size: x-large; line-height: normal;">PROCESSING_INSTRUCTION_NODE:7</span></li><li><font color="#000000" face="Times New Roman" size="5"><span style="line-height: normal;"><br></span></font></li><li><span style="color: rgb(0, 0, 0); font-size: x-large; font-family: ''Times New Roman''; line-height: normal;">COMMENT_NODE : 8&nbsp;</span><span style="color: rgb(0, 0, 0); font-size: x-large; font-family: ''Times New Roman''; line-height: normal;">注释</span></li><li><font color="#000000" face="Times New Roman" size="5"><span style="line-height: normal;"><br></span></font></li><li><span style="color: rgb(0, 0, 0); font-size: x-large; font-family: ''Times New Roman''; line-height: normal;">DOCUMENT_NODE : 9&nbsp;</span><span style="color: rgb(0, 0, 0); font-size: x-large; font-family: ''Times New Roman''; line-height: normal;">文档</span></li><li><font color="#000000" face="Times New Roman" size="5"><span style="line-height: normal;"><br></span></font></li><li><span style="color: rgb(0, 0, 0); font-family: ''Times New Roman''; font-size: x-large; line-height: normal;">DOCUMENT_TYPE_NODE:10</span></li><li><font color="#000000" face="Times New Roman" size="5"><span style="line-height: normal;"><br></span></font></li><li><span style="color: rgb(0, 0, 0); font-family: ''Times New Roman''; font-size: x-large; line-height: normal;">DOCUMENT_FRAGMENT_NODE:11</span></li><li><font color="#000000" face="Times New Roman" size="5"><span style="line-height: normal;"><br></span></font></li><li><span style="color: rgb(0, 0, 0); font-family: ''Times New Roman''; font-size: x-large; line-height: normal;">NOTATION_NODE:12</span></li></ul><div style="color: rgb(0, 0, 0); font-size: 22px;"><div style="font-size: 22px;"><br></div><div style="font-size: 22px;"><span style="font-family: ''Times New Roman''; font-size: medium; line-height: normal;"><div><br></div></span></div></div>', NULL, NULL),
('tiankonguse1360846829', 'tiankonguse', '2013-02-14 21:00:29', 'cpp再次测试', '\r\n\r\n\r\n\r\n\r\n<div style="color: rgb(0, 0, 0); font-size: 22px;"><br></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><br><pre><code class="cpp">	#include &lt;stdio.h&gt;\r\n	\r\n	int main(){\r\n		int s = 1 + 6;\r\n		if(s == 8){\r\n			\r\n		}\r\n		printf("%c %d\\n",''\\n'',''x'');\r\n		getchar();\r\n		return 0;	\r\n	}</code></pre></div><div><br></div>', '', ''),
('tiankonguse1361942839', 'tiankonguse', '2013-02-27 13:27:19', '企鹅行动了，漫画的命运……', '<div style="text-align: center;"><span style="font-size: 22px;">企鹅行动了，漫画的命运……</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">树大招风，爱漫画的命运就是如此呀。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">企鹅一旦开始行动，看见一个目标，那个目标就跑不掉了。</span></div><div><br></div><div><span style="font-size: 22px;">海贼王变为了航海王……</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">海贼王，火影这些漫画需要找个归宿吗？</span></div>\r\n\r\n\r\n\r\n\r\n', '', ''),
('tiankonguse1362059443', 'tiankonguse', '2013-02-28 13:50:43', 'Cross-site scripting', '<div style="text-align: center;"><span style="font-size: 22px;">Cross-site scripting</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">Cross-site scripting(XSS)，是一种经常出现在Web应用中的计算机安全漏洞，它允许恶意Web用户将代码植入到提供给其它用户使用的页面中。</span></div><div><span style="font-size: 22px;">比如，包括HTML代码和客户端脚本的页面。</span></div><div><span style="font-size: 22px;">为不和层叠样式表(CSS)的缩写混淆，通常将跨站脚本缩写为XSS。</span></div><div><span style="font-size: 22px;">攻击者一般会利用XSS漏洞旁路掉访问控制——例如同源策略(same origin policy)或发起phishing攻击，网页挂马，cookie窃取等。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">&nbsp; &nbsp;XSS主要攻击方式有两种：</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">&nbsp; &nbsp; &nbsp; 一种就像SQL Injection攻击一样，我把一段脚本注入到服务器上，用户访问方法服务器的某个URL，这个URL就会把远端的js注入进来，这个js有可能自动进行很多操作。比如这次事件中的帮你发微博，帮你发站内消息等。注入有很多方法，比如：提交表单，更改URL参数，上传图片，设置签名，等等。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">&nbsp; &nbsp; &nbsp; 另一类则是来自外部的攻击，主要指的自己构造XSS 跨站漏洞网页或者寻找非目标机以外的有跨站漏洞的网页。</span></div><div><span style="font-size: 22px;"><span class="Apple-tab-span" style="white-space:pre">	</span> &nbsp;例如：地址栏中输入一段Javascript代码，这也是XSS常用的攻击手段，它通过构造恶意的URL，当用户点击链接后，实现在用户的浏览器中运行恶意的代码。</span></div><div><span style="font-size: 22px;"><span class="Apple-tab-span" style="white-space:pre">	</span> &nbsp;</span></div><div style="color: rgb(0, 0, 0); font-size: 22px;">注：我的这个网站就一直被攻击着，不过攻击的是同一个IP，于是我准备把那个IP屏蔽了，这样，那个IP就不能攻击我了。</div><div style="color: rgb(0, 0, 0); font-size: 22px;"><br></div>\r\n\r\n\r\n\r\n\r\n', '', ''),
('tiankonguse1362062476', 'tiankonguse', '2013-02-28 14:41:16', 'php网站使用.htaccess屏蔽ip', '\r\n\r\n\r\n\r\n\r\n<div style="color: rgb(0, 0, 0); font-size: 22px;">在这篇文章里(<span style="background-color: rgba(243, 243, 243, 0.54902); color: rgb(35, 35, 35); font-family: 仿宋, 宋体, 黑体, Verdana, Arial, Helvetica, sans-serif; line-height: 29px; text-align: center;"><a href="http://tiankonguse.com/blog.php?blogid=tiankonguse1362059443">Cross-site scripting</a>)我提到过我的网站一直在被一个IP攻击，我看不下去了，于是就想把那个IP屏蔽掉。</span></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><span style="background-color: rgba(243, 243, 243, 0.54902); color: rgb(35, 35, 35); font-family: 仿宋, 宋体, 黑体, Verdana, Arial, Helvetica, sans-serif; line-height: 29px; text-align: center;"><br></span></div><div><span style="color: rgb(35, 35, 35); font-size: 22px; background-color: rgba(243, 243, 243, 0.54902); font-family: 仿宋, 宋体, 黑体, Verdana, Arial, Helvetica, sans-serif; line-height: 29px; text-align: center;">于是，我选择使用</span><font color="#232323" face="仿宋, 宋体, 黑体, Verdana, Arial, Helvetica, sans-serif"><span style="font-size: 22px; line-height: 29px;">.htaccess来屏蔽那个IP。</span></font></div><div><font color="#232323" face="仿宋, 宋体, 黑体, Verdana, Arial, Helvetica, sans-serif"><span style="font-size: 22px; line-height: 29px;"><br></span></font></div><div><span style="color: rgb(35, 35, 35); font-family: 仿宋, 宋体, 黑体, Verdana, Arial, Helvetica, sans-serif; font-size: 22px; line-height: 29px;">.htaccess里的内如如下：</span></div><div><span style="color: rgb(35, 35, 35); font-family: 仿宋, 宋体, 黑体, Verdana, Arial, Helvetica, sans-serif; font-size: 22px; line-height: 29px;"><br></span></div><div><span style="color: rgb(35, 35, 35); font-family: 仿宋, 宋体, 黑体, Verdana, Arial, Helvetica, sans-serif; font-size: 22px; line-height: 29px;"><br></span></div><div><br><pre><code class="php">Order Allow,Deny\r\ndeny from 123.151.39.34\r\nAllow from all</code></pre><br></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><br></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><br></div><div style="color: rgb(0, 0, 0); font-size: 22px;">这样，就可以屏蔽那个IP了。</div><div style="color: rgb(0, 0, 0); font-size: 22px;"><br></div><div style="color: rgb(0, 0, 0); font-size: 22px;">从此可以安心的吃面包喝牛奶了。</div>', '', ''),
('tiankonguse1362064048', 'tiankonguse', '2013-02-28 15:07:28', ' SQL Injection', '<div style="text-align: center;"><span style="font-size: 22px;">&nbsp;SQL Injection</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">&nbsp;SQL Injection：就是通过把SQL命令插入到Web表单递交或输入域名或页面请求的查询字符串，最终达到欺骗服务器执行恶意的SQL命令。</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">具体来说，它是利用现有应用程序，将（恶意）的SQL命令注入到后台数据库引擎执行的能力，它可以通过在Web表单中输入（恶意）SQL语句得到一个存在安全漏洞的网站上的数据库，而不是按照设计者意图去执行SQL语句。&nbsp;</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">首先让我们了解什么时候可能发生SQL Injection。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">假设我们在浏览器中输入URL www.tiankonguse.com.</span></div><div><span style="font-size: 22px;">由于它只是对页面的简单请求无需对数据库动进行动态请求，所以它不存在SQL Injection.</span></div><div><span style="font-size: 22px;">当我们输入 www.tiankonguse.com?blogid=23 时，我们在URL中传递变量 blogid ，并且提供值为23，由于它是对数据库进行动态查询的请求（其中?blogid=23表示数据库查询变量），所以我们可以该URL中嵌入恶意SQL语句。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">例如：</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">SELECT * FROM blog WHERE (blogid = 23) OR 1 = 1 是会显示所有的blog.</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">那我们如何防止SQL Injection呢？</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">1.永远不要信任用户的输入，要对用户的输入进行校验，可以通过正则表达式，或限制长度，对单引号和双"-"进行转换等。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">2.永远不要使用动态拼装SQL，可以使用参数化的SQL或者直接使用存储过程进行数据查询存取。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">3.永远不要使用管理员权限的数据库连接，为每个应用使用单独的权限有限的数据库连接。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">4.不要把机密信息明文存放，请加密或者hash掉密码和敏感的信息。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">5.应用的异常信息应该给出尽可能少的提示，最好使用自定义的错误信息对原始错误信息进行包装，把异常信息存放在独立的表中。</span></div><div><span style="font-size: 22px;"><br></span></div><div><br></div><div><span style="font-size: 22px;"><br></span></div>', '', ''),
('tiankonguse1362064148', 'tiankonguse', '2013-02-28 15:09:08', ' 页面PV', '<div style="text-align: center;"><span style="font-size: 22px;">&nbsp;页面PV</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">&nbsp;站内优化是SEO的核心技术，而站内优化的核心工作就是合理的分配页面的权重。</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">那么百度是如何对网站页面进行权重分配的呢?</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">我们知道百度是看重用户体验的，而页面的活跃度就是最能够反映出页面用户体验的东西，所以要想控制百度对于页面权重的分配最重要的工作就是控制页面的活跃度。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">如何控制页面的pv值</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">　　其实做法并不难，最主要的是一个数据分析的工作。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">　　一、可以借助百度统计或者Google Analytics去跟踪网站每个页面的pv值，然后找出前20或者前30(根据你用来做长尾词的页面数量)pv的页面。然后对这些页面的其他数值进行分析，这些数值包括：页面的跳出率、页面的转化率、页面的类型、页面的标题和内容。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">　　二、分析页面的跳出率和转化率这个是这项数据分析工作的核心，通过了解页面的跳出率和转化率情况之后，我们就可以针对性的做站内链接的布置。跳出率低、转化率高的页面，可以在网站给予更多的内链资源，跳出率高、转化率低的页面则给以更少的资源分配。从而控制不同页面的pv值。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">　　三、分析页面的标题和内容是为了更精准的做关键词的选取，有些时候，可能这些很重要的页面我们没有很好的用来做关键词，我们需要针对这些pv值高的页面的内容和标题做个优化。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">　　四、分析页面的类型是为了让你去屏蔽掉一些不重要或者无法用来做长尾关键词的页面，不让这些页面分配掉网站的权重。比如说注册页面、购物车页面、订单查询页面等，这些页面的pv值都会是很高的，如果不予以屏蔽会分掉过多的权重。</span></div><div><br></div><div><span style="font-size: 22px;">　　页面的pv值就是最能够反映出页面活跃度的一个数值，所以说到底，要控制页面权重的分配就必须要控制页面的pv值。最理想的状态就是让重要的页面得到更多的pv，让不甚重要的页面得到更少的pv。从而让百度的权重按照你理想的方案分配。这其实就是一种根据百度的算法做站内优化的工作。</span></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><br></div>', '', ''),
('tiankonguse1362064894', 'tiankonguse', '2013-02-28 15:21:34', 'http代理和socks代理', '<div style="text-align: center;"><span style="font-size: 22px;">http代理和socks代理</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">什么是HTTP代理?</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">www对于每一个上网的人都再熟悉不过了，www连接请求就是采用的http协议，所以我们在浏览网页，下载数据（也可采用ftp协议）是就是用http代理。</span></div><div><span style="font-size: 22px;">它通常绑定在代理服务器的80、3128、8080等端口上。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">　</span></div><div><span style="font-size: 22px;">什么是socks代理?</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">相应的，采用socks协议的代理服务器就是SOCKS服务器，是一种通用的代理服务器。</span></div><div><span style="font-size: 22px;">Socks是个电路级的底层网关，是DavidKoblas在1990年开发的，此后就一直作为Internet RFC标准的开放标准。</span></div><div><span style="font-size: 22px;">Socks 不要求应用程序遵循特定的操作系统平台，Socks 代理与应用层代理、 HTTP 层代理不同，Socks 代理只是简单地传递数据包，而不必关心是何种应用协议（比如FTP、HTTP和NNTP请求）。</span></div><div><span style="font-size: 22px;">所以，Socks代理比其他应用层代理要快得多。</span></div><div><span style="font-size: 22px;">它通常绑定在代理服务器的1080端口上。</span></div><div><span style="font-size: 22px;">如果您在企业网或校园网上，需要透过防火墙或通过代理服务器访问 Internet就可能需要使用SOCKS。</span></div><div><span style="font-size: 22px;">一般情况下，对于拨号上网用户都不需要使用它。</span></div><div><span style="font-size: 22px;">注意，浏览网页时常用的代理服务器通常是专门的http代理，它和SOCKS是不同的。</span></div><div><span style="font-size: 22px;">因此，您能浏览网页不等于 您一定可以通过SOCKS访问Internet。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">常用的防火墙，或代理软件都支持SOCKS，但需要其管理员打开这一功能。</span></div><div><span style="font-size: 22px;">如果您不确信您是否需要SOCKS或是否有SOCKS可用，请与您的网络管理员联系。</span></div><div><span style="font-size: 22px;">为了使用socks，您需要了解一下内容：</span></div><div><span style="font-size: 22px;">　　① SOCKS服务器的IP地址</span></div><div><span style="font-size: 22px;">　　② SOCKS服务所在的端口</span></div><div><span style="font-size: 22px;">　　③ 这个SOCKS服务是否需要用户认证？如果需要，您要向您的网络管理员申请一个用户和口令</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">知道了上述信息，您就可以把这些信息填入“网络配置”中，或者在第一次登记时填入，您就可以使用socks代理了。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">在实际应用中SOCKS代理可以用作为：电子邮件、新闻组软件、网络传呼ICQ、网络聊天MIRC和使用代理服务器上联众打游戏等等各种游戏应用软件当中。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;"><br></span></div>', '', ''),
('tiankonguse1362102139', 'tiankonguse', '2013-03-01 01:42:19', 'Google SiteMap的协议格式详解', '<div style="text-align: center;"><span style="font-size: 22px;">Google SiteMap的协议格式详解</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">1&nbsp;&lt;urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9"&gt;</span></div><div><span style="font-size: 22px;">&nbsp; &nbsp; &nbsp;这一行定义了此xml文件的命名空间</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">2 &lt;url&gt;</span></div><div><span style="font-size: 22px;">&nbsp; &nbsp; &nbsp;这是具体某一个链接的定义入口，你所希望展示在SiteMap文件中的每一个链接都要用&lt;url&gt;和&lt;/url&gt;包含在里面，这是必须的。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">3 &lt;loc&gt;http://tiankonguse.com&lt;/loc&gt;</span></div><div><span style="font-size: 22px;">&nbsp; &nbsp; &nbsp;用&lt;loc&gt;描述出具体的链接地址，这里需要注意的是链接地址中的一些特殊字符必须转换为XML(HTML)定义的转义字符</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">4 &lt;lastmod&gt;2013-02-28T17:00:00+00:00&lt;/lastmod&gt;</span></div><div><span style="font-size: 22px;">&nbsp; &nbsp; &nbsp; &lt;lastmod&gt;是用来指定该链接的最后更新时间，这个很重要。Google的机器人会在索引此链接前先和上次索引记录的最后更新时间进行比较，如果时间一样就会跳过不再索引。所以如果你的链接内容基于上次Google索引时的内容有所改变，应该更新该时间，让Google下次索引时会重新对该链接内容进行分析和提取关键字。这里必须用ISO 8601中指定的时间格式进行描述，格式化的时间格式如下：</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">&nbsp; &nbsp; &nbsp;年：YYYY(2013)&nbsp;</span></div><div><span style="font-size: 22px;">&nbsp; &nbsp; &nbsp;年和月：YYYY-MM(</span><span style="font-size: 22px;">2013-02</span><span style="font-size: 22px;">)&nbsp;</span></div><div><span style="font-size: 22px;">&nbsp; &nbsp; &nbsp;年月日：YYYY-MM-DD(</span><span style="font-size: 22px;">2013-02-28</span><span style="font-size: 22px;">)&nbsp;</span></div><div><span style="font-size: 22px;">&nbsp; &nbsp; &nbsp;年月日小时分钟：YYYY-MM-DDThh:mmTZD(2013-02-28T17:00+00:00)&nbsp;</span></div><div><span style="font-size: 22px;">&nbsp; &nbsp; &nbsp;年月日小时分钟秒：YYYY-MM-DDThh:mmTZD(2013-02-28T17:00:00+00:00)&nbsp;</span></div><div><span style="font-size: 22px;">&nbsp; &nbsp; &nbsp;这里需注意的是TZD，TZD指定就是本地时间区域标记，像中国就是+08:00了</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">5 &lt;changefreq&gt;always&lt;/changefreq&gt;</span></div><div><span style="font-size: 22px;">&nbsp; &nbsp; &nbsp;用这个标签告诉Google此链接可能会出现的更新频率，比如首页肯定就要用always(经常)，而对于很久前的链接或者不再更新内容的链接就可以用yearly(每年)。这里可以用来描述的单词共这几个："always", "hourly", "daily", "weekly", "monthly", "yearly"，具体含义我就不用解释了吧，光看单词的意思就明白了。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">6 &lt;priority&gt;1.0&lt;/priority&gt;</span></div><div><span style="font-size: 22px;">&nbsp; &nbsp; &lt;priority&gt;是用来指定此链接相对于其他链接的优先权比值，此值定于0.0 - 1.0之间</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">7 还有&lt;/url&gt;和&lt;/urlset&gt;，这两个就是来关闭xml标签的。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">8 另外需要注意的是，这个xml文件必须是utf-8的编码格式。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">例如：</span></div><div><span style="font-size: 22px;"><br></span></div><div><br><pre><code class="xml">&lt;?xml version="1.0" encoding="UTF-8"?&gt;\r\n&lt;urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9"&gt;\r\n&lt;url&gt;\r\n&lt;loc&gt;http://tiankonguse.com/&lt;/loc&gt;\r\n&lt;priority&gt;1.0&lt;/priority&gt;\r\n&lt;lastmod&gt;2013-02-28T17:00:00+00:00&lt;/lastmod&gt;\r\n&lt;changefreq&gt;Always&lt;/changefreq&gt;\r\n&lt;/url&gt;\r\n&lt;/urlset&gt;\r\n</code></pre><br></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;"><br></span></div>\r\n\r\n\r\n\r\n\r\n', '', '');
INSERT INTO `tk_blog` (`tk_blog_key`, `tk_blog_user`, `tk_blog_datetime`, `tk_blog_title`, `tk_blog_content`, `tk_blog_password`, `tk_blog_category`) VALUES
('tiankonguse1362102250', 'tiankonguse', '2013-03-01 01:44:10', '使用zymic的问题(1)', '<div style="text-align: center;"><span style="font-size: 22px;">使用zymic的问题(1)</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">最近想换个免费的空间，于是找到了www.zymic.com。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">但是注册完后，发现一个严重的问题。</span></div><div><span style="font-size: 22px;">问题就是提示：Registration from your country is temporarily disabled at this time and until further notice.。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">什么意思呢？</span></div><div><span style="font-size: 22px;">简单的说就是在我们国家用不了，它怎么知道我们在那个国家呢？</span></div><div><span style="font-size: 22px;">用我们的IP找到我们在那个国家的，所以我们就要改变我们的IP了。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">怎么改变自己的IP呢？</span></div><div><span style="font-size: 22px;">很简单，使用国外代理就行了。</span></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><br></div>', '', ''),
('tiankonguse1362103348', 'tiankonguse', '2013-03-01 02:02:28', '网站添加Google 广告', '<div style="text-align: center;"><span style="font-size: 22px;">网站添加Google 广告</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">所有新加入的 AdSense 内容广告发布商都必须通过分两步完成的申请审批。</span></div><div><span style="font-size: 22px;">此审批流程仅适用于 AdSense 内容广告申请人。</span></div><div><span style="font-size: 22px;">如果您是通过其他产品（比如 AdSense 搜索广告、移动内容广告、视频广告、游戏广告等）来赚取收益，则无需接受此两步式审批。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">此流程中的第一步是对您的网站和帐户详细信息进行初步检查。</span></div><div><span style="font-size: 22px;">申请流程的第二步要求您在网站上实施 HTML 广告代码。</span></div><div><span style="font-size: 22px;">当您的网站开始累积广告展示次数后，网站上将会暂时显示“空白广告”，直到最终审批流程完成。</span></div><div><span style="font-size: 22px;">此类空白广告会与网页的背景融为一体，因此不会对用户体验造成影响。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">在此期间，您的网站不会产生任何广告收入，并且如果您登录到帐户，就会看到一条背景为红色的提醒，说明您的帐户正在审核中。</span></div><div><span style="font-size: 22px;">此审核期还让Google有机会抓取您的网站，并将其添加到Google的索引中，以便在您的申请获得全面批准后您的网站可以迅速开始展示广告。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">在您实施广告代码之后，Google将完成对您网站的审核，然后做出最终审批决定。</span></div><div><span style="font-size: 22px;">如果申请获批，您的现有广告单元中将开始展示实际广告。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">您的广告的相关性应该会随着时间的推移而越来越强。</span></div><div><span style="font-size: 22px;">不过请注意，如果您对网页进行更改，则可能要到一两周之后，Google的抓取工具才能捕获相应更改并更新我们的索引，从而提供更具相关性的广告。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">在添加完 AdSense 搜索广告代码后，您的网页上将会立即生成一个 AdSense 搜索框。</span></div><div><span style="font-size: 22px;">由于搜索结果是显示在 Google 托管的网页之上，因此具有相关性的广告将会立即出现。</span></div><div><span style="font-size: 22px;"><br></span></div>\r\n\r\n\r\n\r\n\r\n', '', ''),
('tiankonguse1362108343', 'tiankonguse', '2013-03-01 03:25:43', 'Windows 功能介绍', '<div style="text-align: center;"><span style="font-size: 22px;">Windows 功能介绍</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">Windows 附带的某些程序和功能（如 Internet 信息服务），必须在使用它们之前将其打开。</span></div><div><span style="font-size: 22px;">某些其他功能默认情况下是打开的，但可以在不使用它们时将其关闭。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">在 Windows 的早期版本中，若要关闭某个功能，必须从计算机上将其完全卸载。</span></div><div><span style="font-size: 22px;">在 Windows 的后来版本中，这些功能仍会保留存储在硬盘上，以便可以在需要时重新打开它们。</span></div><div><span style="font-size: 22px;">关闭某个功能不会将其卸载，并且不会减少 Windows 功能使用的硬盘空间量。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;"><br></span></div><div><font size="6"><b>打开 Windows 功能 界面</b></font></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">单击“开始”按钮 ，单击“控制面板”，单击“程序”，然后单击“打开或关闭 Windows 功能”。 &nbsp;&nbsp;</span></div><div><span style="font-size: 22px;">如果系统提示您输入管理员密码或进行确认，请键入密码或提供确认。</span></div><div><span style="font-size: 22px;"><br></span></div><div><font size="6"><b>打开或关闭 Windows 功能</b></font></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">若要打开某个 Windows 功能，请选择该功能旁边的复选框。若要关闭某个 Windows 功能，请清除该复选框。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">提示：某些 Windows 功能在文件夹中分组在一起，并且某些文件夹包含具有其他功能的子文件夹。</span></div><div><span style="font-size: 22px;">&nbsp; &nbsp; &nbsp; 如果部分选中了某个复选框或复选框显示为灰色，则该文件夹中的某些项目已打开，而某些尚处于关闭状态。</span></div><div><span style="font-size: 22px;">&nbsp; &nbsp; &nbsp; 若要查看文件夹中的内容，请双击该文件夹。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">理论上打开或关闭Windows功能不会对系统的稳定性造成影响。</span></div><div><span style="font-size: 22px;"><br></span></div><div><font size="6"><b>功能解释</b></font></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">Indexing Service</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;"><span class="Apple-tab-span" style="white-space:pre">	</span>官方解释：</span></div><div><span style="font-size: 22px;"><span class="Apple-tab-span" style="white-space:pre">	</span>Indexing Service is a base service that extracts content from files and constructs an indexed catalog to facilitate efficient and rapid searching.</span></div><div><span style="font-size: 22px;"><span class="Apple-tab-span" style="white-space:pre">	</span>Indexing Service can extract both text and property information from files on the local host and on remote, networked hosts. The files can be simply members of a selected file system or part of a virtual Web hosted by, for example, Internet Information Services (IIS).</span></div><div><span style="font-size: 22px;"><span class="Apple-tab-span" style="white-space:pre">	</span>Indexing Service extracts the content by filtering, using filter components that understand a file''s format. The format could include multi-language features such as international languages and locales. A filter component implements the IFilter interface, which supplies methods to read a file to extract text and properties. Windows 2000 and Microsoft Windows XP supply filters for Microsoft Office files, Hypertext Markup Language (HTML) files, Multipurpose Internet Mail Extension (MIME) messages, and plain-text files.</span></div><div><span style="font-size: 22px;"><span class="Apple-tab-span" style="white-space:pre">	</span>Indexing Service then merges the extracted information into catalogs of indexes for efficient searches. Indexing is the overall process of filtering, creating index entries, and merging them into catalogs.</span></div><div><span style="font-size: 22px;"><span class="Apple-tab-span" style="white-space:pre">	</span>The final step in the indexing process is creation of a catalog that contains a master index (and any temporary word lists and shadow indexes) storing words and their locations within a set of indexed documents. Subsequently, searching, or querying, the catalogs for particular word combinations uses the master index as well as word lists and shadow indexes to execute queries quickly and efficiently.</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;"><span class="Apple-tab-span" style="white-space:pre">	</span>tiankonguse 解释：</span></div><div><span style="font-size: 22px;"><span class="Apple-tab-span" style="white-space:pre">		</span>本机和远程计算机的索引内容和档案属性。</span></div><div><span style="font-size: 22px;"><span class="Apple-tab-span" style="white-space:pre">		</span>透过弹性的查询语言提供快速档案存取。</span></div><div><span style="font-size: 22px;"><span class="Apple-tab-span" style="white-space:pre">		</span>简单的说可以让你加快搜查速度,建议关闭。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span class="Apple-tab-span" style="white-space: pre; font-size: 22px;">	</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">Internet Explorer</span></div><div><span class="Apple-tab-span" style="white-space: pre; font-size: 22px;">	</span></div><div><span class="Apple-tab-span" style="white-space: pre; font-size: 22px;">	</span></div><div><span class="Apple-tab-span" style="white-space: pre; font-size: 22px;">	</span></div><div><span style="font-size: 22px;">Internet Information Services可承载的Web核心</span></div><div><span style="font-size: 22px;"><span class="Apple-tab-span" style="white-space:pre">	</span>可承载 Web 核心，其他应用程序可以使用或承载核心 IIS Web 引擎组件。</span></div><div><span style="font-size: 22px;"><span class="Apple-tab-span" style="white-space:pre">	</span>这使 IIS 7 组件可以直接在应用程序中为 HTTP 请求提供服务。</span></div><div><span style="font-size: 22px;"><span class="Apple-tab-span" style="white-space:pre">	</span>这很适合为自定义应用程序或调试应用程序启用基本 Web 服务器功能。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">Internet信息服务</span></div><div><span style="font-size: 22px;"><span class="Apple-tab-span" style="white-space:pre">	</span>Internet 信息服务（IIS）可以使您在 Internet 或 Intranet 上非常容易地发布信息。</span></div><div><span style="font-size: 22px;"><span class="Apple-tab-span" style="white-space:pre">	</span>IIS 包含许多管理网站和 Web 服务器的功能。</span></div><div><span style="font-size: 22px;"><span class="Apple-tab-span" style="white-space:pre">	</span>而且具有像 Active Server Pages （ASP）一样的编程功能，您可以利用它创建并配置可升级的、灵活的 Web 应用程序。系统不会默认安装 IIS。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">Microsoft .NET Framework3.5.1</span></div><div><span style="font-size: 22px;"><span class="Apple-tab-span" style="white-space:pre">	</span>Microsoft .NET Framework 3.5.1 将 .NET Framework 2.0 和 3.0 API 的强大功能与新技术组合在一起以构建应用程序，这些应用程序可以提供引人注意的用户界面，保护客户的个人标识信息，支持无缝、安全的通信，以及提供为一系列业务过程建模的功能。<span class="Apple-tab-span" style="white-space:pre">	</span></span></div><div><span class="Apple-tab-span" style="white-space: pre; font-size: 22px;">	</span></div><div><span style="font-size: 22px;">Microsoft Message Queue(MSMQ)服务器</span></div><div><span style="font-size: 22px;"><span class="Apple-tab-span" style="white-space:pre">	</span>利用 MSMQ（Microsoft Message Queue），应用程序开发人员可以通过发送和接收消息方便地与应用程序进行快速可靠的通信。</span></div><div><span style="font-size: 22px;"><span class="Apple-tab-span" style="white-space:pre">	</span>消息处理为您提供了有保障的消息传递和执行许多业务处理的可靠的防故障方法。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">NFS服务</span></div><div><span style="font-size: 22px;"><span class="Apple-tab-span" style="white-space:pre">	</span>NFS是Network File System的简写,即网络文件系统.网络文件系统是FreeBSD支持的文件系统中的一种，也被称为NFS. NFS允许一个系统在网络上与他人共享目录和文件。</span></div><div><span style="font-size: 22px;"><span class="Apple-tab-span" style="white-space:pre">	</span>通过使用NFS，用户和程序可以像访问本地文件一样访问远端系统上的文件。<span class="Apple-tab-span" style="white-space:pre">	</span></span></div><div><span class="Apple-tab-span" style="white-space: pre; font-size: 22px;">	</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">RIP侦听器</span></div><div><span style="font-size: 22px;"><span class="Apple-tab-span" style="white-space:pre">	</span>英文原义：Routing Information Protocol (简称RIP)。</span></div><div><span style="font-size: 22px;"><span class="Apple-tab-span" style="white-space:pre">	</span>中文释义：路由信息协议该协议是施乐公司20世纪80年代推出的，主要适用于小规模的网络环境。</span></div><div><span style="font-size: 22px;"><span class="Apple-tab-span" style="white-space:pre">	</span>RIP协议主要用于一个AS（自治系统）内的路由信息的传递，每30秒发送一次路由信息更新，RIP协议提供跳跃计数（hop count）作为尺度来衡量路由距离，跳跃计数是一个包到达目标所必须经过的路由器的数目，RIP最多支持的跳跃数为15。</span></div><div><span style="font-size: 22px;"><span class="Apple-tab-span" style="white-space:pre">	</span>应用：在Windows中，我们可以通过启用“RIP侦听”功能来侦听RIP消息，这样计算机可以了解其他路由，然后向路由表中添加它们的IP地址。</span></div><div><span style="font-size: 22px;"><span class="Apple-tab-span" style="white-space:pre">	</span>以Windows XP为例，具体的启用“RIP侦听”功能方法如下：首先，打开“控制面板”，双击“添加或删除程序”。</span></div><div><span style="font-size: 22px;"><span class="Apple-tab-span" style="white-space:pre">	</span>接着，单击“添加或删除Windows组件”，单击“网络服务”，然后单击“详细信息”。</span></div><div><span style="font-size: 22px;"><span class="Apple-tab-span" style="white-space:pre">	</span>选中“RIP 侦听器”复选框，然后单击“确定”按钮安装该组件。 &nbsp;&nbsp;</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">Tablet PC组件</span></div><div><span style="font-size: 22px;"><span class="Apple-tab-span" style="white-space:pre">	</span>Tablet PC输入面板，Windows日记，数字输入面板和其他手写功能</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">Telnet服务器</span></div><div><span style="font-size: 22px;"><span class="Apple-tab-span" style="white-space:pre">	</span>Telnet协议是TCP/IP协议族中的一员，是Internet远程登陆服务的标准协议和主要方式。</span></div><div><span style="font-size: 22px;"><span class="Apple-tab-span" style="white-space:pre">	</span>它为用户提供了在本地计算机上完成远程主机工作的能力。</span></div><div><span style="font-size: 22px;"><span class="Apple-tab-span" style="white-space:pre">	</span>在终端使用者的电脑上使用telnet程序，用它连接到服务器。</span></div><div><span style="font-size: 22px;"><span class="Apple-tab-span" style="white-space:pre">	</span>终端使用者可以在telnet程序中输入命令，这些命令会在服务器上运行，就像直接在服务器的控制台上输入一样。</span></div><div><span style="font-size: 22px;"><span class="Apple-tab-span" style="white-space:pre">	</span>可以在本地就能控制服务器。</span></div><div><span style="font-size: 22px;"><span class="Apple-tab-span" style="white-space:pre">	</span>要开始一个telnet会话，必须输入用户名和密码来登录服务器。</span></div><div><span style="font-size: 22px;"><span class="Apple-tab-span" style="white-space:pre">	</span>Telnet是常用的远程控制Web服务器的方法。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">Telnet客户端</span></div><div><span style="font-size: 22px;"><span class="Apple-tab-span" style="white-space:pre">	</span>Telnet客户端是用来连接服务器来请求数据的。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">TFTP客户端</span></div><div><span style="font-size: 22px;"><span class="Apple-tab-span" style="white-space:pre">	</span>TFTP全称为Trivial File Transfer Protocol，中文名叫简单文件传输协议。</span></div><div><span style="font-size: 22px;"><span class="Apple-tab-span" style="white-space:pre">	</span>首先TFTP客户端与服务端通过udp通信，udp不是可靠的通信服务，为了保持通信中数据的可靠传输，我们采用简单的确认机制，服务端对每一个数据报文从01开始编号（0号报文为系统保留），客户端收到数据报文后，发送确认报文，确认报文应该包含服务器发送报文的编号，这样，当服务端收到确认报文并检查确认数据报文编号，如果是以前发送的最新报文则发送下一个报文。</span></div><div><span style="font-size: 22px;"><span class="Apple-tab-span" style="white-space:pre">	</span>这里需要注意的是，如果服务端在一定时间内没有收到确认报文，则会发生超时，具体超时处理看具体的服务端，一般的默认处理是重新发送报文，当超时次数达到一定的数字，则退出，客户端处理是如果没有收到数据报文，则发送最新收到数据报文的确认报文，如果在一定时间没有收到，则发生超时，通常的超时处理是重新发送最新收到数据报文的确认报文，如果超时次数超过一定的数字，则退出。在TFTP通信过程，可以随时的中断通信。这就是TFTP通信的整个过程。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">Windows Process Activation Service</span></div><div><span style="font-size: 22px;"><span class="Apple-tab-span" style="white-space:pre">	</span>process activation service翻译成中文是Windows进程激活服务。</span></div><div><span style="font-size: 22px;"><span class="Apple-tab-span" style="white-space:pre">	</span>Windows process activation service Windows进程激活服务Windows 进程激活服务通过删除对 HTTP 的依赖关系，可统一 Internet 信息服务 (IIS) 进程模型。</span></div><div><span style="font-size: 22px;"><span class="Apple-tab-span" style="white-space:pre">	</span>通过使用非 HTTP 协议，以前只可用于 HTTP 应用程序的 IIS 的所有功能现在都可用于运行 Windows Communication Foundation (WCF) 服务的应用程序。</span></div><div><span style="font-size: 22px;"><span class="Apple-tab-span" style="white-space:pre">	</span>IIS 7.0 还使用 Windows 进程激活服务通过 HTTP 实现基于消息的激活。</span></div><div><span style="font-size: 22px;"><span class="Apple-tab-span" style="white-space:pre">	</span>WAS（Windows Process Activation Service）增强了对web服务和WCF服务的管理，提供了新的图形界面和命令行工具用于管理web应用程序。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">Windows Search</span></div><div><span style="font-size: 22px;"><span class="Apple-tab-span" style="white-space:pre">	</span>使用 Windows Search 4.0 可以对计算机执行快速搜索。</span></div><div><span style="font-size: 22px;"><span class="Apple-tab-span" style="white-space:pre">	</span>Windows Search 4.0 帮助您查找和预览计算机上的文档、电子邮件、音乐文件、照片和其他项目。</span></div><div><span style="font-size: 22px;"><span class="Apple-tab-span" style="white-space:pre">	</span>Windows Search 4.0 中的搜索引擎是一项 Microsoft Windows 服务，诸如 Microsoft Office Outlook 2007 和 Microsoft Office OneNote 2007 等程序也使用此服务。</span></div><div><span style="font-size: 22px;"><span class="Apple-tab-span" style="white-space:pre">	</span>您可以使用此搜索引擎为程序的内容编制索引；此外，在特定的程序中进行搜索时，可以使用它获得即时结果。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">Windows TIFF IFilter</span></div><div><span style="font-size: 22px;"><span class="Apple-tab-span" style="white-space:pre">	</span>IFilter允许索引和搜索RAR压缩文件中的内容,包括压缩包中的Office文档、HTML及文本文件,提取MP3和图片文件中的相关...IFilter运行在Windows平台并与操作系统无缝集成,它允许你索引和搜索编译过的HTML帮助文件(CHM)。</span></div><div><span class="Apple-tab-span" style="white-space: pre; font-size: 22px;">	</span></div><div><span style="font-size: 22px;">Windows小工具平台</span></div><div><span style="font-size: 22px;"><span class="Apple-tab-span" style="white-space:pre">	</span>可以显示桌面上的小工具</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">XPS Viewer</span></div><div><span style="font-size: 22px;"><span class="Apple-tab-span" style="white-space:pre">	</span>可以读取，复制，打印，签名XPS文档以及设置该文档的权限。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">XPS服务</span></div><div><span style="font-size: 22px;"><span class="Apple-tab-span" style="white-space:pre">	</span>XPS 是 XML Paper Specification 的简称，它是微软公司开发的一种文档保存与查看的规范格式。</span></div><div><span style="font-size: 22px;"><span class="Apple-tab-span" style="white-space:pre">	</span>支持XPS电子文档的服务。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">打印和文件服务</span></div><div><span style="font-size: 22px;"><span class="Apple-tab-span" style="white-space:pre">	</span>在计算机上启用打印，传真，扫描任务。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">基于UNIX的应用程序子系统</span></div><div><span style="font-size: 22px;"><span class="Apple-tab-span" style="white-space:pre">	</span>基于UNIX的应用程序子系统是一种源兼容子系统，可以运行在Windows系统的计算机上编译和运行自定义的基于UNIX应用程序和脚本。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">简单TCPIP服务（即echo，daytime等）</span></div><div><span style="font-size: 22px;"><span class="Apple-tab-span" style="white-space:pre">	</span>Character Generator (CHARGEN)：发送由 95 个可打印 ASCII 字符集组成的数据。</span></div><div><span style="font-size: 22px;"><span class="Apple-tab-span" style="white-space:pre">	</span>作为调试工具用于行式打印机的测试或疑难解答。</span></div><div><span class="Apple-tab-span" style="white-space: pre; font-size: 22px;">	</span></div><div><span style="font-size: 22px;"><span class="Apple-tab-span" style="white-space:pre">	</span>Daytime：返回包含星期几、月、日、年、当前时间（以 hh:mm:ss 格式），以及时区信息的消息。</span></div><div><span style="font-size: 22px;"><span class="Apple-tab-span" style="white-space:pre">	</span>有些程序能使用该服务的输出调试或监视系统时钟时间或在另一台主机上的变化。</span></div><div><span class="Apple-tab-span" style="white-space: pre; font-size: 22px;">	</span></div><div><span style="font-size: 22px;"><span class="Apple-tab-span" style="white-space:pre">	</span>Discard：丢弃在此端口收到的所有消息，不进行响应或确认。</span></div><div><span style="font-size: 22px;"><span class="Apple-tab-span" style="white-space:pre">	</span>可以充当空端口，在网络安装和配置期间接收和路由 TCP/IP 测试消息，或在某些情况下，可以被程序用作消息丢弃功能。</span></div><div><span class="Apple-tab-span" style="white-space: pre; font-size: 22px;">	</span></div><div><span style="font-size: 22px;"><span class="Apple-tab-span" style="white-space:pre">	</span>Echo：回显在此服务器端口收到的任何消息的数据。</span></div><div><span style="font-size: 22px;"><span class="Apple-tab-span" style="white-space:pre">	</span>Echo 可用作网络调试和监视工具。</span></div><div><span class="Apple-tab-span" style="white-space: pre; font-size: 22px;">	</span></div><div><span style="font-size: 22px;"><span class="Apple-tab-span" style="white-space:pre">	</span>Quote of the Day (QUOTE)：返回对消息中一行或多行文本的引用。</span></div><div><span style="font-size: 22px;"><span class="Apple-tab-span" style="white-space:pre">	</span>引用是从以下文件中随机选取的：systemroot\\System32\\Drivers\\Etc\\Quotes。</span></div><div><span style="font-size: 22px;"><span class="Apple-tab-span" style="white-space:pre">	</span>示例引用文件随简单 TCP/IP 服务一起安装。如果该文件丢失，引用服务将无法使用。</span></div><div><span style="font-size: 22px;">&nbsp; &nbsp;&nbsp;</span></div><div><span style="font-size: 22px;">简单网络管理协议（SNMP）</span></div><div><span style="font-size: 22px;"><span class="Apple-tab-span" style="white-space:pre">	</span>SNMP 是专门设计用于在 IP 网络管理网络节点（服务器、工作站、路由器、交换机及 HUBS 等）的一种标准协议，它是一种应用层协议。</span></div><div><span style="font-size: 22px;"><span class="Apple-tab-span" style="white-space:pre">	</span>SNMP 使网络管理员能够管理网络效能，发现并解决网络问题以及规划网络增长。</span></div><div><span style="font-size: 22px;"><span class="Apple-tab-span" style="white-space:pre">	</span>通过 SNMP 接收随机消息（及事件报告）网络管理系统获知网络出现问题。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">媒体功能 &nbsp; &nbsp; &nbsp; &nbsp;</span></div><div><span style="font-size: 22px;"><span class="Apple-tab-span" style="white-space:pre">	</span>控制媒体功能，如：Windows Media Player等</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">远程差分压缩</span></div><div><span style="font-size: 22px;"><span class="Apple-tab-span" style="white-space:pre">	</span>使用最小带宽计算和传送网络上两个对象之间的差异。<span class="Apple-tab-span" style="white-space:pre">	</span></span></div><div><span class="Apple-tab-span" style="white-space: pre; font-size: 22px;">	</span></div><div><span style="font-size: 22px;"><br></span></div><div><font size="6"><b>建议</b></font></div><div><span class="Apple-tab-span" style="white-space: pre; font-size: 22px;">	</span></div><div><span style="font-size: 22px;">强烈建议保留Internet Explorer 8和Windows Media Player，因为有很多软件会调用到相关的程序。</span></div><div><span style="font-size: 22px;">如果去掉Windows Search，那么系统的搜索功能就不能用了，也强烈建议保留。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">至于Windows小工具平台、媒体功能的Windows DVD Maker和Windows Media Center、游戏都是一些平时用不上的功能，所以全部关闭。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">XPS Viewer用来打开XPS文档，即“微软的pdf”，也可关闭。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">最后建议将远程差分压缩关掉。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">其实关闭一些功能后系统的运行速度会提高很可能只是心理作用。</span></div>\r\n\r\n\r\n\r\n\r\n', '', ''),
('tiankonguse1362120223', 'tiankonguse', '2013-03-01 06:43:43', '使用000webhost的问题(1)', '<div style="text-align: center;"><span style="font-size: 22px;">使用000webhost的问题(1)</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">最近想换个免费的空间，于是找到了www.000webhost.com。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">但是注册完后，发现一个严重的问题。</span></div><div><span style="font-size: 22px;">申请了账户之后，状态一直是认证中。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">什么原因呢？</span></div><div><span style="font-size: 22px;">简单的说就是在我们国家用不了，所以一直在认证当中。</span></div><div><span style="font-size: 22px;">不能用直接说出来嘛，让人家把白白等了好几天呢。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">它怎么知道我们在那个国家呢？</span></div><div><span style="font-size: 22px;">用我们的IP找到我们在那个国家的，所以我们就要改变我们的IP了。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">怎么改变自己的IP呢？</span></div><div><span style="font-size: 22px;">很简单，使用国外代理就行了。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;"><br></span></div>', '', ''),
('tiankonguse1362120587', 'tiankonguse', '2013-03-01 06:49:47', 'PR值初步认识', '<div style="text-align: center;"><span style="font-size: 22px;">PR值初步认识</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">PR值作为很多网站交换友链的硬性标准之一，稍微大一点的网站交换友链的时候，都会第一个要求PR值，所以关于它的更新时间问题，很多站长都很期待。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">究竟它什么时候才会更新呢？</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">从往年的更新时间来看，PR值大概每三个月更新一次。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">PR的更新对于广大站长来说是一件大事，是谷歌对于网站综合等级的评价，同时PR更新也意味着在以后的时间里可以换到更优质的友链资源了，对于百度现在大力打击这些买卖链接的存在的时候，我们只有更换到更好的友链才能在短时期内获得更好的排名了，同时优质的友链资源也可以带动关键词的排名、快照的更新、网站内容页的收录，对于那些稍微好一点的网站来说，要想和他们换友链，PR是最基本的门槛，，所以，很多站长都期待着PR值的更新。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">但是PR值的更新是不是会一直上升呢？从1到2，从2到3，然后一直往上，实际上PR值也可能会下降。</span></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><br></div><div style="color: rgb(0, 0, 0); font-size: 22px;">有一点需要注意，自己的网站一定不能关闭几天然后再开，这样RP值可能会变为0.</div><div style="color: rgb(0, 0, 0); font-size: 22px;">我的网站就是如此，由于使用的免费的空间，经常会无法访问。</div><div style="color: rgb(0, 0, 0); font-size: 22px;">起初我查了我的RP值，是4，网站无法访问了三天后恢复了，可是，再查RP值就变为0了。</div>\r\n\r\n\r\n\r\n\r\n', '', ''),
('tiankonguse1362128219', 'tiankonguse', '2013-03-01 08:56:59', '为什么使用代理服务器', '<div style="text-align: center;"><span style="font-size: 22px;">为什么使用代理服务器</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">你是否因为网段的限制而无法访问更多精彩的网站？</span></div><div><span style="font-size: 22px;">你是否因为端口的限制而无法登录QQ服务器？</span></div><div><span style="font-size: 22px;">这时，如果有个人跟你说“去用代理服务器”，你是否又困惑什么是代理服务器呢？</span></div><div><span style="font-size: 22px;">其实，代理服务器并不像你想象中的那么神秘啊。</span></div><div><span style="font-size: 22px;">今天就让我带大家实战五花八门的主流软件代理服务器客户端的设置。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">代理服务器是指当你的计算机和你要访问的计算机之间的一台计算机。</span></div><div><span style="font-size: 22px;">你的所有请求都由它替你进行。</span></div><div><span style="font-size: 22px;">而被访问的那台计算机对请求的回答，也由它转达到你这里。</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">假设代理服务器地址为192.168.0.1，端口80。</span></div><div><span style="font-size: 22px;">单击IE菜单“工具”→“Internet 选项”→“连接”，单击“局域网设置”按钮，选中“为LAN使用代理服务器”，输入代理服务器ip地址和端口即可</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">首先我要说明，我们这里要谈的代理，是代理服务器，英文名叫Proxy Server。</span></div><div><span style="font-size: 22px;">一般来讲，对于我们这些普通的网民它的作用有三个（撇开一些高深的用处不谈，因为我们未必会用到）：</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">一是通过它，我们可以访问到一些平时不能去的网站。</span></div><div><span style="font-size: 22px;">不信你可以马上打开你的浏览器和输入“www.geocities.com”这个网址。</span></div><div><span style="font-size: 22px;">怎样？不用看着浏览器在这里空等了，并不是你的网络速度慢，也不是没有这个网站，而是你访问不到它（网络上还有很多这些类型的网站哦）。</span></div><div><span style="font-size: 22px;">为什么访问不到？</span></div><div><span style="font-size: 22px;">这个问题嘛......说法有很多种，大部分都说是国内的网络被限制了访问，所以某些网站是不能去的。</span></div><div><span style="font-size: 22px;">至于如何可以访问到这些网站？看完本文你就知道了！</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">二是通过它来加快我们浏览某些网站的速度。</span></div><div><span style="font-size: 22px;">有时候我们访问一些国外或者港台网站，速度慢得像蜗牛一样。</span></div><div><span style="font-size: 22px;">但只要你正确的选用代理服务器，速度就可以得到提升，有时候这些速度的提升可是很明显的哦！</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">三是连接Internet与Intranet 充当firewall（防火墙）：</span></div><div><span style="font-size: 22px;">因为所有内部网的用户通过代理服务器访问外界时，只映射为一个IP地址，所以外界不能直接访问到内部网；</span></div><div><span style="font-size: 22px;">同时可以设置IP地址过滤，限制内部网对外部的访问权限；</span></div><div><span style="font-size: 22px;">另外，两个没有互联的内部网，也可以通过第三方的代理服务器进行互联来交换信息。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">如果你在以往浏览过程中出现过以上的情况，那么看来你有必要尝试一下使用代理服务器了。&nbsp;</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">为什么使用代理服务器可以使我们访问一些原本不能访问的网站呢？</span></div><div><span style="font-size: 22px;">为什么使用它后浏览外国网站会比原来的快呢？</span></div><div><span style="font-size: 22px;">形象的说：代理服务器是网络信息的中转站。</span></div><div><span style="font-size: 22px;">在一般情况下，我们使用网络浏览器直接去连接其他Internet站点取得网络信息时，须送出Request信号来得到回答，然后对方再把信息以bit方式传送回来。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">代理服务器是介于浏览器和Web服务器之间的一台服务器，有了它之后，浏览器不是直接到Web服务器去取回网页而是向代理服务器发出请求，Request信号会先送到代理服务器，由代理服务器来取回浏览器所需要的信息并传送给你的浏览器。</span></div><div><span style="font-size: 22px;">而且，大部分代理服务器都具有缓冲的功能，就好象一个大的Cache，它有很大的存储空间，它不断将新取得数据储存到它本机的存储器上，如果浏览器所请求的数据在它本机的存储器上已经存在而且是最新的，那么它就不重新从Web服务器取数据，而直接将存储器上的数据传送给用户的浏览器，这样就能显著提高浏览速度和效率（速度会随着代理服务器地理位置的不同以及网络传输情况而改变），而且国外的网络大部分都是没有限制访问网站或者所限制的不同，所以我们有很大的机会通过代理服务器去访问那些原本不能够去的网站。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">更重要的是：Proxy Server (代理服务器)是 Internet链路级网关所提供的一种重要的安全功能，它的工作主要在开放系统互联 (OSI) 模型的对话层。&nbsp;</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">&nbsp;</span></div>\r\n\r\n\r\n\r\n\r\n', '', ''),
('tiankonguse1362128651', 'tiankonguse', '2013-03-01 09:04:11', 'HTTP代理小常识', '<div style="text-align: center;"><span style="font-size: 22px;">HTTP代理小常识</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">一、HTTP代理的匿名性</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">HTTP代理匿名性是指不通过非常技术手段，直接使用时代理的匿名安全性。</span></div><div><span style="font-size: 22px;">（说明：这里的匿名与其它如FTP服务器的匿名意义是不一样的，不论匿名与否，代理服务器均能起到“代理”的作用。只是匿名代理可以确保被访问方不能追溯到源IP，在一定程度上更加安全而已。这并不是一个重要的指标，是否必要则仁者见仁、智者见智。）</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">二、HTTP CONNECT代理</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">　　对于HTTP代理，不少人有认识上的误区，有必要说明一下，不是所有的HTTP代理都只能代理HTTP的。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">　　HTTP CONNECT代理服务器是一种能够允许用户建立TCP连接到任何端口的代理服务器，这意味着这种代理不仅可用于HTTP，还包括FTP、IRC、RM流服务等，甚至扫描、攻击。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">三、三种代理的区别</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">　　· 全匿名代理　不改变你的request fields，使服务器端看来就像有个真正的客户浏览器在访问它。当然，你的真实IP是隐藏起来的。服务器的网管不会认为你使用了代理。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">　　· 普通匿名代理　能隐藏你的真实IP，但会更改你的request fields，有可能会被认为使用了代理，但仅仅是可能，一般说来是没问题的。不过不要受它的名字的误导，其安全性可能比全匿名代理更高，有的代理会剥离你的部分信息（就好比防火墙的stealth mode），使服务器端探测不到你的操作系统版本和浏览器版本。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">　　· 透明代理（简单代理）　改编你的request fields，并会传送真实IP</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">跳板是一个程序，也可以说是一种socks5代理的应用吧。* 从本地机器连接到远程机器， 中间通过安装的代理跳板。</span></div><div><span style="font-size: 22px;">对应用程序而言，相当于普通的sock代理调用。&nbsp;</span></div><div><span style="font-size: 22px;">* 在跳板之间传输的数据，是已经被动态加密的。加密种子每次不同。&nbsp;</span></div><div><span style="font-size: 22px;">* 跳板的数目由 1 到 255，不限制,当数目为0时，相当于Sock5代理服务器。&nbsp;</span></div>\r\n\r\n\r\n\r\n\r\n', '', ''),
('tiankonguse1362128898', 'tiankonguse', '2013-03-01 09:08:18', 'SSL初级认识', '<div style="text-align: center;"><span style="font-size: 22px;">SSL代理初级认识</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">SSL是一种国际标准的加密及身份认证通信协议，您用的浏览器就支持此协议。SSL（Secure Sockets Layer）最初是由美国Netscape公司研究出来的，后来成为了Internet网上安全通讯与交易的标准。　</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">SSL协议使用通讯双方的客户证书以及CA根证书，允许客户/服务器应用以一种不能被偷听的方式通讯，在通讯双方间建立起了一条安全的、可信任的通讯通道。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">它具备以下基本特征：信息保密性、信息完整性、相互鉴定。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">主要用于提高应用程序之间数据的安全系数。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">SSL协议的整个概念可以被总结为：一个保证任何安装了安全套接字的客户和服务器间事务安全的协议，它涉及所有TC/IP应用程序。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">SSL代理:支持最高128位加密强度的http代理，可以作为访问加密网站的代理。加密网站是指以https://开始的网站。ssl的标准端口为443。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">默认状态下，IIS使用端口443作为SSL端口。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">但是你也可以根据需要使用任意端口。你可以有很多站点，每个站点有一个非SSL端口数字和一个SSL端口数字。例如，你可以有一个称为</span><span style="font-size: 22px;">tiankonguse</span><span style="font-size: 22px;">的站点，可以把90作为非SSL端口，445作为SSL端口。用户输入http://www.tiankonguse.com&nbsp;;来访问非SSL版本。要访问其SSL版本，就要输入https://</span><span style="font-size: 22px;">www.tiankonguse.com</span><span style="font-size: 22px;">。他们也可以使用IP：端口数,比如 https://</span><span style="font-size: 22px;">www.tiankonguse.com</span><span style="font-size: 22px;">:445。　　</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">https:// 中的"s"非常重要，因为它告诉用户浏览器使用SSL端口。如果你使用了http://</span><span style="font-size: 22px;">www.tiankonguse.com</span><span style="font-size: 22px;">:445，那么什么也不会发生，浏览器只是等待，但是什么也不显示出来。如果你给一个非SSL端口使用https ，例如https://</span><span style="font-size: 22px;">www.tiankonguse.com</span><span style="font-size: 22px;">:90，会出现同样的情形。&nbsp;</span></div>\r\n\r\n\r\n\r\n\r\n', '', '');
INSERT INTO `tk_blog` (`tk_blog_key`, `tk_blog_user`, `tk_blog_datetime`, `tk_blog_title`, `tk_blog_content`, `tk_blog_password`, `tk_blog_category`) VALUES
('tiankonguse1362129086', 'tiankonguse', '2013-03-01 09:11:26', '代理服务器的分类', '<div style="text-align: center;"><span style="font-size: 22px;">代理服务器的分类</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">一、HTTP代理按匿名功能分类。</span></div><div><span style="font-size: 22px;">　　是否具有隐藏IP的功能。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">　　非匿名代理：不具有匿名功能。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">　　匿名代理。使用此种代理时，虽然被访问的网站不能知道你的ＩＰ地址，但仍然可以知道你在使用代理，有些侦测ip的网页也仍然可以查到你的ip。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">　　高度匿名代理：使用此种代理时，被访问的网站不知道你的ＩＰ地址，也不知道你在使用代理进行访问。此种代理的隐藏ＩＰ地址的功能最强。</span></div><div><span style="font-size: 22px;">　　</span></div><div><span style="font-size: 22px;">　　</span></div><div><span style="font-size: 22px;">二、按请求信息的安全性分类</span></div><div><span style="font-size: 22px;">　　</span></div><div><span style="font-size: 22px;">　　全匿名代理：不改变你的request fields（报文），使服务器端看来就像有个真正的客户浏览器在访问它。当然，你的真实IP是隐藏起来的。服务器的网管不会认为你使用了代理。　　</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">　　普通匿名代理：能隐藏你的真实IP，但会更改你的request fields，有可能会被认为使用了代理，但仅仅是可能，一般说来是没问题的。不过不要受它的名字的误导，其安全性可能比全匿名代理更高，有的代理会剥离你的部分信息（就好比防火墙的stealth mode），使服务器端探测不到你的操作系统版本和浏览器版本。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">　　elite代理，匿名隐藏性更高，可隐藏系统及浏览器资料信息等。此种代理安全性特强。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">　　</span></div><div><span style="font-size: 22px;">　　透明代理（简单代理）：透明代理的意思是客户端根本不需要知道有代理服务器的存在，它改编你的request fields（报文），并会传送真实IP。注意，加密的透明代理则是属于匿名代理，意思是不用设置使用代理了，例如Garden 2程序。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">三、按代理服务器的用途分类</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">　　Http代理：代理客户机的http访问，主要代理浏览器访问网页，它的端口一般为80、8080、3128等。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">　　SSL代理:支持最高128位加密强度的http代理，可以作为访问加密网站的代理。加密网站是指以https://开始的网站。ssl的标准端口为443。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">　　HTTP　CONNECT代理：允许用户建立TCP连接到任何端口的代理服务器，这种代理不仅可用于HTTP，还包括FTP、IRC、RM流服务等。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">　　FTP代理：代理客户机上的ftp软件访问ftp服务器，其端口一般为21、2121。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">　　POP3代理：代理客户机上的邮件软件用pop3方式收邮件，其端口一般为110。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">　　Telnet代理：能够代理通信机的telnet，用于远程控制，入侵时经常使用。其端口一般为23。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">　　Socks代理：是全能代理，就像有很多跳线的转接板，它只是简单地将一端的系统连接到另外一端。支持多种协议，包括http、ftp请求及其它类型的请求。它分socks 4 和socks 5两种类型，socks 4只支持TCP协议而socks 5支持TCP/UDP协议，还支持各种身份验证机制等协议。其标准端口为1080。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">　　TUNNEL代理：经HTTPTunnet程序转换的数据包封装成http请求（Request）来穿透防火墙，允许利用HTTP服务器做任何TCP可以做的事情，功能相当于Socks5。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">　　文献代理：可以用来查询数据库的代理，通过这些代理，可以获得互联网的相关科研学术的数据库资源，例如查询Sciencedirect网站（简称SD）、Academic Press、IEEE，SPRINGER等数据库。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">　　教育网代理：指学术教育机构局域网通过特定的代理服务器可使无出国权限或无访问某IP段权限的计算机访问相关资源。</span></div><div><span style="font-size: 22px;">　　</span></div><div><span style="font-size: 22px;">　　跳板代理：应用于跳板程序，可以看作一种具有动态加密的特殊socks5代理，，也可直接用于PSD软件。其端口一般为1813。&nbsp;</span></div><div><span style="font-size: 22px;">　&nbsp;</span></div><div><span style="font-size: 22px;">　　Ssso代理：代理客户机上的ssso程序访问远程网站，具有SSL加密强度的超级代理，支持socks。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">　　Flat代理：代理客户机上的flatsurfer程序访问远程网站，具有高强度加密数据流的特殊代理，支持socks，最大可设置三次级联，可以设置穿越代理。其端口一般为6700。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">　　SoftE代理：代理客户机上的SoftEther程序访问远程网站，应用虚拟集线器HUB和虚拟网卡技术，具备VPN功能及多种认证方式的代理，符合https协议。</span></div>\r\n\r\n\r\n\r\n\r\n', '', ''),
('tiankonguse1362129146', 'tiankonguse', '2013-03-01 09:12:26', '防火墙知识普及', '<div style="text-align: center;"><span style="font-size: 22px;">防火墙知识普及</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">1．什么是防火墙？</span></div><div><span style="font-size: 22px;">防火墙是一个或一组系统，它在网络之间执行访问控制策略。实现防火墙的实际方式各不相同，但是在原则上，防火墙可以被认为是这样一对机制：一种机制是拦阻传输流通行，另一种机制是允许传输流通过。一些防火墙偏重拦阻传输流的通行，而另一些防火墙则偏重允许传输流通过。了解有关防火墙的最重要的概念可能就是它实现了一种访问控制策略。如果你不太清楚你需要允许或否决那类访问，可以咨询防火墙的厂家的技术人员。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">2．为何需要防火墙？</span></div><div><span style="font-size: 22px;">同其它任何社会一样，Internet也受到某些无聊之人的困扰，这些人喜爱在网上做这类的事,像在现实中向其他人的墙上喷染涂鸦、将他人的邮箱推倒或者坐在大街上按汽车喇叭一样。一些人试图通过Internet完成一些真正的工作，而另一些人则拥有敏感或专有数据需要保护。一般来说，防火墙的目是将那些无聊之人挡在你的网络之外，同时使你仍可以完成工作。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">许多传统风格的企业和数据中心都制定了计算安全策略和必须遵守的惯例。在一家公司的安全策略规定数据必须被保护的情况下，防火墙更显得十分重要，因为它是这家企业安全策略的具体体现。如果你的公司是一家大企业，连接到Internet上的最难做的工作经常不是费用或所需做的工作，而是让管理层信服上网是安全的。防火墙不仅提供了真正的安全性，而且还起到了为管理层盖上一条安全的毯子的重要作用。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">最后，防火墙可以发挥你的企业驻Internet“大使”的作用。许多企业利用其防火墙系统作为保存有关企业产品和服务的公开信息、下载文件、错误修补以及其它一些文件的场所。这些系统当中的几种系统已经成为Internet服务结构（如UUnet.uu.net、whitehouse.gov、gatekeeper.dec.com）的重要组成部分，并且给这些机构的赞助者带来了良好的影响。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">3．防火墙可以防范什么？</span></div><div><span style="font-size: 22px;">一些防火墙只允许电子邮件通过，因而保护了网络免受除对电子邮件服务攻击之外的任何攻击。另一些防火墙提供不太严格的保护措施，并且拦阻一些众所周知存在问题的服务。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">一般来说，防火墙在配置上是防止来自“外部”世界未经授权的交互式登录的。这大大有助于防止破坏者登录到你网络中的计算机上。一些设计更为精巧的防火墙可以防止来自外部的传输流进入内部，但又允许内部的用户可以自由地与外部通信。如果你切断防火墙的话，它可以保护你免受网络上任何类型的攻击。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">防火墙的另一个非常重要的特性是可以提供一个单独的“拦阻点”，在“拦阻点”上设置安全和审计检查。与计算机系统正受到某些人利用调制解调器拨入攻击的情况不同，防火墙可以发挥一种有效的“电话监听”（Phone tap）和跟踪工具的作用。防火墙提供了一种重要的记录和审计功能；它们经常可以向管理员提供一些情况概要，提供有关通过防火墙的传流输的类型和数量以及有多少次试图闯入防火墙的企图等等信息。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">4．防火墙不能防范什么？</span></div><div><span style="font-size: 22px;">防火墙不能防范不经过防火墙的攻击。许多接入到Internet的企业对通过接入路线造成公司专用数据数据泄露非常担心。不幸得是，对于这些担心来说，一盘磁带可以被很有效地用来泄露数据。许多机构的管理层对Internet接入非常恐惧，它们对应当如何保护通过调制解调器拨号访问没有连惯的政策。当你住在一所木屋中，却安装了一扇六英尺厚的钢门，会被认为很愚蠢。然而，有许多机构购买了价格昂贵的防火墙，但却忽视了通往其网络中的其它几扇后门。要使防火墙发挥作用，防火墙就必须成为整个机构安全架构中不可分割的一部分。防火墙的策略必须现实，能够反映出整个网络安全的水平。例如，一个保存着超级机密或保密数据的站点根本不需要防火墙：首先，它根本不应当被接入到Internet上，或者保存着真正秘密数据的系统应当与这家企业的其余网络隔离开。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">防火墙不能真正保护你防止的另一种危险是你网络内部的叛变者或白痴。尽管一个工业间谍可以通过防火墙传送信息，但他更有可能利用电话、传真机或软盘来传送信息。软盘远比防火墙更有可能成为泄露你机构秘密的媒介！防火墙同样不能保护你避免愚蠢行为的发生。通过电话泄露敏感信息的用户是社会工程（social engineering）的好目标；如果攻击者能找到内部的一个“对他有帮助”的雇员，通过欺骗他进入调制解调器池，攻击者可能会完全绕过防火墙打入你的网络。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">5．防火墙能否防止病毒的攻击？</span></div><div><span style="font-size: 22px;">防火墙不能有效地防范像病毒这类东西的入侵。在网络上传输二进制文件的编码方式太多了，并且有太多的不同的结构和病毒，因此不可能查找所有的病毒。换句话说，防火墙不可能将安全意识（security-consciosness）交给用户一方。总之，防火墙不能防止数据驱动的攻击：即通过将某种东西邮寄或拷贝到内部主机中，然后它再在内部主机中运行的攻击。过去曾发生过对不同版本的邮件寄送程序和幻像脚本（ghostscript）和免费PostScript阅读器的这类攻击。对病毒十分忧虑的机构应当在整个机构范围内采取病毒控制措施。</span></div>\r\n\r\n\r\n\r\n\r\n', '', ''),
('tiankonguse1362129354', 'tiankonguse', '2013-03-01 09:15:54', '代理服务器基础知识介绍', '<div style="text-align: center;"><span style="font-size: 22px;">代理服务器基础知识介绍</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">Internet大家已经不在陌生，现在已经迈进了广大工薪阶层的家庭。越来越多的公司也纷纷将自己的内部网络接入了Internet。当然接入Internet的方式有很多，对于普通老百姓来说，就是买一个MODEM利用PSTN（公众服务电话网络）接入Internet。而一些公司一般是利用DDN或ISDN接入，利用租月的方式。当然个人不可能承担起租月的费用，那么如何利用一条电话线使多人上网呢？这就牵扯到了Proxy Server（代理服务器）以及如何使用代理服务器的问题。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">Proxy是什么呢，是代理。普通的因特网访问是一个典型的客户机与服务器结构：用户利用计算机上的客户端程序，向浏览器发出请求，远端WWW服务器程序响应请求并提供相应的数据。而Proxy处于客户机与服务器之间，对于服务器来说，Proxy是客户机，Proxy提出请求，服务器响应；对于客户机来说，Proxy是服务器，它接受客户机的请求，并将服务器上传来的数据转给客户机。它的作用很象现实生活中的代理服务商。因此Proxy Server的中文名称就是代理服务器。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">Proxy Server的工作原理是：当客户在浏览器中设置好Proxy Server后，你使用浏览器访问所有WWW站点的请求都不会直接发给目的主机，而是先发给代理服务器，代理服务器接受了客户的请求以后，由代理服务器向目的主机发出请求，并接受目的主机的数据，存于代理服务器的硬盘中，然后再由代理服务器将客户要求的数据发给客户。</span></div><div><span style="font-size: 22px;">代理服务器的作用有四个：</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">一、提高访问速度。因为客户要求的数据存于代理服务器的硬盘中，因此下次这个客户或其它客户再要求相同目的站点的数据时，就会直接从代理服务器的硬盘中读取，代理服务器起到了缓存的作用，对热门站点有很多客户访问时，代理服务器的优势更为明显。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">二、Proxy可以起到防火墙的作用。因为所有使用代理服务器的用户都必须通过代理服务器访问远程站点，因此在代理服务器上就可以设置相应的限制，以过滤或屏蔽掉某些信息。这是局域网网管对局域网用户访问范围限制最常用的办法，也是局域网用户为什么不能浏览某些网站的原因。拨号用户如果使用代理服务器，同样必须服从代理服务器的访问限制，除非你不使用这个代理服务器。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">三、通过代理服务器访问一些不能直接访问的网站。互联网上有许多开放的代理服务器，客户在访问权限受到限制时，而这些代理服务器的访问权限是不受限制的，刚好代理服务器在客户的访问范围之内，那么客户通过代理服务器访问目标网站就成为可能。国内的高校多使用教育网，不能出国，但通过代理服务器，就能实现访问因特网，这就是高校内代理服务器热的原因所在。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">四、安全性得到提高。无论是上聊天室还是浏览网站，目的网站只能知道你来自于代理服务器，而你的真实IP就无法测知，这就使得使用者的安全性得以提高。</span></div><div><span style="font-size: 22px;">代理服务器的设置：</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">要设置代理服务器，必须先知道代理服务器地址和端口号，然后在IE或NC的代理服务器设置栏中填入相应地址和端口号就可以了。假设我们有一个代理服务器的地址是Proxy.net.net，端口号是3000，在IE中的配置方法是使用查看菜单的Internet选项/连接/代理服务器，然后在通过代理服务器访问Internet选项前面的复选框中打上钩，在地址框中填入代理服务器地址，如本例中假设代理服务器地址是proxy.net.net，再在端口框中填上端口号3000，点一下最下方的应用按钮，再点确定，设置完成。下次再使用IE时用户就会发现，无论你浏览什么网站，IE总是先与代理服务器连接。用NC的话，设置稍繁一点。使用edit菜单下的Preferences菜单项，再选择Advanced下的Proxies，此时在右侧Proxies选项中选择第二项Manral Proxy configuration，再点其右边的View…按钮，就会出现代理服务器的配置界面，在代理服务器地址和端口号栏中填入相应的内容，点击OK，退回到参数设置窗口，再点击OK，代理服务器的设置工作就完成了。当客户再次浏览网页时，就会自动向你设定的代理服务器发出申请，并得到数据，在浏览网站时，无论是IE或是NC都可以在浏览器状态栏中清楚地看到先连代理服务器，再连目标网站的过程。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">但是，千万不要把Proxy Server和Router搞混了，Proxy Server是建立在应用层上的服务软件，而Router则是一台网络设备或一台电脑，它是工作在IP层的，数据到达IP层后就进行转发。一般一个Proxy Server工作在一台既具有MODEM和网卡的计算机上的。不同的Proxy Server软件提供的服务不同，一般都提供WWW,FTP等常用的服务。在内部网中每台客机都必须具有一个独立的IP地址，且在客机的"控制面板-Internet 项"中"连接"中配置使用Proxy Server且指向Proxy Server IP地址和服务的端口号。当Proxy Server启动时，将利用Winsock.dll开辟一个指定的服务端口，等待客机的的请求。当Proxy Server的MODEM拨号上网后，你的Proxy Server就可以工作了。当你在你的IE发出一连接请求时，你的客机就直接将数据包发到Proxy Server，当服务器捕获这个IP包时，首先要分析它是什么请求，如果是HTTP请求，Proxy Server就向你的ISP发出HTTP请求，当Proxy Server收到回应时，就将此IP包转发到内部网络上，你的客机就会获得此IP包。另外你的Proxy Server还可以做为一个很好的防火墙。具体操作，请参考你的Proxy Server的readme文件。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">在您访问因特网的Web服务器时，您可知道会有多少个人信息泄漏给别人？在上网访问的过程中，Web浏览器至少会把20多项有关您个人的信息在您毫无觉察的情况下悄悄地送往Web服务器上。 这些个人信息如果是被传送到知名网站或是大型企业的Web服务器上，还不会有什么大问题。若是被传送到连是谁开设的网站都不清楚的Web服务器上，则会令人深感不安。Web浏览器传送给Web服务器的信息，用行话来说就是"环境变量"。其主要内容为：（1）分配给电脑的IP地址（REMOTE＿A DDR）和主机名（REMOTE＿HOST）；（2）Web浏览器所使用的端口序号（REMOTE＿PORT）；（3）Web浏览器的产品名（HTTP＿USER＿AGENT）；（4）所浏览过的网站中最新一个的网页地址（HTTP＿REFERER）等。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">上述各项虽然不包含电子邮件地址及姓名等的个人信息，但（1）中的IP地址和主机名在安全性方面委实令人难以放心，可是采取什么样的方法才可以遮掩自己的IP地址呢？</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">解决这个问题其实很简单。只要通过代理服务器（proxy server）访问Web服务器即可。代理服务器的作用在于它可替Web服务器承受来自各个终端的访问请求。在企业网方面，代理服务器被设置在公司内部的LAN与因特网相互链接的部分上。拔号上网时，可使用因特网接驳商提供的代理服务器即可。</span></div>\r\n\r\n\r\n\r\n\r\n', '', ''),
('tiankonguse1362129997', 'tiankonguse', '2013-03-01 09:26:37', '让apache服务器支持.htaccess', '<div style="text-align: center;"><span style="font-size: 22px;">&nbsp;让apache服务器支持.htaccess</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">&nbsp;如何让自己的本地APACHE服务器支持”.htaccess”呢?</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">其实只要简单修改一下 apache的httpd.conf设置就可以让APACHE支 持.htaccess了。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">打开httpd.conf文件(在APACHE目录的CONF目录里面),用文本编辑器打开后,查找</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">&lt;Directory /&gt;</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">Options FollowSymLinks</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">AllowOverride None</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">&lt;/Directory&gt;</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">改为</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">&lt;Directory /&gt;</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">Options FollowSymLinks</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">AllowOverride All</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">&lt;/Directory&gt;</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">就可以了。</span></div><div><span style="font-size: 22px;">&nbsp;</span></div>\r\n\r\n\r\n\r\n\r\n', '', ''),
('tiankonguse1362130968', 'tiankonguse', '2013-03-01 09:42:48', 'PHP变量的使用', '<div style="text-align: center;"><span style="font-size: 22px;">PHP变量的使用</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">很多朋友在编写PHP程序的时候有时候对变量总有着不能确定的问题，而且也有很多问题就是因为</span></div><div><span style="font-size: 22px;">变量的处理不当所造成的。这里就PHP变量系统说以下，不足之处还望指教。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">PHP的变量分为全局变量与局部变量。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">何为全局变量？</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">学过C/JAVA/C++之类的朋友一定了解main(){}内声明的变量所达的区域了~。</span></div><div><span style="font-size: 22px;">而PHP为解释性语句并非编译语言，我们也知道PHP不存在main(){}主体，从何声明？</span></div><div><span style="font-size: 22px;">其实PHP页面本身就是个main(){}只要是在页面内而非在函数内声明的变量我们都称其为全局变量...</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">例如：</span></div><div><br><pre><code class="php">&lt;?php\r\n    $int_a=0;            //初始全局变量$int_a将其赋值为0\r\n    echo "全局变量:".$int_a;    //打印全局变量\r\n\r\n    function child_a(){        //局部变量的使用\r\n        $int_a=0;        //这里是局部变量，虽然与全局变量名相同但此变量仅在child_a内可见\r\n        echo "From child_a:".$int_a;\r\n    }\r\n    \r\n    function child_b(){        //调用全局变量\r\n        global $int_a;        //声明调用全局变量\r\n        echo "From child_b:".$int_a;\r\n    }\r\n?&gt;</code></pre><br></div><div><span style="font-size: 22px;">从上面的一个例子，我们可以很简单明了的看明白PHP中全局与局部变量之间的差距...</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">另我们高兴的是PHP提供了其他的CGI语言的服务器全局变量...</span></div><div><span style="font-size: 22px;">这些变量当页面调入的时候就已经由系统自动生成</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">这些全局变量包含在</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">&nbsp; &nbsp; $_SERVER($HTTP_SERVER_VARS) &nbsp; &nbsp; &nbsp; &nbsp;(服务器提供的相关变量服务) &nbsp; &nbsp;PHP4.1.0</span></div><div><span style="font-size: 22px;">&nbsp; &nbsp; $_ENV($HTTP_ENV_VARS) &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;(保存相关环境变量) &nbsp; &nbsp;PHP4.1.0</span></div><div><span style="font-size: 22px;">&nbsp; &nbsp; $_POST &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;(保存使用Form post方法提交的变量) &nbsp; &nbsp;PHP4.1.0</span></div><div><span style="font-size: 22px;">&nbsp; &nbsp; $_GET &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;(保存使用Form GET/URI方法提交的变量) &nbsp; &nbsp;PHP4.1.0</span></div><div><span style="font-size: 22px;">&nbsp; &nbsp; $_COOKIE &nbsp; &nbsp; &nbsp; &nbsp;(保存使用页面获得的COOKIE数据) &nbsp; &nbsp;PHP4.1.0</span></div><div><span style="font-size: 22px;">&nbsp; &nbsp; $_SESSION &nbsp; &nbsp; &nbsp; &nbsp;(保存站点内会话变量) &nbsp; &nbsp;PHP4.1.0</span></div><div><span style="font-size: 22px;">&nbsp; &nbsp; $HTTP_POST_VARS &nbsp; &nbsp; &nbsp; &nbsp;(同$_POST,按linuxforum.net一帖对此的评论是$_POST的效率比其更高) &nbsp; &nbsp;PHP4.1.0</span></div><div><span style="font-size: 22px;">&nbsp; &nbsp; $HTTP_GET_VARS &nbsp; &nbsp; &nbsp; &nbsp;(同$_GET,评论同上.) &nbsp; &nbsp;PHP4.1.0</span></div><div><span style="font-size: 22px;">&nbsp; &nbsp; $_REQUEST &nbsp; &nbsp; &nbsp; &nbsp;(包含了$_GET,$_POST,$_COOKIE,$_FILES) &nbsp; &nbsp;PHP4.1.0</span></div><div><span style="font-size: 22px;">&nbsp; &nbsp; $_FILES &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;(严格的说此变量已经包含在$_POST和$HTTP_POST_VARS,主要是获得form post方式提交的file变量) &nbsp; &nbsp;PHP4.1.0</span></div><div><span style="font-size: 22px;">&nbsp; &nbsp; $GLOBALS &nbsp; &nbsp; &nbsp; &nbsp;(保存所有全局变量的数组) &nbsp; &nbsp;PHP3.0.0</span></div><div><span style="font-size: 22px;">&nbsp; &nbsp; $php_errormsg &nbsp; &nbsp; &nbsp; &nbsp;(此全局变量必须在php.ini中将其打开：track_error=on)</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">&nbsp; &nbsp;&nbsp;</span></div><div><span style="font-size: 22px;">以上变量为系统全局变量，您不需要声明他们就可以直接使用。</span></div><div><span style="font-size: 22px;">当然了，您的PHP版本一定要高于或等于他们后面所标注的版本号。</span></div><div><span style="font-size: 22px;">在使用这些变量的时候，您无需用global关键字来声明他们...</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">例如：</span></div><div><br><pre><code class="php">&lt;?php\r\n    function g_p(){\r\n        echo "Welcome ".$_SERVER[REMOTE_ADDR].". nice meet you I am".$_SERVER[SERVER_ADDR];\r\n        // Welcome 192.168.0.3. nice meet you I am 192.168.0.1\r\n    }\r\n?&gt;</code></pre><br></div><div><span style="font-size: 22px;">自定义变量，PHP提供的自定义变量并不象编译型语系那样，需要先声明。</span></div><div><span style="font-size: 22px;">而是直接使用，但如果一个不合理的程序变量的杂乱无规我想过个几天后也许你自己都不会读明白的~。</span></div><div><span style="font-size: 22px;">如果您只需要一个过度变量，您可以随意的去声明他只要不与其他变量发生冲突，而且符合命名规则用后建议使用unset将其删除..</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">PHP还提供了变量的变量这个概念</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">就如以前有人发帖问过这个问题</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">下面将这个表达一下~，其实这是个最简单的变量的变量方法。</span></div><div><span style="font-size: 22px;">我想如果对C里的指针和地址比较熟悉的人理解这个会很快的.</span></div><div><br><pre><code class="php">&lt;?php\r\n	$vvv="int_a";\r\n	$int_a="vvv";\r\n	echo "vvv is:".$vvv;        //vvv is:int_a\r\n	echo "int_a is:".$int_a;    //int_a is:vvv\r\n	echo ''''$$vvv is:''''.$$vvv;        //$$vvv is:vvv\r\n	echo ''''$$int_a is:''''.$$int_a;    //$$int_a is:int_a    \r\n?&gt;</code></pre><br></div><div><span style="font-size: 22px;">另：在一开始接触PHP的时候被他的所输即可得（就是提交变量可以直接使用起name标记的值来做为变量使用.），随着时间的推移，网络的发展PHP.net开发小组发现在这里竟然有不少人在做文章。例：</span></div><div><br><pre><code class="php">&lt;?php\r\n	for($int_a;$int_a&lt;100;$int_a++){\r\n		echo "I am $int_a \\r\\n&lt;br&gt;";\r\n	}\r\n?&gt;</code></pre><br></div><div><span style="font-size: 22px;">以上程序按逻辑来说，程序象系统申请一新变量$int_a由于未赋默认值，系统将默认给$int_a赋于0，此时应该打印100行 i am ...</span></div><div><span style="font-size: 22px;">但是如果有人传递过来这个变量呢？？？比如说http://tiankonguse.com/index.php?int_a=9</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">此时系统将只打印一行。我这里只是简单的说一下</span></div><div><span style="font-size: 22px;">如果这个程序是操作你的数据库，或操作你的机密性文件，你所需要的是私有变量而非外界传递过来的变量...，我个人觉得PHP开发小组在这个问题上的处理是借鉴了编译语言的优点..</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">不过不用担心如果你觉得页面不受外界变量的影响，而且暂时也无须提高到这个安全度的话您可以使用</span></div><div><br><pre><code class="php">&lt;?php\r\n	if($_GLOBAL_ARRAY){//判断是否存在全局变量的数组\r\n		extract($_GLOBAL_ARRAY,EXTR_PREFIX_SAME,"_global_array");    //将数组内变量导入到当前的变量表内，如果发生冲突则将全局变量前加上_global_array前缀\r\n	}\r\n?&gt;</code></pre><br></div><div><span style="font-size: 22px;">由于PHP小组对系统的安全提高，因此分发出来的版本自php4.2.X后已经默认将register_global选项设置为OFF，如果您需要使用的话可以将其打开ON</span></div><div><span style="font-size: 22px;"><br></span></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><br></div>\r\n\r\n\r\n\r\n\r\n', '', ''),
('tiankonguse1362131632', 'tiankonguse', '2013-03-01 09:53:52', 'php编写大型网站问题集', '<div style="text-align: center;"><span style="font-size: 22px;">php编写大型网站问题集</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">PHP以其易用性得到迅速的推广，但易用并不是说就能用好它，实际上许多程序员用它很容易的立一个个WEB应用系统，但又有多少人仔细的考虑过他们的代码，是否容易维护、是否足够健壮、否效率足够高、是否足够安全，当PHP用于建立大型网站时这些就成为很关键的因素。下面我们从较轻微的问题开始讨论，直至一些致命的错误。</span></div><div><br></div><div><span style="font-size: 22px;">一、Printf()</span></div><div><span style="font-size: 22px;"><span class="Apple-tab-span" style="white-space:pre">	</span>该函数主要用来格式化显示数据。当你要改变某个数据的显示格式时才使用。</span></div><div><span class="Apple-tab-span" style="white-space: pre; font-size: 22px;">	</span></div><div><span style="font-size: 22px;"><span class="Apple-tab-span" style="white-space:pre">	</span>例如以不同的精度来显示PI(3.1415926)的值。&nbsp;</span></div><div><br><pre><code class="php">&lt;?php \r\n　printf ("Pi is: %.2fn&lt;br&gt;n", M_PI); \r\n　printf ("Pi is also: %.3fn&lt;br&gt;n", M_PI); \r\n　printf ("Pi is also: %.4fn&lt;br&gt;n", M_PI); \r\n?&gt; </code></pre><br></div><div><span style="font-size: 22px;">但许多程序员仅仅为显示一些变量值和函数返回值使用该函数。</span></div><div><span style="font-size: 22px;">因为Printf()在显示数据前要先格式化该数据以速度较慢，因此，仅为了显示数据时应用print和echo，以提高速度。&nbsp;</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">二、语意检查&nbsp;</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">PHP是一种弱类型语言，也就是说在使用一个变量前不用定义，这样给编程带来了很大的方便和灵活，但你自己必须知道该变量到底应该是哪种类型，因为该变量在运行时仍实际对应着某一种类型（各种类型之间可以自由互相转换），没有类型的变量是不存在的。有可能PHP并不能检查出你的语意错误，但由于变量类型的变化，会导致一些潜在的问题的发生。另外一个值得注意的问题是变量的范围，它也可能会导致一些潜在的问题的发生。&nbsp;</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">在PHP中有以下几种基本变量：&nbsp;</span></div><div><span style="font-size: 22px;">Boolean, resource, integer, double, string, array and object。&nbsp;</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">三、临时变量的使用&nbsp;</span></div><div><span style="font-size: 22px;">　　临时变量的滥用会导致程序运行效率的降低。何时使用临时变量可基于以下两点考虑：</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">1、该变量是否至少使用两次。&nbsp;</span></div><div><span style="font-size: 22px;">2、该变量的使用是否会显著提高程序的可读性。&nbsp;</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">如果一条也不满足，则省略该变量的使用。例如：</span></div><div><br><pre><code class="php">&lt;?php \r\n　$tmp = date ("F d, h:i a");\r\n　print $tmp; \r\n?&gt; </code></pre><br></div><div><span style="font-size: 22px;">就应该改成：&nbsp;</span></div><div><br><pre><code class="php">&lt;?php \r\n　print date ("F d, h:i a"); \r\n?&gt; </code></pre><br></div><div><span style="font-size: 22px;">又如：&nbsp;</span></div><div><span style="font-size: 22px;"><br></span></div><div><br><pre><code class="php">&lt;?php \r\n	function reverse_characters ($str) { \r\n		return implode ("", array_reverse (preg_split("//", $str))); \r\n	} \r\n?&gt; </code></pre><br></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">的可读性不强，可改成：&nbsp;</span></div><div><br><pre><code class="php">&lt;?php \r\n	function reverse_characters ($str) { \r\n		$characters = preg_split ("//", $str); \r\n		$characters = array_reverse ($characters); \r\n		return implode ("", $characters); \r\n	} \r\n?&gt; </code></pre><br></div><div><span style="font-size: 22px;">四、客户端和服务器端代码的分离&nbsp;</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">客户端和服务器端代码的在PHP程序中实际上就是HTML代码和PHP语言代码，很多人把HTML和PHP语句混合在一个文件里，使得这文件很大，这种风格对程序的维护和再开发很不利，不适合大型站点的开发。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">一般有两种方法把HTML和PHP语句分开：&nbsp;</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">1、编写专用API，例如：&nbsp;</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">index.php ？ The Client side&nbsp;</span></div><div><span style="font-size: 22px;"><br></span></div><div><br><pre><code class="php">&lt;?php include_once ("site.lib"); ?&gt; \r\n&lt;html&gt; \r\n&lt;head&gt; \r\n&lt;title&gt; &lt;?php print_header (); ?&gt; &lt;/title&gt; \r\n&lt;/head&gt; \r\n&lt;body&gt; \r\n&lt;h1&gt; &lt;?php print_header (); ?&gt; &lt;/h1&gt; \r\n&lt;table border="0" cellpadding="0" cellspacing="0"&gt; \r\n&lt;tr&gt; \r\n&lt;td width="25%"&gt; \r\n&lt;?php print_links (); ?&gt; \r\n&lt;/td&gt; \r\n&lt;td&gt; \r\n&lt;?php print_body (); ?&gt; \r\n&lt;/td&gt; \r\n&lt;/tr&gt; \r\n&lt;/table&gt; \r\n&lt;/body&gt; \r\n&lt;/html&gt; </code></pre><br></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">site.lib ？ The server side code&nbsp;</span></div><div><span style="font-size: 22px;"><br></span></div><div><br><pre><code class="php">&lt;?php \r\n$dbh = mysql_connect ("localhost", "sh", "pass") or die (sprintf ("Cannot connect to MySQL [%s]: %s", mysql_errno (), mysql_error ())); \r\n@mysql_select_db ("MainSite") or die (sprintf ("Cannot select database [%s]: %s",mysql_errno (), mysql_error ())); \r\n$sth = @mysql_query ("SELECT * FROM site", $dbh) or die (sprintf ("Cannot execute query [%s]: %s", mysql_errno (), mysql_error ())); \r\n\r\n$site_info = mysql_fetch_object ($sth); \r\n\r\nfunction print_header () \r\n{ \r\n　global $site_info; \r\n　print $site_info-&gt;header; \r\n} \r\n\r\nfunction print_body () \r\n{ \r\n　global $site_info; \r\n　print nl2br ($site_info-&gt;body); \r\n} \r\n\r\nfunction print_links () \r\n{ \r\n　global $site_info; \r\n\r\n　$links = explode ("n", $site_info-&gt;links); \r\n　$names = explode ("n", $site_info-&gt;link_names); \r\n\r\nfor ($i = 0; $i &lt; count ($links); $i++) \r\n{ \r\n　print "ttt &lt;a href="$links[$i]"&gt;$names[$i]&lt;/a&gt; n&lt;br&gt;n"; \r\n} \r\n} \r\n?&gt; </code></pre><br></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">这种方法使得程序看起来比较简洁，而且执行速度也较快。&nbsp;</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">2、使用模板的方法&nbsp;</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">这种方法使得程序看起来更简洁，同样实现上面的功能，可用以下代码：&nbsp;</span></div><div><br><pre><code class="php">&lt;html&gt; \r\n&lt;head&gt; \r\n&lt;title&gt;%%PAGE_TITLE%%&lt;/title&gt; \r\n&lt;/head&gt; \r\n&lt;body %%BODY_PROPERTIES%%&gt; \r\n&lt;h1&gt;%%PAGE_TITLE%%&lt;/h1&gt; \r\n&lt;table border="0" cellpadding="0" cellspacing="0"&gt; \r\n&lt;tr&gt; \r\n&lt;td width="25%"&gt;%%PAGE_LINKS%%&lt;/td&gt; \r\n&lt;td&gt;%%PAGE_CONTENT%%&lt;/td&gt; \r\n&lt;/tr&gt; \r\n&lt;/table&gt; \r\n&lt;/body&gt; \r\n&lt;/html&gt; </code></pre><br></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">用占位符代替要动态生成的内容，然后用一解析程序分析该模板文件，把占位符用际的内容替换。种方法使得即使不会使用PHP的页面制作人员也能修改模板文件。这种方法的缺点是执行效率不高，因为要解释模板文件。同时实现起来也比较复杂。&nbsp;</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">注： www.thewebmasters.net的 FastTemplate class可方便的实现以上功能。&nbsp;</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">五、不要用过时的函数&nbsp;</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">作为一种自由软件，PHP发展很快，其中的很多函数都已过时，例如：&nbsp;</span></div><div><span style="font-size: 22px;"><br></span></div><div><br><pre><code class="php">while (1): \r\n	print "5"; \r\n	if ($idx++ == 5): \r\n		break; \r\n	endif; \r\nendwhile; </code></pre><br></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">虽然还能用但效率肯定不高，而且可能在以后的版本中会禁用，导致程序不能运行。</span></div><div><span style="font-size: 22px;">因此要经常对照最新PHP手册检查那些函数已过时及时修正。</span></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><br></div>', '', '');
INSERT INTO `tk_blog` (`tk_blog_key`, `tk_blog_user`, `tk_blog_datetime`, `tk_blog_title`, `tk_blog_content`, `tk_blog_password`, `tk_blog_category`) VALUES
('tiankonguse1362132538', 'tiankonguse', '2013-03-01 10:08:58', ' php代码优化及php相关问题总结', '<div style="text-align: center;"><span style="font-size: 22px;">&nbsp;php代码优化及php相关问题总结</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">&nbsp;1,在函数中,传递数组时 使用 return 比使用 global 要高效&nbsp;</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">比如&nbsp;</span></div><div><br><pre><code class="php">function userloginfo($usertemp){ \r\n	$detail=explode("|",$usertemp); \r\n	return $detail; \r\n} \r\n$login=userloginfo($userdb); </code></pre><br></div><div><span style="font-size: 22px;">比&nbsp;</span></div><div><br><pre><code class="php">function userloginfo($usertemp){ \r\n	global $detail; \r\n	$detail=explode("|",$usertemp); \r\n} \r\nuserloginfo($userdb); </code></pre><br></div><div><span style="font-size: 22px;">要高效&nbsp;</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">2,(这个代码用于得到程序目录对应的网址,推荐使用)&nbsp;</span></div><div><br><pre><code class="php">$urlarray=explode(''''/'''',$HTTP_SERVER_VARS[''''REQUEST_URI'''']); \r\n$urlcount=count($urlarray);unset($urlarray[$urlcount-1]); \r\n$ofstarurl=''''http://''''.$HTTP_SERVER_VARS[''''HTTP_HOST''''].implode(''''/'''',$urlarray); </code></pre><br></div><div><span style="font-size: 22px;">这段代码比&nbsp;</span></div><div><br><pre><code class="php">$pre_urlarray=explode(''''/'''',$HTTP_SERVER_VARS[''''HTTP_REFERER'''']); \r\n$pre_url=array_pop($pre_urlarray); </code></pre><br></div><div><span style="font-size: 22px;">要高效&nbsp;</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">3,在循环中判断时,数值判断使用恒等要比等于高效&nbsp;</span></div><div><br><pre><code class="php">$a=2;$b=2; </code></pre><br></div><div><span style="font-size: 22px;">比如&nbsp;</span></div><div><br><pre><code class="php">if($a==$b)$c=$a; </code></pre><br></div><div><span style="font-size: 22px;">比&nbsp;</span></div><div><br><pre><code class="php">if($a===$b)$c=$a; </code></pre><br></div><div><span style="font-size: 22px;">高效&nbsp;</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">4,mysql 查询时尽量使用where in 少用 limit&nbsp;</span></div><div><span style="font-size: 22px;">limit查多记录的前几条, 速度很快, 但是查询最后面几条就会慢&nbsp;</span></div><div><span style="font-size: 22px;">使用in .在查询连续性记录,非常快, 非连续性记录第一次运行会稍微慢一点,但是之后将比较快!&nbsp;</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">5,NT服务器数据操作稳定性不及unix/linux&nbsp;</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">6,输出前使用尽量使用 ob_start(); 可以加快输出速度,适用NT或linux,对unlix类服务器 如果使用 ob_start(''''ob_gzhandler'''');输出效率将更高&nbsp;</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">7,判断的时候尽量使用if($a==他的值) 否定的时候尽量使用if(empty($a)),因为这样程序运行更快速&nbsp;</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">8,使用不等时 != 与 &lt;&gt; 效率相当&nbsp;</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">9,个人经验得 使用 $a="11111111111111"; 的效率和 $a=''''11111111111111''''; 相当.并不象书本说的相差很大&nbsp;</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">10,使用规范的SQL语句, 会有利于MySQL的解析&nbsp;</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">11,使用&nbsp;</span></div><div><br><pre><code class="php">if($online){ \r\n	$online1=$online; \r\n	setcookie(''''online1'''',$online1,$cookietime,$ckpath,$ckdomain,$secure); \r\n}</code></pre><br></div><div><span style="font-size: 22px;">COOKIE将马上生效&nbsp;</span></div><div><span style="font-size: 22px;">使用&nbsp;</span></div><div><br><pre><code class="php">if($online){\r\n	setcookie(''''online1'''',$online,$cookietime,$ckpath,$ckdomain,$secure); \r\n}</code></pre><br></div><div><span style="font-size: 22px;">COOKIE需要再刷新一次才能生效&nbsp;</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">12,使用&nbsp;</span></div><div><br><pre><code class="php">$handle=fopen($filename,wb); \r\nflock($handle,LOCK_SH); \r\n$filedata=fread($handle,filesize($filename)); \r\nfclose($handle); </code></pre><br></div><div><span style="font-size: 22px;">比&nbsp;</span></div><div><br><pre><code class="php">file($filename); </code></pre><br></div><div><span style="font-size: 22px;">无论在速度还是稳定上都要优秀&nbsp;</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">13,截断字符串优化函数(可避免?字符出现)&nbsp;</span></div><div><br><pre><code class="php">function substrs($content,$length) { \r\n	if(strlen($content)&gt;$length){ \r\n		$num=0; \r\n		for($i=0;$i&lt;$length-3;$i++) { \r\n			if(ord($content[$i])&gt;127)$num++; \r\n		} \r\n		$num%2==1 ? $content=substr($content,0,$length-4):$content=substr($content,0,$length-3); \r\n		$content.='''' ...''''; \r\n	} \r\n	return $content; \r\n} </code></pre><br></div><div><span style="font-size: 22px;">比如$newarray[1]=substrs($newarray[1],25);&nbsp;</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">14,程序中屏蔽大小写&nbsp;</span></div><div><br><pre><code class="php">for ($asc=65;$asc&lt;=90;$asc++) {\r\n //strtolower() 此函数在一些服务器会产生乱码! \r\n	if (strrpos($regname,chr($asc))!==false){ \r\n		$error="为了避免用户名混乱,用户名中禁止使用大写字母，请使用小写字母"; \r\n		$reg_check=0; \r\n	} \r\n} </code></pre><br></div><div><span style="font-size: 22px;">15,不使用 file();和不使用 fget();(不稳定或速度慢) 取一数组函数&nbsp;</span></div><div><br><pre><code class="php">function openfile($filename,$method="rb") { \r\n	$handle=@fopen($filename,$method); \r\n	@flock($handle,LOCK_SH); \r\n	@$filedata=fread($handle,filesize($filename)); \r\n	@fclose($handle); \r\n	$filedata=str_replace(" "," &lt;ofstar:&gt;",$filedata); \r\n	$filedb=explode("&lt;ofstar:&gt;",$filedata); \r\n	//array_pop($filedb); \r\n	$count=count($filedb); \r\n	if($filedb[$count-1]==''''){unset($filedb[$count-1]);} \r\n	return $filedb; \r\n} \r\n//这个函数虽然代码比较多,不过在速度和稳定性上优势很大! \r\n</code></pre><br></div>\r\n\r\n\r\n\r\n\r\n', '', ''),
('tiankonguse1362148535', 'tiankonguse', '2013-03-01 14:35:35', 'uses-permission权限列表', '<div style="text-align: center;"><span style="font-size: 22px;">uses-permission权限列表</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">android.permission.ACCESS_CHECKIN_PROPERTIES</span></div><div><span style="font-size: 22px;">允许读写访问”properties”表在checkin数据库中，改值可以修改上传</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">android.permission.ACCESS_COARSE_LOCATION</span></div><div><span style="font-size: 22px;">允许一个程序访问CellID或WiFi来获取粗略的位置</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">android.permission.ACCESS_FINE_LOCATION</span></div><div><span style="font-size: 22px;">允许一个程序访问精良位置(如GPS)</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">android.permission.ACCESS_LOCATION_EXTRA_COMMANDS</span></div><div><span style="font-size: 22px;">允许应用程序访问额外的位置提供命令</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">android.permission.ACCESS_MOCK_LOCATION</span></div><div><span style="font-size: 22px;">允许程序创建模拟位置用于测试</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">android.permission.ACCESS_NETWORK_STATE</span></div><div><span style="font-size: 22px;">允许程序访问有关的网络信息</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">android.permission.ACCESS_SURFACE_FLINGER</span></div><div><span style="font-size: 22px;">允许程序使用SurfaceFlinger底层特性</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">android.permission.ACCESS_WIFI_STATE</span></div><div><span style="font-size: 22px;">允许程序访问Wi-Fi网络状态信息</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">android.permission.ACCOUNT_MANAGER</span></div><div><span style="font-size: 22px;">允许一个应用程序启动账户认证，该权限只能系统去设置</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">android.permission.AUTHENTICATE_ACCOUNTS</span></div><div><span style="font-size: 22px;">允许应用程序的验证账户扮演一个账户管理者</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">android.permission.BATTERY_STATS</span></div><div><span style="font-size: 22px;">允许程序更新手机电池统计信</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">android.permission.BIND_APPWIDGET</span></div><div><span style="font-size: 22px;">许应用告诉AppWidget哪个应用能够访问该AppWidget的数据</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">android.permission.BIND_DEVICE_ADMIN</span></div><div><span style="font-size: 22px;">必须通过关机接收者的请求，来确保只有系统能够与之交互</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">android.permission.BIND_INPUT_METHOD</span></div><div><span style="font-size: 22px;">必须通过InputMethodService的请求，来确保只有系统能够与之绑定</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">android.permission.BIND_WALLPAPER</span></div><div><span style="font-size: 22px;">必须通过WallpaperService的请求，来确保只有系统能够与之绑定</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">android.permission.BLUETOOTH</span></div><div><span style="font-size: 22px;">允许程序连接到已配对的蓝牙设备</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">android.permission.BLUETOOTH_ADMIN</span></div><div><span style="font-size: 22px;">允许程序发现和配对蓝牙设备</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">android.permission.BRICK</span></div><div><span style="font-size: 22px;">请求能够禁用设备(非常危险)</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">android.permission.BROADCAST_PACKAGE_REMOVED</span></div><div><span style="font-size: 22px;">允许应用发出一个程序包被移除的广播消息</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">android.permission.BROADCAST_SMS</span></div><div><span style="font-size: 22px;">允许应用发出一个收到短信的消息</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">android.permission.BROADCAST_STICKY</span></div><div><span style="font-size: 22px;">允许应用发出一个与intent相连的消息</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">android.permission.BROADCAST_WAP_PUSH</span></div><div><span style="font-size: 22px;">允许应用发出一个收到WAP PUSH的广播消息</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">android.permission.CALL_PHONE</span></div><div><span style="font-size: 22px;">允许一个程序初始化一个电话拨号，不需通过拨号用户界面需要用户确认</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">android.permission.CALL_PRIVILEGED</span></div><div><span style="font-size: 22px;">允许一个程序拨打任何号码，包含紧急号码无需通过拨号用户界面需要用户确认</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">android.permission.CAMERA</span></div><div><span style="font-size: 22px;">请求访问使用照相设备</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">android.permission.CHANGE_COMPONENT_ENABLED_STATE</span></div><div><span style="font-size: 22px;">允许一个程序是否改变一个组件或其他的启用或禁用</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">android.permission.CHANGE_CONFIGURATION</span></div><div><span style="font-size: 22px;">允许一个程序修改当前设置，如本地化</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">android.permission.CHANGE_NETWORK_STATE</span></div><div><span style="font-size: 22px;">允许程序改变网络连接状态</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">android.permission.CHANGE_WIFI_STATE</span></div><div><span style="font-size: 22px;">允许程序改变Wi-Fi连接状态</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">android.permission.CLEAR_APP_CACHE</span></div><div><span style="font-size: 22px;">允许一个程序在设备中清除所有安装的程序的缓存</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">android.permission.CLEAR_APP_USER_DATA</span></div><div><span style="font-size: 22px;">允许一个程序清除用户数据</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">android.permission.CONTROL_LOCATION_UPDATES</span></div><div><span style="font-size: 22px;">允许启用禁止位置更新提示从无线模块</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">android.permission.DELETE_CACHE_FILES</span></div><div><span style="font-size: 22px;">允许程序删除缓存文件</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">android.permission.DELETE_PACKAGES</span></div><div><span style="font-size: 22px;">允许一个程序删除包</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">android.permission.DEVICE_POWER</span></div><div><span style="font-size: 22px;">允许访问底层电源管理</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">android.permission.DIAGNOSTIC</span></div><div><span style="font-size: 22px;">允许程序RW诊断资源</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">android.permission.DISABLE_KEYGUARD</span></div><div><span style="font-size: 22px;">允许程序禁用键盘锁</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">android.permission.DUMP</span></div><div><span style="font-size: 22px;">允许程序返回状态抓取信息从系统服务</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">android.permission.EXPAND_STATUS_BAR</span></div><div><span style="font-size: 22px;">允许一个程序扩展收缩在状态栏,android开发网提示应该是一个类似Windows Mobile中的托盘程序</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">android.permission.FACTORY_TEST</span></div><div><span style="font-size: 22px;">作为一个工厂测试程序，运行在root用户</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">android.permission.FLASHLIGHT</span></div><div><span style="font-size: 22px;">允许访问闪光灯,其中HTC Dream不包含闪光灯</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">android.permission.FORCE_BACK</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">允许应用强制执行返回操作而不论是不是最终的activity</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">android.permission.GET_ACCOUNTS</span></div><div><span style="font-size: 22px;">允许访问在Accounts Service中的一个帐户列表</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">android.permission.GET_PACKAGE_SIZE</span></div><div><span style="font-size: 22px;">允许一个程序获取任何package占用空间容量</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">android.permission.GET_TASKS</span></div><div><span style="font-size: 22px;">允许一个程序获取信息有关当前或最近运行的任务，一个缩略的任务状态，是否活动等等</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">android.permission.GLOBAL_SEARCH</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">可以被内容提供者用来允许使用全程搜索他们的数据</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">android.permission.HARDWARE_TEST</span></div><div><span style="font-size: 22px;">允许访问硬件</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">android.permission.INJECT_EVENTS</span></div><div><span style="font-size: 22px;">允许一个程序截获用户事件如按键、触摸、轨迹球等等到一个时间流</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">android.permission.INSTALL_PACKAGES</span></div><div><span style="font-size: 22px;">允许一个程序安装packages</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">android.permission.INTERNAL_SYSTEM_WINDOW</span></div><div><span style="font-size: 22px;">允许打开窗口使用系统用户界面</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">android.permission.INTERNET</span></div><div><span style="font-size: 22px;">允许程序打开网络sockets</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">android.permission.KILL_BACKGROUND_PROCESSES</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">允许应用去呼叫killBackgroundProcesses方法</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">android.permission.MANAGE_ACCOUNTS</span></div><div><span style="font-size: 22px;">允许程序去管理账户列表(在账户管理者中)</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">android.permission.MANAGE_APP_TOKENS</span></div><div><span style="font-size: 22px;">允许程序管理(创建、催后、 z- order默认向z轴推移)程序引用在窗口管理器中</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">android.permission.MASTER_CLEAR</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">目前还没有明确的解释</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">android.permission.MODIFY_AUDIO_SETTINGS</span></div><div><span style="font-size: 22px;">允许程序修改全局音频设置</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">android.permission.MODIFY_PHONE_STATE</span></div><div><span style="font-size: 22px;">允许修改话机状态，如电源，人机接口等</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">android.permission.MODIFY_FORMAT_FILESYSTEMS</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">允许格式化可移除的存储仓库的文件系统</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">android.permission.MOUNT_UNMOUNT_FILESYSTEMS</span></div><div><span style="font-size: 22px;">允许挂载和反挂载文件系统可移动存储</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">android.permission.PERSISTENT_ACTIVITY</span></div><div><span style="font-size: 22px;">允许一个程序设置他的activities显示</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">android.permission.PROCESS_OUTGOING_CALLS</span></div><div><span style="font-size: 22px;">允许程序监视、修改有关播出电话</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">android.permission.READ_CALENDAR</span></div><div><span style="font-size: 22px;">允许程序读取用户日历数据</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">android.permission.READ_CONTACTS</span></div><div><span style="font-size: 22px;">允许程序读取用户联系人数据</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">android.permission.READ_FRAME_BUFFER</span></div><div><span style="font-size: 22px;">允许程序屏幕波或和更多常规的访问帧缓冲数据</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">android.permission.READ_HISTORY_BOOKMARKS</span></div><div><span style="font-size: 22px;">允许应用去读取(非写)用户浏览历史和书签</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">android.permission.READ_INPUT_STATE</span></div><div><span style="font-size: 22px;">允许程序返回当前按键状态</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">android.permission.READ_LOGS</span></div><div><span style="font-size: 22px;">允许程序读取底层系统日志文件</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">android.permission.READ_OWNER_DATA</span></div><div><span style="font-size: 22px;">允许程序读取所有者数据</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">android.permission.READ_PHONE_STATE</span></div><div><span style="font-size: 22px;">允许读取电话的状态</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">android.permission.READ_SMS</span></div><div><span style="font-size: 22px;">允许程序读取短信息(Allows an application to read SMS messages.)</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">android.permission.READ_SYNC_SETTINGS</span></div><div><span style="font-size: 22px;">允许程序读取同步设置</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">android.permission.READ_SYNC_STATS</span></div><div><span style="font-size: 22px;">允许程序读取同步状态</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">android.permission.REBOOT</span></div><div><span style="font-size: 22px;">请求能够重新启动设备</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">android.permission.RECEIVE_BOOT_COMPLETED</span></div><div><span style="font-size: 22px;">允许一个程序接收到 ACTION_BOOT_COMPLETED广播在系统完成启动</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">android.permission.RECEIVE_MMS</span></div><div><span style="font-size: 22px;">允许一个程序监控将收到MMS彩信,记录或处理</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">android.permission.RECEIVE_SMS</span></div><div><span style="font-size: 22px;">允许程序监控一个将收到短信息，记录或处理</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">android.permission.RECEIVE_WAP_PUSH</span></div><div><span style="font-size: 22px;">允许程序监控将收到WAP PUSH信息</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">android.permission.RECORD_AUDIO</span></div><div><span style="font-size: 22px;">允许程序录制音频</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">android.permission.REORDER_TASKS</span></div><div><span style="font-size: 22px;">允许程序改变Z轴排列任务</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">android.permission.RESTART_PACKAGES</span></div><div><span style="font-size: 22px;">允许程序重新启动其他程序(此值已废弃使用)</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">android.permission.SEND_SMS</span></div><div><span style="font-size: 22px;">允许程序发送SMS短信</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">android.permission.SET_ACTIVITY_WATCHER</span></div><div><span style="font-size: 22px;">允许程序监控或控制activities已经启动全局系统中</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">android.permission.SET_ALWAYS_FINISH</span></div><div><span style="font-size: 22px;">允许程序控制是否活动间接完成在处于后台时</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">android.permission.SET_ANIMATION_SCALE</span></div><div><span style="font-size: 22px;">修改全局信息比例</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">android.permission.SET_DEBUG_APP</span></div><div><span style="font-size: 22px;">配置一个程序用于调试</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">android.permission.SET_ORIENTATION</span></div><div><span style="font-size: 22px;">允许底层访问设置屏幕方向和实际旋转</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">android.permission.SET_PREFERRED_APPLICATIONS</span></div><div><span style="font-size: 22px;">允许一个程序修改列表参数PackageManager.addPackageToPreferred()和PackageManager.removePackageFromPreferred()方法</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">android.permission.SET_PROCESS_LIMIT</span></div><div><span style="font-size: 22px;">允许设置最大的运行进程数量</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">android.permission.SET_TIME</span></div><div><span style="font-size: 22px;">允许应用设置系统时间</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">android.permission.SET_TIME_ZONE</span></div><div><span style="font-size: 22px;">允许程序设置系统时区时间</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">android.permission.SET_WALLPAPER</span></div><div><span style="font-size: 22px;">允许程序设置壁纸</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">android.permission.SET_WALLPAPER_HINTS</span></div><div><span style="font-size: 22px;">允许程序设置壁纸hits</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">android.permission.SIGNAL_PERSISTENT_PROCESSES</span></div><div><span style="font-size: 22px;">允许程序请求发送信号到所有显示的进程中</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">android.permission.STATUS_BAR</span></div><div><span style="font-size: 22px;">允许程序打开、关闭或禁用状态栏及图标</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">android.permission.SUBSCRIBED_FEEDS_READ</span></div><div><span style="font-size: 22px;">允许一个程序访问订阅RSS Feed内容提供</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">android.permission.SUBSCRIBED_FEEDS_WRITE</span></div><div><span style="font-size: 22px;">系统暂时保留改设置,</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">android.permission.SYSTEM_ALERT_WINDOW</span></div><div><span style="font-size: 22px;">允许一个程序打开窗口使用 TYPE_SYSTEM_ALERT，显示在其他所有程序的顶层</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">android.permission.UPDATE_DEVICE_STATS</span></div><div><span style="font-size: 22px;">允许应用更新设备资料信息</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">android.permission.USE_CREDENTIALS</span></div><div><span style="font-size: 22px;">允许应用从管理器得到授权请求</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">android.permission.VIBRATE</span></div><div><span style="font-size: 22px;">允许访问振动设备</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">android.permission.WAKE_LOCK</span></div><div><span style="font-size: 22px;">允许使用PowerManager的 WakeLocks保持进程在休眠时从屏幕消失</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">android.permission.WRITE_APN_SETTINGS</span></div><div><span style="font-size: 22px;">允许程序写入API设置</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">android.permission.WRITE_CALENDAR</span></div><div><span style="font-size: 22px;">允许一个程序写入但不读取用户日历数据</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">android.permission.WRITE_CONTACTS</span></div><div><span style="font-size: 22px;">允许程序写入但不读取用户联系人数据</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">android.permission.WRITE_EXTERNAL_STORAGE</span></div><div><span style="font-size: 22px;">允许应用写（非读）用户的外部存储器</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">android.permission.WRITE_GSERVICES</span></div><div><span style="font-size: 22px;">允许程序修改Google服务地图</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">android.permission.WRITE_HISTORY_BOOKMARKS</span></div><div><span style="font-size: 22px;">允许应用写（非读）用户的浏览器历史和书签</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">android.permission.WRITE_OWNER_DATA</span></div><div><span style="font-size: 22px;">允许一个程序写入但不读取所有者数据</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">android.permission.WRITE_SECURE_SETTINGS</span></div><div><span style="font-size: 22px;">允许应用写或读当前系统设置</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">android.permission.WRITE_SETTINGS</span></div><div><span style="font-size: 22px;">允许程序读取或写入系统设置</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">android.permission.WRITE_SMS</span></div><div><span style="font-size: 22px;">允许程序写短信</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">android.permission.WRITE_SYNC_SETTINGS</span></div><div><span style="font-size: 22px;">允许程序写入同步设置</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">android.permission.CALL_PRIVILEGED</span></div><div><span style="font-size: 22px;">允许程序拨打电话，替换系统的拨号器界面</span></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><br></div>\r\n\r\n\r\n\r\n\r\n', '', ''),
('tiankonguse1362188934', 'tiankonguse', '2013-03-02 01:48:54', 'android程序之downloadWebPage(一)', '<div><span style="font-size: 22px;">这里，tiankonguse要实现一个简单的功能：输入一个网址，然后这个网页。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">由于实现方法很多，所以这里用AsyncTask来实现。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">界面设计：</span></div><div><span style="font-size: 22px;">&nbsp; &nbsp; 一个TextView，一个EditView，一个Button。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">功能设计：</span></div><div><span style="font-size: 22px;">&nbsp; &nbsp; 在EditView中输入网址，点击Button，就开始下载网页了。</span></div><div><span style="font-size: 22px;">&nbsp; &nbsp; 下载完毕后，网页的内容（源代码）就显示在TextView中。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">代码设计：</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">java代码：</span></div><div><br><pre><code class="java">\r\npackage com.tiankonguse.downloadWebPage;\r\n\r\nimport java.io.ByteArrayOutputStream;\r\nimport java.io.InputStream;\r\n\r\nimport org.apache.http.HttpEntity;\r\nimport org.apache.http.HttpResponse;\r\nimport org.apache.http.client.HttpClient;\r\nimport org.apache.http.client.methods.HttpGet;\r\nimport org.apache.http.impl.client.DefaultHttpClient;\r\n\r\nimport android.app.Activity;\r\nimport android.app.ProgressDialog;\r\nimport android.content.Context;\r\nimport android.content.DialogInterface;\r\nimport android.os.AsyncTask;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.Menu;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.TextView;\r\n\r\npublic class Main extends Activity {\r\n\r\n	private TextView message;\r\n	private Button open;\r\n	private EditText url;\r\n\r\n	@Override\r\n	public void onCreate(Bundle savedInstanceState) {\r\n		super.onCreate(savedInstanceState);\r\n		setContentView(R.layout.main);\r\n\r\n		message = (TextView) findViewById(R.id.messag);\r\n		url = (EditText) findViewById(R.id.url);\r\n		open = (Button) findViewById(R.id.open);\r\n		open.setOnClickListener(new View.OnClickListener() {\r\n			public void onClick(View arg0) {\r\n				connect();\r\n			}\r\n		});\r\n\r\n	}\r\n\r\n	private void connect() {\r\n		PageTask task = new PageTask(this);\r\n		task.execute(url.getText().toString());\r\n	}\r\n\r\n	class PageTask extends AsyncTask&lt;String, Integer, String&gt; {\r\n		// 可变长的输入参数，与AsyncTask.exucute()对应\r\n		ProgressDialog pdialog;\r\n\r\n		public PageTask(Context context) {\r\n			//动态生成一个ProgressDialog\r\n			pdialog = new ProgressDialog(context, 0);\r\n			pdialog.setButton(DialogInterface.BUTTON_NEGATIVE, "cancel",\r\n					new DialogInterface.OnClickListener() {\r\n						public void onClick(final DialogInterface dialog,\r\n								final int i) {\r\n							dialog.cancel();\r\n						}\r\n					});\r\n\r\n			pdialog.setOnCancelListener(new DialogInterface.OnCancelListener() {\r\n				public void onCancel(DialogInterface dialog) {\r\n					finish();\r\n				}\r\n			});\r\n			\r\n			pdialog.setCancelable(true);\r\n			\r\n			pdialog.setMax(100);\r\n			\r\n			pdialog.setProgressStyle(ProgressDialog.STYLE_HORIZONTAL);\r\n			\r\n			pdialog.show();\r\n\r\n		}\r\n\r\n		@Override\r\n		protected String doInBackground(String... params) {\r\n\r\n			try {\r\n\r\n				HttpClient client = new DefaultHttpClient();\r\n				Log.i("warn", "doInBackgroun"+" 1 "+params[0]);\r\n				// params[0]代表连接的url\r\n				HttpGet get = new HttpGet("http://"+params[0]);\r\n				HttpResponse response = client.execute(get);\r\n				Log.i("warn", "doInBackgroun"+" 2.5 ");\r\n				HttpEntity entity = response.getEntity();\r\n				Log.i("warn", "doInBackgroun"+" 3 ");\r\n				long length = entity.getContentLength();\r\n				Log.i("warn", "doInBackgroun"+" 4 ");\r\n				InputStream is = entity.getContent();\r\n				Log.i("warn", "doInBackgroun"+" 5 ");\r\n				String s = null;\r\n				if (is != null) {\r\n					ByteArrayOutputStream baos = new ByteArrayOutputStream();\r\n\r\n					byte[] buf = new byte[128];\r\n\r\n					int ch = -1;\r\n\r\n					int count = 0;\r\n\r\n					while ((ch = is.read(buf)) != -1) {\r\n\r\n						baos.write(buf, 0, ch);\r\n\r\n						count += ch;\r\n\r\n						if (length &gt; 0) {\r\n							// 如果知道响应的长度，调用publishProgress（）更新进度\r\n							publishProgress((int) ((count / (float) length) * 100));\r\n						}\r\n\r\n						// 让线程休眠100ms\r\n						Thread.sleep(100);\r\n					}\r\n					s = new String(baos.toByteArray());\r\n				}\r\n				// 返回结果\r\n				return s;\r\n			} catch (Exception e) {\r\n				Log.i("warn", "Exception");\r\n				e.printStackTrace();\r\n\r\n			}\r\n\r\n			return null;\r\n\r\n		}\r\n\r\n		@Override\r\n		protected void onCancelled() {\r\n			super.onCancelled();\r\n		}\r\n\r\n		@Override\r\n		protected void onPostExecute(String result) {\r\n			// 返回HTML页面的内容\r\n			message.setText(result);\r\n			pdialog.dismiss();\r\n		}\r\n\r\n		@Override\r\n		protected void onPreExecute() {\r\n			// 任务启动，可以在这里显示一个对话框，这里简单处理\r\n			message.setText(R.string.task_started);\r\n		}\r\n\r\n		@Override\r\n		protected void onProgressUpdate(Integer... values) {\r\n			// 更新进度\r\n			System.out.println("" + values[0]);\r\n			message.setText("" + values[0]);\r\n			pdialog.setProgress(values[0]);\r\n		}\r\n\r\n	}\r\n\r\n	@Override\r\n	public boolean onCreateOptionsMenu(Menu menu) {\r\n		getMenuInflater().inflate(R.menu.activity_main, menu);\r\n		return true;\r\n	}\r\n}</code></pre><br></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">布局代码：</span></div><div><br><pre><code class="xml">&lt;LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"\r\n    xmlns:tools="http://schemas.android.com/tools"\r\n    android:layout_width="match_parent"\r\n    android:layout_height="match_parent"\r\n    android:orientation="vertical" \r\n    &gt;\r\n	&lt;ScrollView \r\n	    android:layout_height="0dp"\r\n	    android:layout_weight="1.00"\r\n	    android:layout_width="fill_parent"\r\n	    &gt;\r\n	    &lt;TextView\r\n	        android:id="@+id/messag"\r\n	        android:layout_height="wrap_content"\r\n	        android:layout_width="fill_parent"\r\n			android:textColor="#000000"\r\n	        android:background="#FFFFFF"\r\n	        android:textSize="16sp"\r\n	        android:text="WebPage" \r\n	        /&gt;\r\n	&lt;/ScrollView&gt;\r\n    \r\n	&lt;LinearLayout \r\n	    android:layout_width="fill_parent"\r\n	    android:layout_height="wrap_content"\r\n	    android:orientation="horizontal" &gt;\r\n	    &lt;EditText\r\n	        android:id="@+id/url"\r\n	        android:layout_width="0dp"\r\n	        android:layout_height="wrap_content"\r\n	        android:hint="@string/url"\r\n	        android:layout_weight="1.00"\r\n	        android:minWidth="100dip" \r\n	        android:maxLines="3"\r\n            android:inputType="textShortMessage|textAutoCorrect|textCapSentences|textMultiLine"\r\n	        /&gt;\r\n	\r\n	    &lt;Button\r\n	        android:id="@+id/open"\r\n	        android:layout_width="wrap_content"\r\n	        android:layout_height="wrap_content"\r\n	        android:text="@string/open" /&gt;\r\n	&lt;/LinearLayout&gt;\r\n&lt;/LinearLayout&gt;</code></pre><br></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">string代码</span></div><div><br><pre><code class="xml">&lt;resources&gt;\r\n\r\n    &lt;string name="app_name"&gt;downloadWebPage&lt;/string&gt;\r\n    &lt;string name="hello_world"&gt;Hello world!&lt;/string&gt;\r\n    &lt;string name="menu_settings"&gt;Settings&lt;/string&gt;\r\n    &lt;string name="main"&gt;downloadWebPage&lt;/string&gt;\r\n    &lt;string name="url"&gt;请输入url&lt;/string&gt;\r\n    &lt;string name="open"&gt;打开&lt;/string&gt;\r\n    &lt;string name="task_started"&gt;开始&lt;/string&gt;\r\n    \r\n&lt;/resources&gt;\r\n</code></pre><br></div>\r\n\r\n\r\n\r\n\r\n', '', ''),
('tiankonguse1362191864', 'tiankonguse', '2013-03-02 02:37:44', 'android控件之TextView实现滚动条', '<div><span style="font-size: 22px;">前言：</span></div><div><span style="font-size: 22px;"><span class="Apple-tab-span" style="white-space:pre">	</span>android中的TextView的文本如果太多的话，文本就会不能全部显示了。</span></div><div><span style="font-size: 22px;">解决方法很容易想到，就是添加一个滚动条。</span></div><div><span style="font-size: 22px;">这里有两个方法来添加滚动条。第一是在TextView外添加一个ScrollView ，二是在TextView本身上做一些设置即可实现滚动条。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">方法一：</span></div><div><span style="font-size: 22px;">直接在布局文件里做处理即可。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">布局文件：</span></div><div><br><pre><code class="xml">	&lt;ScrollView \r\n	    android:layout_height="0dp"\r\n	    android:layout_weight="1.00"\r\n	    android:layout_width="fill_parent"\r\n	    &gt;\r\n	    &lt;TextView\r\n	        android:id="@+id/messag"\r\n	        android:layout_height="wrap_content"\r\n	        android:layout_width="fill_parent"\r\n		android:textColor="#000000"\r\n	        android:background="#FFFFFF"\r\n	        android:textSize="16sp"\r\n	        android:text="WebPage" \r\n	        /&gt;\r\n	&lt;/ScrollView&gt;</code></pre><br></div><div><br></div><div><div><span style="font-size: 22px;">方法二：</span></div><div><span style="font-size: 22px;">需要在java文件里添加代码。</span></div></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">布局文件：</span></div><div><br><pre><code class="xml">	&lt;TextView\r\n	        android:id="@+id/messag"\r\n			android:textColor="#000000"\r\n	        android:background="#FFFFFF"\r\n	        android:textSize="16sp"\r\n	        android:layout_height="0dp"\r\n	        android:layout_weight="1.00"\r\n	        android:layout_width="fill_parent"\r\n	        android:scrollbars="vertical"\r\n	        android:text="WebPage" \r\n	        /&gt; </code></pre><br></div><div><span style="font-size: 22px;">java文件：</span></div><div><span style="font-size: 22px;"><br></span></div><div><br><pre><code class="java">	message = (TextView) findViewById(R.id.messag);\r\n	message.setMovementMethod(ScrollingMovementMethod.getInstance());</code></pre><br></div>', '', ''),
('tiankonguse1362194470', 'tiankonguse', '2013-03-02 03:21:10', 'android笔记之SeekBar  进度条', '<div style="text-align: center;"><span style="font-size: 22px;">android笔记之SeekBar &nbsp;进度条</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">&nbsp;1.在布局文件里声明SeekBar</span></div><div><br><pre><code class="xml"> &lt;SeekBar\r\n	android:id="@+id/seekbarId"\r\n	android:layout_width="fill_parent"\r\n	android:layout_height="wrap_content"\r\n	/&gt;</code></pre><br></div><div><span style="font-size: 22px;">&nbsp;2.定义一个OnSeekBarChangeListener</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">&nbsp;</span></div>\r\n\r\n\r\n\r\n\r\n', '', ''),
('tiankonguse1362194626', 'tiankonguse', '2013-03-02 03:23:46', 'android笔记之Spinner', '<div style="text-align: center;"><span style="font-size: 22px;">android笔记之Spinner</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">1.在布局文件声明一个spinner</span></div><pre><code class="xml">&lt;Spinner \r\n	android:id="@+id/spinnerid"\r\n	android:layout_width = "fill_parent"\r\n	android:layout_height="wrap_content"\r\n	/&gt;</code></pre><div><span class="Apple-tab-span" style="white-space: pre; font-size: 22px;">	</span></div><div><span style="font-size: 22px;">2. 在string中声明一个数组。</span></div><div><br><pre><code class="xml">&lt;string-array name="planets_array"&gt;\r\n	&lt;item&gt;first&lt;/item&gt;\r\n	&lt;item&gt;second&lt;/item&gt;\r\n&lt;/string-array&gt;</code></pre><br></div><div><span style="font-size: 22px;">3.创建ArrayAdapter数组适配器（可以从string中取得数组的数据。）。</span></div><div><br><pre><code class="java">ArrayAdapter&lt;CharSequence&gt; adapter = ArrayAdapter.createFromResource(\r\n		this,//上下文对象，就是content对象，通常是activity\r\n		R.array.myarray,//引用string文件定义的数组\r\n		android.R.layout.simple_spinner_item//使用内部标准布局文件\r\n	);</code></pre><br></div><div><span style="font-size: 22px;">4.设置下拉后的每一个item的布局文件。</span></div><div><br><pre><code class="java">adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);\r\n</code></pre><br></div><div><span style="font-size: 22px;">5.得到spinner对象。</span></div><div><br><pre><code class="java">spinner = (Spinner)findViewById(R.id.spinnerid)；//得到spinner对象\r\nspinner.setAdapter(adapter);//设置spinner对象\r\nspinner.setPrompt("title");//设置spinner对象的标题</code></pre><br></div><div><span style="font-size: 22px;">6.创建一个监听器，监听选择了那个选项。</span></div><div><span style="font-size: 22px;">主要使用OnItemSelectedListener监听类</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">7.绑定监听器。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">当然也可以动态创建数组。</span></div><div><br><pre><code class="java">List&lt;String&gt; list = new ArrayList&lt;String&gt;();\r\nlist.add("test1");\r\nlist.add("test2");\r\n\r\nArrayAdapter adapter = new ArrayAdapter(\r\n	this,\r\n	R.layout.item,//下拉菜单中每一个item的布局文件\r\n	R.id.textViewId,//textView的ID,textView用于显示list中的文本\r\n	list);</code></pre><br></div>\r\n\r\n\r\n\r\n\r\n', '', '');
INSERT INTO `tk_blog` (`tk_blog_key`, `tk_blog_user`, `tk_blog_datetime`, `tk_blog_title`, `tk_blog_content`, `tk_blog_password`, `tk_blog_category`) VALUES
('tiankonguse1362195135', 'tiankonguse', '2013-03-02 03:32:15', 'android笔记之String文件', '<div style="text-align: center;"><span style="font-size: 22px;">android笔记之String文件</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">&nbsp;resource中的string文件储存的大部分是键值对。</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">&nbsp;例如：</span></div><div><br><pre><code class="xml"> &lt;string name="app_name"&gt;hello&lt;/string&gt;</code></pre><br></div><div><span style="font-size: 22px;">&nbsp;</span><span style="font-size: 22px;">&nbsp;当然，也可以储存string数组。</span></div><div><span style="font-size: 22px;">&nbsp;例如：</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><br><pre><code class="xml">&lt;string-array name="planets_array"&gt;\r\n	&lt;item&gt;first&lt;/item&gt;\r\n	&lt;item&gt;second&lt;/item&gt;\r\n&lt;/string-array&gt;</code></pre><br>\r\n\r\n\r\n\r\n\r\n', '', ''),
('tiankonguse1362197390', 'tiankonguse', '2013-03-02 04:09:50', 'PHP获取页面的所有链接', '<div style="text-align: center;"><span style="font-size: 22px;">PHP获取页面的所有链接</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">总结了一个PHP获取页面中的所有链接的函数，函数代码如下：</span></div><div><br><pre><code class="php">/*\r\n*PHP获取页面中的所有链接\r\n*/\r\nfunction getPageLink($url){\r\n	set_time_limit(0);\r\n	$html=file_get_contents($url);\r\n	preg_match_all("/&lt;a(s*[^&gt;]+s*)href=([\\"|'']?)([^\\"''&gt;\\s]+)([\\"|'']?)/ies",$html,$out);\r\n	$arrLink=$out[3];\r\n	$arrUrl=parse_url($url);\r\n	$dir='''';\r\n	if(isset($arrUrl[''path''])&amp;&amp;!empty($arrUrl[''path''])){\r\n		$dir=str_replace("\\\\","/",$dir=dirname($arrUrl[''path'']));\r\n		if($dir=="/"){\r\n			$dir="";\r\n		}\r\n	}\r\n	if(is_array($arrLink)&amp;&amp;count($arrLink)&gt;0){\r\n		$arrLink=array_unique($arrLink);\r\n		foreach($arrLink as $key=&gt;$val){\r\n			$val=strtolower($val);\r\n			if(preg_match(''/^#*$/isU'',$val)){\r\n				unset($arrLink[$key]);\r\n			}elseif(preg_match(''/^\\//isU'',$val)){\r\n				$arrLink[$key]=''http://''.$arrUrl[''host''].$val;\r\n			}elseif(preg_match(''/^javascript/isU'',$val)){\r\n				unset($arrLink[$key]);\r\n			}elseif(preg_match(''/^mailto:/isU'',$val)){\r\n				unset($arrLink[$key]);\r\n			}elseif(!preg_match(''/^\\//isU'',$val)&amp;&amp;strpos($val,''http://'')===FALSE){\r\n				$arrLink[$key]=''http://''.$arrUrl[''host''].$dir.''/''.$val;\r\n			}\r\n		}\r\n	}\r\n	sort($arrLink);\r\n	return $arrLink;\r\n}</code></pre><br></div><div><span style="font-size: 22px;">函数用法如下：</span></div><div><br><pre><code class="php">$links=getPageLink(''http://www.phpernote.com'');\r\nprint_r($links);</code></pre><br></div><div><br></div>\r\n\r\n\r\n\r\n\r\n', '', ''),
('tiankonguse1362202898', 'tiankonguse', '2013-03-02 05:41:38', 'php转义字符之stripslashes ', '<div style="text-align: center;"><span style="font-size: 22px;">php转义字符之stripslashes&nbsp;</span></div><div><span style="font-size: 22px;"><br></span></div><div><br><pre><code class="php">string stripslashes ( string str )</code></pre><br></div><div><span style="font-size: 22px;">Returns a string with backslashes stripped off.&nbsp;</span></div><div><span style="font-size: 22px;">\\'' becomes '' and so on.&nbsp;</span></div><div><span style="font-size: 22px;">Double backslashes (\\\\) are made into a single backslash (\\).&nbsp;</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">提示：</span></div><div><span style="font-size: 22px;"><span class="Apple-tab-span" style="white-space:pre">	</span>If magic_quotes_sybase is on, no backslashes are stripped off but two apostrophes are replaced by one instead.&nbsp;</span></div><div><span style="font-size: 22px;"><br></span></div><div><br><pre><code class="php">&lt;?php\r\n$str = "Is your name O\\''reilly?";\r\n\r\n// Outputs: Is your name O''reilly?\r\necho stripslashes($str);\r\n?&gt; </code></pre><br></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><br></div>\r\n\r\n\r\n\r\n\r\n', '', ''),
('tiankonguse1362204003', 'tiankonguse', '2013-03-02 06:00:03', ' url正则表达式详细分析', '<div style="text-align: center;"><span style="font-size: 22px;">url正则表达式详细分析</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><br><pre><code class="javascript">var parse_url = /^(?:([A-Za-z]+):)?(\\/{0,3})([0-9.\\-A-Za-z]+)(?::(\\d+))?(?:\\/([^?#]*))?(?:\\?([^#]*))?(?:#(.*))?$/;\r\n\r\nurl = “http://tiankonguse.com:80/goodparts?q#fragment”\r\n\r\nresult = parse_url.exec(url)</code></pre><br></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">1.</span></div><br><pre><code class="javascript">^</code></pre><br><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">The ^ character indicates the beginning of the string.</span></div><div><span style="font-size: 22px;">^代表字符串首部</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">2.</span></div><br><pre><code class="javascript">(?:([A-Za-z]+):)?</code></pre><br><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">The (?:...)indicates a noncapturing group.&nbsp;</span></div><div><span style="font-size: 22px;">表明内部不是捕捉对象，这是整体是一个捕捉对象，一般情况下内部会还有括号，这是括号仅起到普通括号的含义。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">The suffix ? indicates that the group is optional.It means repeat zero or one time.</span></div><div><span style="font-size: 22px;">表明至多出现一次，可能不出现。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">The (...) indicates a capturing group.</span></div><div><span style="font-size: 22px;">表示要捕捉到数组中。</span></div><div><span style="font-size: 22px;">A capturing group copies the text it matches and places it in the result array.</span></div><div><span style="font-size: 22px;">Each capturing group is given a number.</span></div><div><span style="font-size: 22px;">This first capturing group is 1, so a copy of the text matched by this capturing group will appear in result[1].</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">The [...] indicates a character class.</span></div><div><span style="font-size: 22px;">This character class, A-Za-z, contains 26 uppercase letters and 26 lowercase letters.</span></div><div><span style="font-size: 22px;">The hyphens indicate ranges, from A to Z.</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">The suffix + indicates that the character class will be matched one or more times.</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">The group is followed by the : character, which will be matched literally.</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">3.</span></div><br><pre><code class="javascript">(\\/{0,3})</code></pre><br><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">The next factor is capturing group 2.</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">\\/ indicates that a / (slash) character should be matched.&nbsp;</span></div><div><span style="font-size: 22px;">It is escaped with \\ (backslash) so that it is not misinterpreted as the end ofthe regular expression literal.</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">The suffix {0,3} indicates that the / will be matched 0 or 1 or 2 or 3 times.</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">4.</span></div><br><pre><code class="javascript">([0-9.\\-A-Za-z]+)</code></pre><br><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">The next factor is capturing group 3.</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">It will match a host name, which is made up of one or more digits, letters, or . or –.&nbsp;</span></div><div><span style="font-size: 22px;">The – was escaped as \\- to prevent it from being confused with a range hyphen.</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">5.</span></div><br><pre><code class="javascript">(?::(\\d+))?</code></pre><br><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">The next factor optionally matches a port number, which is a sequence of one or more digits preceded by a :.&nbsp;</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">\\d represents a digit character.&nbsp;</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">The series of one or more digits will be capturing group 4.</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">6.</span></div><br><pre><code class="javascript">(?:\\/([^?#]*))?</code></pre><br><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">This one begins with a /.&nbsp;</span></div><div><span style="font-size: 22px;">The character class [^?#] begins with a ^, which indicates that the class includes all characters except ? and #.</span></div><div><span style="font-size: 22px;">表明不能匹配出现在^后面的字符</span></div><div><span style="font-size: 22px;">The * indicates that the character class is matched zero or more times.</span></div><div><span style="font-size: 22px;">表明匹配0次或多次。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">7.</span></div><br><pre><code class="javascript">(?:\\?([^#]*))?</code></pre><br><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">8.</span></div><br><pre><code class="javascript">(?:#(.*))?</code></pre><br><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">9.</span></div><br><pre><code class="javascript">$</code></pre><br><div><span style="font-size: 22px;">The $ represents the end of the string.&nbsp;</span></div><div><span style="font-size: 22px;">It assures us that there was no extra material after the end of the URL.</span></div><div><br></div>\r\n\r\n\r\n\r\n\r\n', '', ''),
('tiankonguse1362204575', 'tiankonguse', '2013-03-02 06:09:35', 'android笔记之View and ViewGroup objects', '<div style="text-align: center;"><font color="#000000">android笔记之</font><span style="color: rgb(0, 0, 0); font-size: 22px;">View and ViewGroup objects</span></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><span style="font-size: 22px;"><br></span></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><span style="font-size: 22px;">&nbsp;The graphical user interface for an Android app is built using a hierarchy of View and ViewGroup objects. View objects are usually UI widgets such as a button or text field and ViewGroup objects are invisible view containers that define how the child views are laid out, such as in a grid or a vertical list.</span></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><span style="font-size: 22px;"><br></span></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><span style="font-size: 22px;">Android provides an XML vocabulary that corresponds to the subclasses of View and ViewGroup so you can define your UI in XML with a hierarchy of view elements.</span></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><span style="font-size: 22px;"><br></span></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><span style="font-size: 22px;"><br></span></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><span style="font-size: 22px;">Use a Linear Layout</span></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><br><pre><code class="xml">&lt;?xml version="1.0" encoding="utf-8"?&gt;\r\n&lt;LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"\r\n    android:layout_width="fill_parent"\r\n    android:layout_height="fill_parent"\r\n    android:orientation="horizontal" &gt;\r\n&lt;/LinearLayout&gt;</code></pre><br></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><span style="font-size: 22px;">LinearLayout is a view group (a subclass of ViewGroup) that lays out child views in either a vertical or horizontal orientation, as specified by the android:orientation attribute. Each child of a LinearLayout appears on the screen in the order in which it appears in the XML.</span></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><span style="font-size: 22px;"><br></span></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><span style="font-size: 22px;">The other two attributes, android:layout_width and android:layout_height, are required for all views in order to specify their size.</span></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><span style="font-size: 22px;"><br></span></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><span style="font-size: 22px;">Because the LinearLayout is the root view in the layout, it should fill the entire screen area that''s available to the app by setting the width and height to "fill_parent".</span></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><span style="font-size: 22px;"><br></span></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><span style="font-size: 22px;">Note: Beginning with Android 2.2 (API level 8), "fill_parent" has been renamed "match_parent" to better reflect the behavior. The reason is that if you set a view to "fill_parent" it does not expand to fill the remaining space after sibling views are considered, but instead expands to match the size of the parent view no matter what—it will overlap any sibling views.</span></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><span style="font-size: 22px;"><br></span></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><span style="font-size: 22px;"><br></span></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><span style="font-size: 22px;">Add a Text Field</span></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><br><pre><code class="xml">&lt;EditText android:id="@+id/edit_message"\r\n        android:layout_width="wrap_content"\r\n        android:layout_height="wrap_content"\r\n        android:hint="@string/edit_message" /&gt;</code></pre><br></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><span style="font-size: 22px;">About these attributes:</span></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><span style="font-size: 22px;"><br></span></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><span style="font-size: 22px;">android:id</span></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><span style="font-size: 22px;">&nbsp; &nbsp; This provides a unique identifier for the view, which you can use to reference the object from your app code, such as to read and manipulate the object (you''ll see this in the next lesson).</span></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><span style="font-size: 22px;"><br></span></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><span style="font-size: 22px;">&nbsp; &nbsp; The at-symbol (@) is required when you want to refer to a resource object from XML, followed by the resource type (id in this case), then the resource name (edit_message). (Other resources can use the same name as long as they are not the same resource type—for example, the string resource uses the same name.)</span></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><span style="font-size: 22px;"><br></span></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><span style="font-size: 22px;">&nbsp; &nbsp; The plus-symbol (+) is needed only when you''re defining a resource ID for the first time. It tells the SDK tools that the resource ID needs to be created. Thus, when the app is compiled, the SDK tools use the ID value, edit_message, to create a new identifier in your project''s gen/R.java file that is now associated with the EditText element. Once the resource ID is created, other references to the ID do not need the plus symbol. This is the only attribute that may need the plus-symbol. See the sidebox for more information about resource objects.</span></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><span style="font-size: 22px;"><br></span></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><span style="font-size: 22px;">android:layout_width and android:layout_height</span></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><span style="font-size: 22px;">&nbsp; &nbsp; Instead of using specific sizes for the width and height, the "wrap_content" value specifies that the view should be only as big as needed to fit the contents of the view. If you were to instead use "fill_parent", then the EditText element would fill the screen, because it''d match the size of the parent LinearLayout.&nbsp;</span></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><span style="font-size: 22px;"><br></span></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><span style="font-size: 22px;">android:hint</span></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><span style="font-size: 22px;">&nbsp; &nbsp; This is a default string to display when the text field is empty. Instead of using a hard-coded string as the value, the "@string/edit_message" value refers to a string resource defined in a separate file. Because this value refers to an existing resource, it does not need the plus-symbol. However, because you haven''t defined the string resource yet, you’ll see a compiler error when you add the "@string/edit_message" value. You''ll fix this in the next section by defining the string resource.&nbsp;</span></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><span style="font-size: 22px;"><br></span></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><span style="font-size: 22px;">Add a Button</span></div><br><pre style="color: rgb(0, 0, 0); font-size: 22px;"><code class="xml">    &lt;Button\r\n        android:layout_width="wrap_content"\r\n        android:layout_height="wrap_content"\r\n        android:text="@string/button_send" /&gt;</code></pre><br><div style="color: rgb(0, 0, 0); font-size: 22px;"><span class="Apple-tab-span" style="white-space: pre; font-size: 22px;">	</span></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><span style="font-size: 22px;">android:layout_weight="1"<span class="Apple-tab-span" style="white-space:pre">		</span></span></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><span class="Apple-tab-span" style="white-space: pre; font-size: 22px;">		</span></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><span style="font-size: 22px;">The weight value allows you to specify the amount of remaining space each view should consume, relative to the amount consumed by sibling views, just like the ingredients in a drink recipe: "2 parts vodka, 1 part coffee liqueur" means two-thirds of the drink is vodka. For example, if you give one view a weight of 2 and another one a weight of 1, the sum is 3, so the first view gets 2/3 of the remaining space and the second view gets the rest. If you give a third view a weight of 1, then the first view now gets 1/2 the remaining space, while the remaining two each get 1/4.<span class="Apple-tab-span" style="white-space:pre">		</span></span></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><span style="font-size: 22px;"><br></span></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><span style="font-size: 22px;">The default weight for all views is 0, so if you specify any weight value greater than 0 to only one view, then that view fills whatever space remains after each view is given the space it requires.&nbsp;</span></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><span style="font-size: 22px;"><br></span></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><span style="font-size: 22px;">In order to improve the layout efficiency when you specify the weight, you should change the width of the layout_width to be zero (0dp). Setting the width to zero improves layout performance because using "wrap_content" as the width requires the system to calculate a width that is ultimately irrelevant because the weight value requires another width calculation to fill the remaining space.</span></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><span style="font-size: 22px;"><br></span></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><span style="font-size: 22px;"><br></span></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><span style="font-size: 22px;">Here’s how your complete layout file should now look:</span></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><br><pre><code class="xml">&lt;?xml version="1.0" encoding="utf-8"?&gt;\r\n&lt;LinearLayout \r\n    xmlns:android="http://schemas.android.com/apk/res/android"\r\n	android:layout_width="match_parent" \r\n	android:layout_height="match_parent"\r\n	android:background="@drawable/start_bg" \r\n	android:orientation="horizontal"&gt;\r\n\r\n	&lt;EditText \r\n	    android:id="@+id/edit_message" \r\n	    android:layout_weight="1"\r\n	    android:layout_width="0dp" \r\n		android:layout_height="wrap_content"\r\n		android:hint="@string/edit_message" /&gt;\r\n	\r\n	&lt;Button\r\n        android:layout_width="wrap_content"\r\n        android:layout_height="wrap_content"\r\n        android:text="@string/button_send" /&gt;\r\n			\r\n&lt;/LinearLayout&gt;</code></pre><br></div>\r\n\r\n\r\n\r\n\r\n', '', ''),
('tiankonguse1362205592', 'tiankonguse', '2013-03-02 06:26:32', 'android笔记之RatingBar 评价级别', '<div style="text-align: center;"><span style="font-size: 22px;">&nbsp;android笔记之RatingBar 评价级别</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">&nbsp;1.在布局文件里声明RatingBar</span></div><div><br></div><div><br><pre><code class="cpp"> &lt;RatingBar\r\n	android:id="@+id/ratingBarId"\r\n	android:layout_width="wrap_parent"\r\n	android:layout_height="wrap_content"\r\n	android:numStars="5"\r\n	android:stepSize="1.0"\r\n	/&gt; </code></pre><br></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">&nbsp;2.定义一个OnRatingBarChangeListener</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">&nbsp;</span></div>\r\n\r\n\r\n\r\n\r\n', '', ''),
('tiankonguse1362205685', 'tiankonguse', '2013-03-02 06:28:05', 'android笔记之 String Resources', '<div style="text-align: center;"><span style="color: rgb(0, 0, 0); font-size: 22px;">&nbsp;</span><font color="#000000">android笔记之</font><span style="color: rgb(68, 68, 68); font-size: 22px; line-height: 1.333;">String Resources</span></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><span style="font-size: 22px;">&nbsp;</span></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><span style="font-size: 22px;">&nbsp;When you need to add text in the user interface, you should always specify each string of text in a resource file. String resources allow you to maintain a single location for all string values, which makes it easier to find and update text. Externalizing the strings also allows you to localize your app to different languages by providing alternative definitions for each string.</span></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><span style="font-size: 22px;">&nbsp;</span></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><span style="font-size: 22px;">&nbsp;By default, your Android project includes a string resource file at res/values/strings.xml.</span></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><span style="font-size: 22px;">&nbsp;</span></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><span style="font-size: 22px;">&nbsp;The result for strings.xml looks like this:</span></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><br><pre><code class="xml">\r\n&lt;?xml version="1.0" encoding="utf-8"?&gt;\r\n&lt;resources&gt;\r\n    &lt;string name="app_name"&gt;hello word&lt;/string&gt;\r\n&lt;/resources&gt;</code></pre><br></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><span style="font-size: 22px;">&nbsp;</span></div>\r\n\r\n\r\n\r\n\r\n', '', ''),
('tiankonguse1362207549', 'tiankonguse', '2013-03-02 06:59:09', '国内各地DNS服务器IP地址', '<div style="text-align: center;"><span style="font-size: 22px;">国内各地DNS服务器IP地址</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">我们有时候需要更换DNS服务器IP，但是却不知道从哪获取，现在tiankonguse提供一批DNS服务器IP地址供大家参考，并教大家怎么设置DNS。</span></div><div><span style="font-size: 22px;">如果有网友遇到DNS设置问题也可以查看这个DNS服务器IP地址进行重置。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">DNS如何设置：打开Windows系统的控制面板，双击“网络”，在弹出的框中选择“TCP/IP”，点击“属性”，然后在属性窗口的“使用下面DNS服务器地址”栏目中填入，然后点击“确定”按钮即可。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">北京:</span></div><div><span style="font-size: 22px;">202.96.0.133 &nbsp; &nbsp; (ns.bta.net.cn)</span></div><div><span style="font-size: 22px;">202.96.199.133 &nbsp; (ns.spt.net.cn)&nbsp;</span></div><div><span style="font-size: 22px;">202.97.16.195 &nbsp; &nbsp;(ns.cn.net)</span></div><div><span style="font-size: 22px;">202.106.0.20 &nbsp; &nbsp; (gjjline.bta.net.cn)</span></div><div><span style="font-size: 22px;">202.106.196.115 &nbsp;(linedns.bta.net.cn)</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">广东:</span></div><div><span style="font-size: 22px;">202.96.128.143 &nbsp; (ns.guangzhou.gd.cn)</span></div><div><span style="font-size: 22px;">202.96.128.68 &nbsp; &nbsp;(dns.guangzhou.gd.cn)</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">上海:</span></div><div><span style="font-size: 22px;">202.96.199.132 &nbsp; &nbsp;(ns.sta.net.cn)</span></div><div><span style="font-size: 22px;">202.96.209.133 &nbsp; &nbsp;(ns-pd.online.sh.cn)</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">湖北武汉:&nbsp;</span></div><div><span style="font-size: 22px;">202.103.24.68 &nbsp; &nbsp;(ns.wuhan.net.cn)</span></div><div><span style="font-size: 22px;">202.103.0.117 &nbsp; &nbsp;(ns1.hbwhptt.net.cn)</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">浙江:</span></div><div><span style="font-size: 22px;">202.96.102.3 &nbsp; &nbsp; (dns.zj.cninfo.net)&nbsp;</span></div><div><span style="font-size: 22px;">202.96.96.68 &nbsp; &nbsp; (ns.wuhan.net.cn)</span></div><div><span style="font-size: 22px;">202.96.104.18 &nbsp; &nbsp;(ns.zjnbptt.net.cn)</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">陕西:</span></div><div><span style="font-size: 22px;">202.100.13.11 &nbsp; &nbsp;(ns.snnic.com)</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">西安:&nbsp;</span></div><div><span style="font-size: 22px;">202.100.4.15 &nbsp; &nbsp; (ns1.xaonline.com)</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">天津:</span></div><div><span style="font-size: 22px;">202.99.96.68 &nbsp; &nbsp; (ns.tpt.net.cn)</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">辽宁:</span></div><div><span style="font-size: 22px;">202.96.75.68 &nbsp; &nbsp; (ns.dcb.ln.cn)</span></div><div><span style="font-size: 22px;">202.96.64.68 &nbsp; &nbsp; (ns.lnpta.net.cn)</span></div><div><span style="font-size: 22px;">202.96.69.38 &nbsp; &nbsp; (dns.dl.lnpta.net.cn)&nbsp;</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">江苏:</span></div><div><span style="font-size: 22px;">202.102.29.3 &nbsp; &nbsp; (pub.jsinfo.net)</span></div><div><span style="font-size: 22px;">202.102.13.141 &nbsp; (info.ptt.js.cn)</span></div><div><span style="font-size: 22px;">202.102.24.35 &nbsp; &nbsp;(dns.nj-online.nj.js.cn)</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">安徽：&nbsp;</span></div><div><span style="font-size: 22px;">202.102.199.68 &nbsp; (ns.ahwhtel.net.cn)</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">四川:</span></div><div><span style="font-size: 22px;">61.139.2.69 &nbsp; &nbsp; &nbsp;(ns.sc.cninfo.net)</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">重庆:</span></div><div><span style="font-size: 22px;">61.128.128.68 &nbsp; &nbsp;(cq.cta.net.cn)</span></div><div><span style="font-size: 22px;">61.128.192.4 &nbsp; &nbsp; (cq.cta.net.cn)</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">成都:&nbsp;</span></div><div><span style="font-size: 22px;">202.98.96.68 &nbsp; &nbsp; &nbsp;(ns.sccdppt.net.cn)</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">河北:</span></div><div><span style="font-size: 22px;">202.99.160.68 &nbsp; &nbsp; (ns.hesjptt.net.cn)</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">保定:&nbsp;</span></div><div><span style="font-size: 22px;">202.99.160.68 &nbsp; &nbsp; (sjzdns.heinfo.net)</span></div><div><span style="font-size: 22px;">202.99.166.4 &nbsp; &nbsp; &nbsp;(tsdns.heinfo.net)</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">山西:</span></div><div><span style="font-size: 22px;">202.99.198.6 &nbsp; &nbsp; &nbsp;(ns.sxyzptt.net.cn)</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">吉林:</span></div><div><span style="font-size: 22px;">202.98.5.68 &nbsp; &nbsp; &nbsp; (ns.jlccptt.net.cn)</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">山东:</span></div><div><span style="font-size: 22px;">202.102.152.3 &nbsp; &nbsp; (dns1.sdjnptt.net.cn)</span></div><div><span style="font-size: 22px;">202.102.128.68 &nbsp; &nbsp;(ns.sdjnptt.net.cn)</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">福建:</span></div><div><span style="font-size: 22px;">202.101.98.55 &nbsp; &nbsp; (dns.fz.fj.cn)</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">湖南:</span></div><div><span style="font-size: 22px;">202.103.100.206 &nbsp;</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">广西:&nbsp;</span></div><div><span style="font-size: 22px;">202.103.224.68 &nbsp; &nbsp;(nsc0.gxnnptt.net.cn)</span></div><div><span style="font-size: 22px;">202.103.225.68 &nbsp; &nbsp;(nsc.lzptt.gx.cn)</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">江西:&nbsp;</span></div><div><span style="font-size: 22px;">202.101.224.68 &nbsp; &nbsp;(ns.jxncptt.net.cn)</span></div><div><span style="font-size: 22px;">202.101.226.68 &nbsp; &nbsp;(ns.jxjjptt.net.cn)</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">云南:</span></div><div><span style="font-size: 22px;">202.98.160.68 &nbsp; &nbsp; &nbsp;(ns.ynkmptt.net.cn)</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">河南:&nbsp;</span></div><div><span style="font-size: 22px;">202.102.227.68 &nbsp; &nbsp; (zz.163.ppp)</span></div><div><span style="font-size: 22px;">202.102.224.68 &nbsp; &nbsp; (ns1.hazzptt.net.cn)</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">新疆:&nbsp;</span></div><div><span style="font-size: 22px;">61.128.97.73</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">厦门:&nbsp;</span></div><div><span style="font-size: 22px;">202.101.103.55 &nbsp; &nbsp; (dns.xm.fj.cn)</span></div><div><span style="font-size: 22px;">202.101.103.54 &nbsp; &nbsp; (dns2.xm.fj.cn)</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">山东:&nbsp;</span></div><div><span style="font-size: 22px;">202.102.134.68 &nbsp; &nbsp; (ns1.sdqdptt.net.cn)</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">长沙:&nbsp;</span></div><div><span style="font-size: 22px;">202.103.96.68 &nbsp; &nbsp; &nbsp;(dns1.cs.hn.cn)</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">香港:</span></div><div><span style="font-size: 22px;">205.252.144.228 &nbsp;(ns1.netvigator.com)</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">澳门:</span></div><div><span style="font-size: 22px;">202.175.3.8 &nbsp; &nbsp; &nbsp;(vassun2.macau.ctm.net)</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">深圳:</span></div><div><span style="font-size: 22px;">202.96.134.133 &nbsp; (ns.shenzhen.gd.cn)</span></div><div><span style="font-size: 22px;">202.96.154.8 &nbsp; &nbsp; (public.szonline.net)</span></div><div><span style="font-size: 22px;">202.96.154.15 &nbsp; &nbsp;(ns.szonline.net)</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">教育网DNS服务器:&nbsp;</span></div><div><span style="font-size: 22px;">202.114.64.2 &nbsp; &nbsp; 武大DNS1 (一区)&nbsp;</span></div><div><span style="font-size: 22px;">202.114.96.1 &nbsp; &nbsp; 武大DNS2 (二区)&nbsp;</span></div><div><span style="font-size: 22px;">202.114.96.2 &nbsp; &nbsp; 武大DNS3 (二区)&nbsp;</span></div><div><span style="font-size: 22px;">202.114.112.13 &nbsp; 武大DNS4 (三区)</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">202.114.0.242 &nbsp; &nbsp;(server20.hust.edu.cn) &nbsp; &nbsp;华工DNS&nbsp;</span></div><div><span style="font-size: 22px;">202.112.0.35 &nbsp; &nbsp; (dns.hust.edu.cn) &nbsp; &nbsp; &nbsp; &nbsp; 华工DNS2&nbsp;</span></div><div><span style="font-size: 22px;">202.112.20.131 &nbsp; (dns.whnet.edu.cn) &nbsp; &nbsp; &nbsp; &nbsp;华中地区网络中心DNS&nbsp;</span></div><div><span style="font-size: 22px;">166.111.8.28 &nbsp; &nbsp; (dns-a.tsinghua.edu.cn) &nbsp; 清华DNS1&nbsp;</span></div><div><span style="font-size: 22px;">166.111.8.29 &nbsp; &nbsp; (dns-b.tsinghua.edu.cn) &nbsp; 清华DNS2&nbsp;</span></div><div><span style="font-size: 22px;">166.111.8.30 &nbsp; &nbsp; (dns.tsinghua.edu.cn) &nbsp; &nbsp; 清华DNS&nbsp;</span></div><div><span style="font-size: 22px;">202.117.0.20 &nbsp; &nbsp; (dec3000.xjtu.edu.cn) &nbsp; &nbsp; 西交DNS1&nbsp;</span></div><div><span style="font-size: 22px;">202.117.0.21 &nbsp; &nbsp; (ns2.xjtu.edu.cn) &nbsp; &nbsp; &nbsp; &nbsp; 西交DNS2&nbsp;</span></div><div><span style="font-size: 22px;">202.112.26.34 &nbsp; &nbsp;(上交)&nbsp;</span></div><div><span style="font-size: 22px;">202.112.112.100 &nbsp;(人大)</span></div><div><span style="font-size: 22px;">162.105.129.27 &nbsp; (北大)&nbsp;</span></div><div><span style="font-size: 22px;">202.203.128.33 &nbsp; (cernet云南中心主dns)&nbsp;</span></div><div><span style="font-size: 22px;">202.115.64.33 &nbsp; &nbsp;(西南交大)</span></div><div><span style="font-size: 22px;">210.33.116.112 &nbsp; (浙江电大)&nbsp;</span></div><div><span style="font-size: 22px;">202.116.160.33 &nbsp; (华南农业)</span></div><div><span style="font-size: 22px;">202.112.0.33 &nbsp; &nbsp; (华北网)</span></div>\r\n\r\n\r\n\r\n\r\n', '', ''),
('tiankonguse1362208391', 'tiankonguse', '2013-03-02 07:13:11', '由于一个或多个其他网络属性已经打开,这个属性页上的部分控件被禁用', '<div style="text-align: center;"><span style="font-size: 22px;">由于一个或多个其他网络属性已经打开,这个属性页上的部分控件被禁用</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">我的解决方案：</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">在计算机服务中，设置IP helper，设置为手动，再停止服务.</span></div>\r\n\r\n\r\n\r\n\r\n', '', ''),
('tiankonguse1362210195', 'tiankonguse', '2013-03-02 07:43:15', 'windows 7建wifi', '<div style="text-align: center;"><span style="font-size: 22px;">windows 7建wifi</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">你开启windows 7的wifi功能，就可以让电脑变成无线路由器，实现共享上网。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">注意：第一次新建wifi时，需要做前两步，之后只需要从第三部=步开始即可。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">1.准备工作</span></div><div><span style="font-size: 22px;">点开始 &nbsp;所有程序 &nbsp; 命令提示符右键管理员身份运行命令提示符 &nbsp;运行命令</span></div><div><span style="font-size: 22px;">(快捷键：win键+R,在运行里输入cmd)</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">2.建wifi</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">netsh wlan set hostednetwork mode=allow ssid=tiankonguse key=tiankonguse</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">此命令有三个参数</span></div><div><span style="font-size: 22px;"><span class="Apple-tab-span" style="white-space:pre">	</span>mode：是否启用虚拟WiFi网卡，改为disallow则为禁用 。 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</span></div><div><span style="font-size: 22px;"><span class="Apple-tab-span" style="white-space:pre">	</span>ssid：无线网名称，最好用英文(以tiankonguse为例)。&nbsp;</span></div><div><span style="font-size: 22px;"><span class="Apple-tab-span" style="white-space:pre">	</span>key：无线网密码，八个以上字符(以tiankonguse为例)。</span></div><div><span class="Apple-tab-span" style="white-space: pre; font-size: 22px;">	</span></div><div><span style="font-size: 22px;">以上三个参数可以自己设置，例如只使用mode=disallow可以直接禁用虚拟Wifi网卡。</span></div><div><span style="font-size: 22px;">&nbsp; &nbsp;</span></div><div><span style="font-size: 22px;">开启成功后，网络连接中会多出一个网卡为“Microsoft Virtual WiFi Miniport Adapter”的无线连接2。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">有些win7可能找不到网络连接，在 控制面板\\网络和 Internet\\网络和共享中心 点左边的更改适配器设置就是网络连接。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">在“网络连接”窗口中，右键单击已连接到Internet的网络连接，选择“属性”→“共享”，勾上“允许其他······连接(N)”并选择“无线连接2”。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">确定之后，提供共享的网卡图标旁会出现“共享的”字样，表示“宽带连接”已共享至“虚拟WiFi”。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">3.启动wifi</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">我们建了wifi，但是并没有启动wifi,所以还要启动wifi.</span></div><div><span style="font-size: 22px;">注意，第一次键wifi后就不需要再次新建wifi了，以后只需要启动wifi即可。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">在命令提示符中运行：</span></div><div><span style="font-size: 22px;"><span class="Apple-tab-span" style="white-space:pre">	</span>netsh wlan start hostednetwork &nbsp; &nbsp;</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">3.关闭wifi<span class="Apple-tab-span" style="white-space:pre">	</span></span></div><div><br></div><div><span style="font-size: 22px;">在命令提示符中运行：</span></div><div><span style="font-size: 22px;"><span class="Apple-tab-span" style="white-space:pre">	</span>netsh wlan start hostednetwork</span></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><br></div>\r\n\r\n\r\n\r\n\r\n', '', ''),
('tiankonguse1362210474', 'tiankonguse', '2013-03-02 07:47:54', '(请忽略这篇文章，个人记录)学习js时的实验', '<div><br><pre><code class="javascript">\r\n\r\n// Create a variable called add and store a function\r\n// in it that adds two numbers.\r\nvar add = function (a, b) {\r\n    return a + b;\r\n};\r\n\r\n\r\nvar sum = add(3, 4); // sum is 7\r\n\r\n// Make an array of 2 numbers and add them.\r\nvar array = [5, 4];\r\nvar sum = add.apply(null, array); // sum is 7\r\n\r\n\r\n\r\n// Create myObject. It has a value and an increment\r\n// method. The increment method takes an optional\r\n// parameter. If the argument is not a number, then 1\r\n// is used as the default.\r\n\r\nvar myObject = {\r\n    value: 0,\r\n    increment: function (inc) {\r\n        this.value += typeof inc === ''number'' ? inc : 1;\r\n    }\r\n};\r\n\r\n\r\nmyObject.increment( );\r\n\r\nmyObject.increment(2);\r\n\r\n\r\n\r\n// Augment myObject with a double method.\r\nmyObject.double = function ( ) {\r\n    var that = this; // Workaround.\r\n    \r\n    var helper = function ( ) {\r\n    \r\n        that.value = add(that.value, that.value);\r\n    };\r\n    helper( ); // Invoke helper as a function.\r\n};\r\n\r\n// Invoke double as a method.\r\nmyObject.double( );\r\n\r\n\r\n\r\n\r\n// Create a constructor function called Quo.\r\n// It makes an object with a status property.\r\nvar Quo = function (string) {\r\n    this.status = string;\r\n};\r\n// Give all instances of Quo a public method\r\n// called get_status.\r\nQuo.prototype.get_status = function ( ) {\r\n    return this.status;\r\n};\r\n// Make an instance of Quo.\r\nvar myQuo = new Quo("confused");\r\nmyQuo.get_status( );\r\n\r\n\r\n// Make an object with a status member.\r\nvar statusObject = {\r\nstatus: ''A-OK''\r\n};\r\n// statusObject does not inherit from Quo.prototype,\r\n// but we can invoke the get_status method on\r\n// statusObject even though statusObject does not have\r\n// a get_status method.\r\nvar status = Quo.prototype.get_status.apply(statusObject);\r\n// status is ''A-OK''\r\n\r\nFunction.prototype.method = function (name, func) {\r\n    this.prototype[name] = func;\r\n    return this;\r\n};\r\n\r\nNumber.method(''integer'', function ( ) {\r\nreturn Math[this &lt; 0 ? ''ceil'' : ''floor''](this);\r\n});\r\n\r\n(-10 / 3).integer( );\r\n\r\nString.method(''trim'', function ( ) {\r\n    return this.replace(/^\\s+|\\s+$/g, '''');\r\n});\r\n\r\n" neat ".trim( );\r\n\r\nFunction.prototype.method = function (name, func) {\r\n    if (!this.prototype[name]) {\r\n        this.prototype[name] = func;\r\n        return this;\r\n    }\r\n};\r\n\r\n\r\nString.method(''deentityify'', function ( ) {\r\n// The entity table. It maps entity names to\r\n// characters.\r\nvar entity = {\r\nquot: ''"'',\r\nlt: ''&lt;'',\r\ngt: ''&gt;''\r\n};\r\n// Return the deentityify method.\r\nreturn function ( ) {\r\n// This is the deentityify method. It calls the string\r\n// replace method, looking for substrings that start\r\n// with ''&amp;'' and end with '';''. If the characters in\r\n// between are in the entity table, then replace the\r\n// entity with the character from the table. It uses\r\n// a regular expression (Chapter 7).\r\nreturn this.replace(/&amp;([^&amp;;]+);/g,\r\nfunction (a, b) {\r\nvar r = entity[b];\r\nreturn typeof r === ''string'' ? r : a;\r\n}\r\n);\r\n};\r\n}());\r\n\r\n\r\n''&amp;lt;&amp;quot;&amp;gt;''.deentityify( )\r\n\r\n/*\r\n&lt;"&gt;\r\n*/</code></pre><br></div>\r\n\r\n\r\n\r\n\r\n', '', '');
INSERT INTO `tk_blog` (`tk_blog_key`, `tk_blog_user`, `tk_blog_datetime`, `tk_blog_title`, `tk_blog_content`, `tk_blog_password`, `tk_blog_category`) VALUES
('tiankonguse1362216444', 'tiankonguse', '2013-03-02 09:27:24', 'Respond to the Send Button', '<div style="text-align: center;"><span style="font-size: 22px;"><b>Respond to the Send Button</b></span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">To respond to the button''s on-click event, open the main.xml layout file and add the android:onClick attribute to the &lt;Button&gt; element:</span></div><div><br><pre><code class="xml">&lt;Button\r\n    android:layout_width="wrap_content"\r\n    android:layout_height="wrap_content"\r\n    android:text="@string/button_send"\r\n    android:onClick="sendMessage" /&gt;</code></pre><br></div><div><span style="font-size: 22px;">The android:onClick attribute’s value, sendMessage, is the name of a method in your activity that you want to call when the user selects the button.</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">Add the corresponding method inside the MyFirstActivity class:</span></div><div><br><pre><code class="java">/** Called when the user selects the Send button */\r\npublic void sendMessage(View view) {\r\n    // Do something in response to button\r\n}</code></pre><br></div><div><span style="font-size: 22px;">Note that, in order for the system to match this method to the method name given to android:onClick, the signature must be exactly as shown. Specifically, the method must:</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">&nbsp; &nbsp; Be public</span></div><div><span style="font-size: 22px;">&nbsp; &nbsp; Have a void return value</span></div><div><span style="font-size: 22px;">&nbsp; &nbsp; Have a View as the only parameter (this will be the View that was clicked)</span></div><div><span style="font-size: 22px;"><br></span></div><div><span class="Apple-tab-span" style="white-space: pre; font-size: 22px;">	</span></div><div style="text-align: center;"><span style="font-size: 22px;"><b>Build an Intent</b></span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">An Intent is an object that provides runtime binding between separate components (such as two activities). The Intent represents an app’s "intent to do something." You can use an Intent for a wide variety of tasks, but most often they’re used to start another activity.</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">Inside the sendMessage() method, create an Intent to start an activity called DisplayMessageActvity:</span></div><div><span style="font-size: 22px;"><br></span></div><div><br><pre><code class="java">Intent intent = new Intent(this, DisplayMessageActivity.class);</code></pre><br></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">The constructor used here takes two parameters:</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">&nbsp; &nbsp; A Context as its first parameter (this is used because the Activity class is a subclass of Context)</span></div><div><span style="font-size: 22px;">&nbsp; &nbsp; The Class of the app component to which the system should deliver the Intent (in this case, the activity that should be started)&nbsp;</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">An intent not only allows you to start another activity, but can carry a bundle of data to the activity as well. So, use findViewById() to get the EditText element and add its message to the intent:</span></div><div><br><pre><code class="java">Intent intent = new Intent(this, DisplayMessageActivity.class);\r\nEditText editText = (EditText) findViewById(R.id.edit_message);\r\nString message = editText.getText().toString();\r\nintent.putExtra(EXTRA_MESSAGE, message);</code></pre><br></div><div><span style="font-size: 22px;">An Intent can carry a collection of various data types as key-value pairs called extras. The putExtra() method takes a string as the key and the value in the second parameter.</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">In order for the next activity to query the extra data, you should define your keys using a public constant. So add the EXTRA_MESSAGE definition to the top of the MyFirstActivity class:</span></div><div><br><pre><code class="java">public class MyFirstActivity extends Activity {\r\n    public final static String EXTRA_MESSAGE = "com.example.myapp.MESSAGE";\r\n    ...\r\n}</code></pre><br></div><div><span style="font-size: 22px;">It''s generally a good practice to define keys for extras with your app''s package name as a prefix to ensure it''s unique, in case your app interacts with other apps.</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;"><br></span></div><div style="text-align: center;"><span style="font-size: 22px;"><b>Start the Second Activity</b></span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">To start an activity, you simply need to call startActivity() and pass it your Intent.</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">The system receives this call and starts an instance of the Activity specified by the Intent.</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">With this method included, the complete sendMessage() method that''s invoked by the Send button now looks like this:</span></div><div><br><pre><code class="java">/** Called when the user selects the Send button */\r\npublic void sendMessage(View view) {\r\n    Intent intent = new Intent(this, DisplayMessageActivity.class);\r\n    EditText editText = (EditText) findViewById(R.id.edit_message);\r\n    String message = editText.getText().toString();\r\n    intent.putExtra(EXTRA_MESSAGE, message);\r\n    startActivity(intent);\r\n}</code></pre><br></div><div style="text-align: center;"><span style="font-size: 22px;"><b>Create the Second Activity</b></span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">In your project, create a new class file under the src/&lt;package-name&gt;/ directory called DisplayMessageActivity.java.</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">Inside the class, add the onCreate() callback method:</span></div><div><br><pre><code class="java">public class DisplayMessageActivity extends Activity {\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n    }\r\n}</code></pre><br></div><div><span style="font-size: 22px;">All subclasses of Activity must implement the onCreate() method. The system calls this when creating a new instance of the activity. It is where you must define the activity layout and where you should initialize essential activity components.</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;"><br></span></div><div style="text-align: center;"><span style="font-size: 22px;"><b>Add it to the manifest</b></span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">You must declare all activities in your manifest file, AndroidManifest.xml, using an &lt;activity&gt; element.</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">Because DisplayMessageActivity is invoked using an explicit intent, it does not require any intent filters (such as those you can see in the manifest for MyFirstActivity). So the declaration for DisplayMessageActivity can be simply one line of code inside the &lt;application&gt; element:</span></div><div><br><pre><code class="xml">&lt;application ... &gt;\r\n    &lt;activity android:name="com.example.myapp.DisplayMessageActivity" /&gt;\r\n    ...\r\n&lt;/application&gt;</code></pre><br></div><div><span style="font-size: 22px;">The app is now runnable because the Intent in the first activity now resolves to the DisplayMessageActivity class. If you run the app now, pressing the Send button starts the second activity, but it doesn''t show anything yet.<span class="Apple-tab-span" style="white-space:pre">	</span></span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;"><br></span></div><div style="text-align: center;"><span style="font-size: 22px;"><b>Receive the Intent</b></span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">Every Activity is invoked by an Intent, regardless of how the user navigated there. You can get the Intent that started your activity by calling getIntent() and the retrieve data contained within it.</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">In the DisplayMessageActivity class’s onCreate() method, get the intent and extract the message delivered by MyFirstActivity:</span></div><div><br><pre><code class="java">Intent intent = getIntent();\r\nString message = intent.getStringExtra(MyFirstActivity.EXTRA_MESSAGE);\r\n</code></pre><br></div><div style="text-align: center;"><span style="font-size: 22px;"><b>Display the Message</b></span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">The complete onCreate() method for DisplayMessageActivity now looks like this:</span></div><div><span style="font-size: 22px;"><br></span></div><div><br><pre><code class="java">@Override\r\npublic void onCreate(Bundle savedInstanceState) {\r\n    super.onCreate(savedInstanceState);\r\n\r\n    // Get the message from the intent\r\n    Intent intent = getIntent();\r\n    String message = intent.getStringExtra(MyFirstActivity.EXTRA_MESSAGE);\r\n\r\n    // Create the text view\r\n    TextView textView = new TextView(this);\r\n    textView.setTextSize(40);\r\n    textView.setText(message);\r\n\r\n    setContentView(textView);\r\n}</code></pre><br></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;"><br></span></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><br></div>\r\n\r\n\r\n\r\n\r\n', '', ''),
('tiankonguse1362217042', 'tiankonguse', '2013-03-02 09:37:22', 'php die语句', '<div style="text-align: center;"><span style="font-size: 22px;">php die语句</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">die函数主要作为出错时的处理一种方式。</span></div><div><span style="font-size: 22px;">当调用die后，之后的数据就全部停止运行，输出停止。</span></div>\r\n\r\n\r\n\r\n\r\n', '', ''),
('tiankonguse1362217259', 'tiankonguse', '2013-03-02 09:40:59', 'RegExp学习笔记', '<div style="text-align: center;"><span style="font-size: 22px;">RegExp学习笔记</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">&nbsp;There are two ways to make a RegExp object.</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">Regular expression literals are enclosed in slashes.&nbsp;</span></div><div><span style="font-size: 22px;">This can be a little tricky because slash is also used as the division operator and in comments.</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">There are three flags that can be set on a RegExp.&nbsp;</span></div><div><span style="font-size: 22px;">They are indicated by the letters g,i, and m.&nbsp;</span></div><div><span style="font-size: 22px;">The flags are appended directly to the end of the RegExp literal</span></div><div><br><pre><code class="javascript">my_regexp = /"(?:\\\\.|[^\\\\\\"])*"/g;</code></pre><br></div><div><span style="font-size: 22px;">Flags for regular expressions</span></div><div><span style="font-size: 22px;">Flag &nbsp; &nbsp; Meaning</span></div><div><span style="font-size: 22px;">g &nbsp; &nbsp; &nbsp; &nbsp;Global (match multiple times; the precise meaning of this varies with the method)</span></div><div><span style="font-size: 22px;">i &nbsp; &nbsp; &nbsp; &nbsp;Insensitive (ignore character case)</span></div><div><span style="font-size: 22px;">m &nbsp; &nbsp; &nbsp; &nbsp;Multiline (^ and $ can match line-ending characters)</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">The other way to make a regular expression is to use the RegExp constructor.&nbsp;</span></div><div><span style="font-size: 22px;">The constructor takes a string and compiles it into a RegExp object.&nbsp;</span></div><div><span style="font-size: 22px;">Some care must be taken in building the string&nbsp;</span></div><div><span style="font-size: 22px;">because backslashes have a somewhat different meaning in regular expressions than in string literals.&nbsp;</span></div><div><span style="font-size: 22px;">It is usually necessary to double the backslashes and escape the quotes:</span></div><div><br><pre><code class="javascript">my_regexp = new RegExp("''(?:\\\\\\\\.|[^\\\\\\\\\\\\''])*''", ''g''));</code></pre><br></div><div><span style="font-size: 22px;">The second parameter is a string specifying the flags.&nbsp;</span></div><div><span style="font-size: 22px;">The RegExp constructor is useful when a regular expression must be generated at runtime using material that is not available to the programmer.</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">Property &nbsp; &nbsp; &nbsp;Use</span></div><div><span style="font-size: 22px;">global &nbsp; &nbsp; &nbsp; &nbsp;true if the g flag was used.</span></div><div><span style="font-size: 22px;">ignoreCase &nbsp; &nbsp;true if the i flag was used.</span></div><div><span style="font-size: 22px;">lastIndex &nbsp; &nbsp; The index at which to start the next exec match. Initially it is zero.</span></div><div><span style="font-size: 22px;">multiline &nbsp; &nbsp; true if the m flag was used.</span></div><div><span style="font-size: 22px;">source &nbsp; &nbsp; &nbsp; &nbsp;The source text of the regular expression.</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;"><b>一、Regexp Choice</b></span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">A regexp choice contains one or more regexp sequences.&nbsp;</span></div><div><span style="font-size: 22px;">The sequences are separated by the | (vertical bar) character.&nbsp;</span></div><div><span style="font-size: 22px;">The choice matches if any of the sequences match.&nbsp;</span></div><div><span style="font-size: 22px;">It attempts to match each of the sequences in order.</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;"><b>二、Regexp Sequence</b></span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">1.regexp factor &nbsp;</span></div><div><span style="font-size: 22px;">2.regexp quantifier</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">A regexp sequence contains one or more regexp factors.&nbsp;</span></div><div><span style="font-size: 22px;">Each factor can optionally be followed by a quantifier that determines how many times the factor is allowed to appear.&nbsp;</span></div><div><span style="font-size: 22px;">If there is no quantifier, then the factor will be matched one time.</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;"><b>三、.Regexp Factor</b></span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">A regexp factor can be a character, a parenthesized group, a character class, or an escape sequence.&nbsp;</span></div><div><span style="font-size: 22px;">All characters are treated literally except for the control characters and the special characters: \\ / [ ] ( ) { } ? + * | . ^ $ which must be escaped with a \\ prefix if they are to be matched literally.&nbsp;</span></div><div><span style="font-size: 22px;">When in doubt, any special character can be given a \\ prefix to make it literal.&nbsp;</span></div><div><span style="font-size: 22px;">The \\ prefix does not make letters or digits literal.</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">An unescaped . matches any character except a line-ending character.</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">An unescaped ^ matches the beginning of the text when the lastIndex property is zero.&nbsp;</span></div><div><span style="font-size: 22px;">It can also match line-ending characters when the m flag is specified.</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">An unescaped $ matches the end of the text.&nbsp;</span></div><div><span style="font-size: 22px;">It can also match line-ending characters when the m flag is specified.</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;"><b>四、Regexp Escape</b></span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">The backslash character indicates escapement in regexp factors as well as in strings, but in regexp factors, it works a little differently.</span></div><div><span style="font-size: 22px;">As in strings, \\f is the formfeed character, \\n is the newline character, \\r is the carriage return character, \\t is the tab character, and \\u allows for specifying a Unicode character as a 16-bit hex constant.&nbsp;</span></div><div><span style="font-size: 22px;">In regexp factors, \\b is not the backspace character.</span></div><div><span style="font-size: 22px;">\\d is the same as [0-9]. It matches a digit. \\D is the opposite: [^0-9].</span></div><div><span style="font-size: 22px;">\\s is the same as [\\f\\n\\r\\t\\u000B\\u0020\\u00A0\\u2028\\u2029].&nbsp;</span></div><div><span style="font-size: 22px;">This is a partial set of Unicode whitespace characters.&nbsp;</span></div><div><span style="font-size: 22px;">\\S is the opposite: [^\\f\\n\\r\\t\\u000B\\u0020\\u00A0\\u2028\\ u2029].</span></div><div><span style="font-size: 22px;">\\w is the same as [0-9A-Z_a-z]. \\W is the opposite: [^0-9A-Z_a-z].&nbsp;</span></div><div><span style="font-size: 22px;">This is supposed to represent the characters that appear in words.&nbsp;</span></div><div><span style="font-size: 22px;">Unfortunately, the class it defines is useless for working with virtually any real language.&nbsp;</span></div><div><span style="font-size: 22px;">If you need to match a class of letters, you must specify your own class.</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">A simple letter class is [A-Za-z\\u00C0-\\u1FFF\\u2800-\\uFFFD].&nbsp;</span></div><div><span style="font-size: 22px;">It includes all of Unicode’s letters, but it also includes thousands of characters that are not letters.&nbsp;</span></div><div><span style="font-size: 22px;">Unicode is large and complex.&nbsp;</span></div><div><span style="font-size: 22px;">An exact letter class of the Basic Multilingual Plane is possible, but would be huge and inefficient.&nbsp;</span></div><div><span style="font-size: 22px;">JavaScript’s regular expressions provide extremely poor support for internationalization.</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">\\b was intended to be a word-boundary anchor that would make it easier to match text on word boundaries.&nbsp;</span></div><div><span style="font-size: 22px;">Unfortunately, it uses \\w to find word boundaries, so it is completely useless for multilingual applications.&nbsp;</span></div><div><span style="font-size: 22px;">This is not a good part.</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">\\1 is a reference to the text that was captured by group 1 so that it can be matched again.&nbsp;</span></div><div><span style="font-size: 22px;">For example, you could search text for duplicated words with:</span></div><div><span style="font-size: 22px;">var doubled_words = /([A-Za-z\\u00C0-\\u1FFF\\u2800-\\uFFFD]+)\\s+\\1/gi;</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">doubled_words looks for occurrences of words (strings containing 1 or more letters) followed by whitespace followed by the same word.</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">\\2 is a reference to group 2, \\3 is a reference to group 3, and so on.</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;"><b>五、Regexp Group</b></span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">There are four kinds of groups:</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">1.Capturing</span></div><div><span style="font-size: 22px;">A capturing group is a regexp choice wrapped in parentheses.&nbsp;</span></div><div><span style="font-size: 22px;">The characters that match the group will be captured.&nbsp;</span></div><div><span style="font-size: 22px;">Every capture group is given a number.&nbsp;</span></div><div><span style="font-size: 22px;">The first capturing ( in the regular expression is group 1.&nbsp;</span></div><div><span style="font-size: 22px;">The second capturing (in the regular expression is group 2.</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">2.Noncapturing</span></div><div><span style="font-size: 22px;">A noncapturing group has a (?: prefix.&nbsp;</span></div><div><span style="font-size: 22px;">A noncapturing group simply matches; it does not capture the matched text.&nbsp;</span></div><div><span style="font-size: 22px;">This has the advantage of slight faster performance.</span></div><div><span style="font-size: 22px;">Noncapturing groups do not interfere with the numbering of capturing groups.</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">3.Positive lookahead</span></div><div><span style="font-size: 22px;">A positive lookahead group has a (?= prefix.&nbsp;</span></div><div><span style="font-size: 22px;">It is like a noncapturing group except that after the group matches, the text is rewound to where the group started, effectively matching nothing.&nbsp;</span></div><div><span style="font-size: 22px;">This is not a good part.</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">4.Negative lookahead</span></div><div><span style="font-size: 22px;">A negative lookahead group has a (?! prefix.&nbsp;</span></div><div><span style="font-size: 22px;">It is like a positive lookahead group, except that it matches only if it fails to match.&nbsp;</span></div><div><span style="font-size: 22px;">This is not a good part.</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;"><b>六、Regexp Class</b></span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">A regexp class is a convenient way of specifying one of a set of characters.&nbsp;</span></div><div><span style="font-size: 22px;">For example, if we wanted to match a vowel, we could write (?:a|e|i|o|u), but it is more conveniently written as the class [aeiou].</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">Classes provide two other conveniences.&nbsp;</span></div><div><span style="font-size: 22px;">The first is that ranges of characters can be specified.&nbsp;</span></div><div><span style="font-size: 22px;">So, the set of 32 ASCII special characters:! " # $ % &amp; '' ( ) * + , - . / : ; &lt; = &gt; ? @ [ \\ ] ^ _ ` { | } ~</span></div><div><span style="font-size: 22px;">could be written as:(?:!|"|#|\\$|%|&amp;|''|\\(|\\)|\\*|\\+|,|-|\\.|\\/|:|;|&lt;|=|&gt;|@|\\[|\\\\|]|\\^|_|` |\\{|\\||\\}|~)</span></div><div><span style="font-size: 22px;">but is slightly more nicely written as:[!-\\/:-@\\[-`{-~]</span></div><div><span style="font-size: 22px;">which includes the characters from ! through / and : through @ and [ through ` and { through ~.&nbsp;</span></div><div><span style="font-size: 22px;">It is still pretty nasty looking.</span></div><div><span style="font-size: 22px;">The other convenience is the complementing of a class.&nbsp;</span></div><div><span style="font-size: 22px;">If the first character after the [ is ^, then the class excludes the specified characters.</span></div><div><span style="font-size: 22px;">So [^!-\\/:-@\\[-`{-~] matches any character that is not one of the ASCII special characters.</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;"><b>七、Regexp Class Escape</b></span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">The rules of escapement within a character class are slightly different than those for a regexp factor.&nbsp;</span></div><div><span style="font-size: 22px;">[\\b] is the backspace character.&nbsp;</span></div><div><span style="font-size: 22px;">Here are the special characters that should be escaped in a character class: - / [ \\ ] ^</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;"><b>八、Regexp Quantifier</b></span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">A regexp factor may have a regexp quantifier suffix that determines how many times the factor should match.&nbsp;</span></div><div><span style="font-size: 22px;">A number wrapped in curly braces means that the factor should match that many times.&nbsp;</span></div><div><span style="font-size: 22px;">So, /www/ matches the same as /w{3}/.&nbsp;</span></div><div><span style="font-size: 22px;">{3,6} will match 3, 4, 5, or 6 times.&nbsp;</span></div><div><span style="font-size: 22px;">{3,} will match 3 or more times.</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">? is the same as {0,1}.&nbsp;</span></div><div><span style="font-size: 22px;">* is the same as {0,}.&nbsp;</span></div><div><span style="font-size: 22px;">+ is the same as {1,}.</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">Matching tends to be greedy, matching as many repetitions as possible up to the limit, if there is one.&nbsp;</span></div><div><span style="font-size: 22px;">If the quantifier has an extra ? suffix, then matching tends to be lazy, attempting to match as few repetitions as possible.&nbsp;</span></div><div><span style="font-size: 22px;">It is usually best to stick with the greedy matching.</span></div><div><br></div>\r\n\r\n\r\n\r\n\r\n', '', ''),
('tiankonguse1362217735', 'tiankonguse', '2013-03-02 09:48:55', 'number正则表达式', '<div style="text-align: center;"><span style="font-size: 22px;">number正则表达式</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">对于正则表达式，还是拿例子来讲解才容易理解。</span></div><div><br><pre><code class="javascript"> var parse_number = /^-?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d+)?$/i;</code></pre></div><div><pre><code class="javascript">/^ $/i</code></pre><br></div><div><span style="font-size: 22px;">We again use ^ and $ to anchor the regular expression.&nbsp;</span></div><div><span style="font-size: 22px;">This causes all of the characters in the text to be matched against the regular expression.&nbsp;</span></div><div><span style="font-size: 22px;">If we had omitted the anchors, the regular expression would tell us if a string contains a number.&nbsp;</span></div><div><span style="font-size: 22px;">With the anchors, it tells us if the string contains only a number.&nbsp;</span></div><div><span style="font-size: 22px;">If we included just the ^, it would match strings starting with a number.&nbsp;</span></div><div><span style="font-size: 22px;">If we included just the $, it would match strings ending with a number.</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">The i flag causes case to be ignored when matching letters.&nbsp;</span></div><div><span style="font-size: 22px;">The only letter in our pattern is e.&nbsp;</span></div><div><span style="font-size: 22px;">We want that e to also match E.&nbsp;</span></div><div><span style="font-size: 22px;">We could have written the e factor as [Ee] or (?:E|e), but we didn’t have to because we used the i flag.</span></div><div><span style="font-size: 22px;">i表明不区分大小写</span></div><div><pre><code class="javascript">-?</code></pre><br></div><div><span style="font-size: 22px;">The ? suffix on the minus sign indicates that the minus sign is optional.</span></div><div><br></div><div><pre><code class="javascript">\\d+</code></pre><br></div><div><span style="font-size: 22px;">\\d means the same as [0-9].&nbsp;</span></div><div><span style="font-size: 22px;">It matches a digit.&nbsp;</span></div><div><span style="font-size: 22px;">The + suffix causes it to match one or more digits.</span></div><div><br></div><div><pre><code class="javascript">(?:\\.\\d*)?</code></pre><br></div><div><span style="font-size: 22px;">The (?:...)? indicates an optional noncapturing group.&nbsp;</span></div><div><span style="font-size: 22px;">It is usually better to use noncapturing groups instead of the less ugly capturing groups because capturing has a performance penalty.&nbsp;</span></div><div><span style="font-size: 22px;">The group will match a decimal point followed by zero or more digits.</span></div><div><br><pre><code class="javascript">(?:e[+\\-]?\\d+)?</code></pre><br></div><div><span style="font-size: 22px;">This is another optional noncapturing group. It matches e (or E), an optional sign,and one or more digits.</span></div><div><span style="font-size: 22px;"><br></span></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><br></div>\r\n\r\n\r\n\r\n\r\n', '', ''),
('tiankonguse1362233316', 'tiankonguse', '2013-03-02 14:08:36', 'php函数之addslashes', '<div style="text-align: center;"><font color="#000000">php函数之</font><span style="color: rgb(0, 0, 0); font-size: 22px;">addslashes</span></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><span style="font-size: 22px;"><br></span></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><br><pre><code class="php">string addslashes ( string str )</code></pre><br></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><span style="font-size: 22px;"><br></span></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><span style="font-size: 22px;"><br></span></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><span style="font-size: 22px;">返回字符串，该字符串为了数据库查询语句等的需要在某些字符前加上了反斜线。这些字符是单引号（''）、双引号（"）、反斜线（\\）与 NUL（NULL 字符）。&nbsp;</span></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><span style="font-size: 22px;"><br></span></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><span style="font-size: 22px;">一个使用 addslashes() 的例子是当你要往数据库中输入数据时。</span></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><span style="font-size: 22px;"><br></span></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><span style="font-size: 22px;">例如，将名字 O''reilly 插入到数据库中，这就需要对其进行转义。</span></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><span style="font-size: 22px;"><br></span></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><span style="font-size: 22px;">大多数据库使用 \\ 作为转义符。</span></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><span style="font-size: 22px;"><br></span></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><span style="font-size: 22px;">这样可以将数据放入数据库中，而不会插入额外的 \\。</span></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><span style="font-size: 22px;"><br></span></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><span style="font-size: 22px;"><br></span></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><br><pre><code class="php">&lt;?php\r\n$str = "Is your name O''reilly?";\r\n\r\n// 输出：Is your name O\\''reilly?\r\necho addslashes($str);\r\n?&gt; </code></pre><br></div><div style="color: rgb(0, 0, 0); font-size: 22px;">注：</div><div><font color="#000000">mysql_escape_string 函数见<a href="http://tiankonguse.com/blog/tiankonguse1362321624.html">这里</a></font></div><div><span style="line-height: 1.333;">get_magic_quotes_gpc 函数见</span><a href="http://tiankonguse.com/blog/tiankonguse1362322109.html" style="line-height: 1.333;">这里</a></div><div>mysql_escape_string 函数见<a href="http://tiankonguse.com/blog/tiankonguse1362321624.html">这里</a><br></div><div>addslashes 函数见<a href="http://tiankonguse.com/blog/tiankonguse1362233316.html">这里</a><br></div><div><span class="Apple-tab-span" style="white-space:pre"><br></span><span class="Apple-tab-span" style="white-space:pre"></span><span class="Apple-tab-span" style="white-space:pre"></span></div>\r\n\r\n\r\n\r\n\r\n', '', ''),
('tiankonguse1362233458', 'tiankonguse', '2013-03-02 14:10:58', 'android笔记之ExpandableListActivity', '<div style="text-align: center;"><span style="font-size: 22px;">android笔记之ExpandableListActivity</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">&nbsp;可以进行数据分组。</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">simpleExpandableListActivity 为 ExpandableListActivity 提供数据。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">1.创建一个activity，继承了ExpandableListActivity。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">2.创建grouplist,然后为grouplist添加childlist,还需要为childlist添加数据。</span></div><div><span style="font-size: 22px;">grouplist中是键值对（map）,childlist中也是键值对（map）</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">3.创建simpleExpandableListActivity。</span></div><div><span style="font-size: 22px;">创建simpleExpandableListActivity时，参数的含义为：</span></div><div><span style="font-size: 22px;">第一个参数：this</span></div><div><span style="font-size: 22px;">第二个参数：grouplist</span></div><div><span style="font-size: 22px;">第三个参数：grouplist里的布局文件</span></div><div><span style="font-size: 22px;">第四个参数：指定grouplist的数据的key</span></div><div><span style="font-size: 22px;">第五个参数：指定grouplist的控件的id</span></div><div><span style="font-size: 22px;">第六个参数：childlist</span></div><div><span style="font-size: 22px;">第七个参数：childlist里的布局文件</span></div><div><span style="font-size: 22px;">第八个参数：指定childlist的数据的key</span></div><div><span style="font-size: 22px;">第九个参数：指定childlist的控件的id</span></div><div><span style="font-size: 22px;">主要的布局文件：</span></div><div><br><pre><code class="xml">&lt;?xml version="1.0" encoding="UTF-8"?&gt;\r\n &lt;LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"\r\n         android:orientation="vertical"\r\n         android:layout_width="fill_parent" \r\n         android:layout_height="fill_parent"\r\n         android:paddingLeft="8dp"\r\n         android:paddingRight="8dp"&gt;\r\n \r\n     &lt;ExpandableListView android:id="@id/android:list"\r\n               android:layout_width="fill_parent" \r\n               android:layout_height="fill_parent"\r\n               android:background="#00FF00"\r\n               android:layout_weight="1"\r\n               android:drawSelectorOnTop="false"/&gt;\r\n \r\n     &lt;TextView android:id="@id/android:empty"\r\n               android:layout_width="fill_parent" \r\n               android:layout_height="fill_parent"\r\n               android:background="#FF0000"\r\n               android:text="No data"/&gt;\r\n &lt;/LinearLayout&gt;</code></pre><br></div><div><span style="font-size: 22px;">grop的布局文件</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><br><pre><code class="xml"> &lt;?xml version="1.0" encoding="utf-8"?&gt;\r\n &lt;LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"\r\n     android:layout_width="fill_parent"\r\n     android:layout_height="fill_parent"\r\n     android:orientation="vertical"&gt;\r\n \r\n     &lt;TextView android:id="@+id/groupTo"\r\n         android:textSize="16sp"\r\n         android:textStyle="bold"\r\n		 android:text="No data"\r\n         android:layout_width="fill_parent"\r\n         android:layout_height="fill_parent"/&gt;\r\n &lt;/LinearLayout&gt;</code></pre><br><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">&nbsp;item的布局文件</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><br><pre><code class="xml">  &lt;?xml version="1.0" encoding="utf-8"?&gt;\r\n &lt;LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"\r\n     android:layout_width="fill_parent"\r\n     android:layout_height="fill_parent"\r\n     android:orientation="vertical"&gt;\r\n \r\n     &lt;TextView android:id="@+id/ChildTo"\r\n         android:textSize="16sp"\r\n         android:textStyle="bold"\r\n		 android:text="No data"\r\n         android:layout_width="fill_parent"\r\n         android:layout_height="fill_parent"/&gt;\r\n &lt;/LinearLayout&gt;\r\n </code></pre><br>\r\n\r\n\r\n\r\n\r\n', '', ''),
('tiankonguse1362233602', 'tiankonguse', '2013-03-02 14:13:22', 'android笔记之DataPicker', '<div style="text-align: center;"><span style="font-size: 22px;">android笔记之DataPicker</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">DatePickerDialog 是一个日期选择对话框。</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">&nbsp;1.声明一个监听器。</span></div><br><pre><code class="java">DatePickerDialog.OnDateSetListener OnDateSetListener=\r\nnew DatePickerDialog.OnDateSetListener(){\r\n	public void onDateSet (\r\n		DatePicker view, //The view associated with this listener.\r\n		int year,        //The year that was set.\r\n		int monthOfYear, //The month that was set (0-11) for compatibility with Calendar.\r\n		int dayOfMonth   //The day of the month that was set.\r\n		){\r\n	}\r\n};</code></pre><br><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">&nbsp;2.复写onCreateDialog(int id)方法。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">&nbsp;3.showDialog()</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">&nbsp;</span></div>\r\n\r\n\r\n\r\n\r\n', '', ''),
('tiankonguse1362234034', 'tiankonguse', '2013-03-02 14:20:34', 'android笔记之AutoComplete', '<div style="text-align: center;"><span style="font-size: 22px;">android笔记之AutoComplete</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">&nbsp;最少两个字符才提示。</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">&nbsp;1.布局文件声明一个AutoCompleteTextView控件。</span></div><br><pre><code class="xml"> &lt;AutoCompleteTextView\r\n	android:id="@+id/autocomplete"\r\n	android:layout_width="fill_parent"\r\n	android:layout_height="wrap_content"\r\n	android:layout_marginLeft="5dp"\r\n /&gt;</code></pre><br><div><span style="font-size: 22px;">&nbsp;</span><span style="font-size: 22px;">&nbsp;2.在布局文件里定义显示item的样式</span></div><br><pre><code class="xml">&lt;?xml version="1.0" encoding="utf-8" ?&gt;\r\n &lt;TextView\r\n	xmlns:android="http://schemas.android.com/apk/res/android"\r\n	android:layout_width="fill_parent"\r\n	android:layout_height="fill_parent"\r\n	android:padding="10dp"\r\n	android:textSize="16sp"\r\n	android:textColor="#000"\r\n &gt;\r\n  &lt;/TextView&gt;</code></pre><div><br></div><div><span style="font-size: 22px;">&nbsp;3.AutoCompleteTextView需要使用ArrayAdapter来提供数据。</span></div><div><br><pre><code class="java"> List&lt;String&gt; list = new ArrayList&lt;String&gt;();\r\nlist.add("test1");\r\nlist.add("test2");\r\n\r\nArrayAdapter&lt;String&gt; arrayAapter = new ArrayAdapter&lt;String&gt;(\r\n	this,\r\n	R.layout.item,\r\n	list);</code></pre></div><div><br></div><div><span style="font-size: 22px;">4.把AutoCompleteTextView与ArrayAdapter联系起来。</span></div><div><br></div><div><pre><code class="java">AutoCompleteTextView.setAdapter(arrayAapter);</code></pre><br></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">&nbsp;</span></div>\r\n\r\n\r\n\r\n\r\n', '', '');
INSERT INTO `tk_blog` (`tk_blog_key`, `tk_blog_user`, `tk_blog_datetime`, `tk_blog_title`, `tk_blog_content`, `tk_blog_password`, `tk_blog_category`) VALUES
('tiankonguse1362234220', 'tiankonguse', '2013-03-02 14:23:40', 'android笔记之AppWidget', '<div style="text-align: center;"><span style="font-size: 22px;">android笔记之AppWidget</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">&nbsp;AppWidget是一个桌面控件，一个独一的进程。</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">&nbsp;AppWidgetProviderInfo对象：为AppWidget提供元数据，包括布局，刷新频率等等数据。</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">&nbsp;AppWidgetProvider：定义了AppWidget的基本声明周期函数。</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">&nbsp;1.定义 AppWidgetProviderInfo对象</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">&nbsp;在res/xml文件夹中新建文件。</span></div><br><pre><code class="xml"> &lt;?xml version="1.0" encoding="utf-8"?&gt;\r\n&lt;appwidget-provider \r\n    xmlns:android="http://schemas.android.com/apk/res/android"\r\n	android:minWidth="294dip"   \r\n	android:minHeight="72dip" \r\n	android:updatePeriodMillis="0"\r\n	android:initialLayout="@layout/tk_example_widget"    \r\n/&gt;</code></pre><div><br></div><div><span style="font-size: 22px;">&nbsp;2.添加一个布局文件。</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">&nbsp;3.实现 AppWidgetProvider的activity，名字 ExampleAppWidgetProvider,继承了AppWidgetProvider</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">&nbsp;实际上我们的应用程序和widget是相互分离的。通过广播传递消息。</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">&nbsp;onUpdate</span></div><div><span style="font-size: 22px;">&nbsp;onDeleted</span></div><div><span style="font-size: 22px;">&nbsp;OnEnabled</span></div><div><span style="font-size: 22px;">&nbsp;onDisabled</span></div><div><span style="font-size: 22px;">&nbsp;onReveice</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">&nbsp;4.在manifest中添加receiver</span></div><br><pre><code class="xml"> &lt;receiver\r\n    android:name=".ExampleAppWidgetProvider"\r\n    android:exported="false"\r\n    android:label="@string/app_name" &gt;\r\n    &lt;intent-filter&gt;\r\n        &lt;action android:name="android.appwidget.action.APPWIDGET_UPDATE" /&gt;\r\n    &lt;/intent-filter&gt;\r\n    &lt;meta-data\r\n        android:name="android.appwidget.provider"\r\n        android:resource="@xml/tk_example_widget" /&gt;\r\n&lt;/receiver&gt;</code></pre><br><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">&nbsp;5.PendingIntent</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">&nbsp;创建PendingIntent的方法</span></div><div><span style="font-size: 22px;"><span class="Apple-tab-span" style="white-space:pre">	</span> getActivity();</span></div><div><span style="font-size: 22px;"><span class="Apple-tab-span" style="white-space:pre">	</span> getBroadcast();</span></div><div><span style="font-size: 22px;"><span class="Apple-tab-span" style="white-space:pre">	</span> getService();</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">&nbsp;6.RemoteViews的作用</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">&nbsp;RemoteViews对象表示了一系列的view对象</span></div><div><span style="font-size: 22px;">&nbsp;RemoteViews所表示的对象运行在另外的进程当中。</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">&nbsp;7.想APP Widget中添加控件</span></div><div><span style="font-size: 22px;">&nbsp;直接在layout中添加相关控件即可。</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">&nbsp;8.为添加的控件添加监听器。</span></div><div><span style="font-size: 22px;">&nbsp;在uodate里</span></div><div><span style="font-size: 22px;"><span class="Apple-tab-span" style="white-space:pre">	</span>appWidgetIds.length为桌面已经添加的控件</span></div><div><br><pre><code class="java">	for (int i = 0; i &lt; appWidgetIds.length; i++) {\r\n		Intent intent = new Intent(context, MainActivity.class);\r\n		//填充intent\r\n		PendingIntent pendingIntent = PendingIntent.getActivity(context, 0, intent, 0);\r\n		//得到remoteViews\r\n		RemoteViews remoteViews = new RemoteViews(context.getPackageName(), R.layout.layout_example_widgetv02);\r\n		//设置监听\r\n		remoteViews.setOnClickPendingIntent(R.id.widgetTextId, pendingIntent);\r\n		//发送消息\r\n		appWidgetManager.updateAppWidget(appWidgetIds[i], remoteViews);\r\n	}</code></pre><br></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">8.接收来自AppWidget的广播。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">在manifest中的receiver中添加intent-filter</span></div><div><br><pre><code class="xml">     &lt;intent-filter&gt;\r\n         &lt;action android:name="com.tiankonguse.appwidget03.action.APPWIDGET_UPDATE" /&gt;\r\n     &lt;/intent-filter&gt;</code></pre><br></div><div><span style="font-size: 22px;"><span class="Apple-tab-span" style="white-space:pre">	</span>&nbsp;</span></div><div><span style="font-size: 22px;">在update中监听相关控件并发送相关action</span></div><div><br><pre><code class="java">	Intent intent = new Intent();\r\n	intent.setAction(UPDATE_ACTION_STRING);\r\n	\r\n	PendingIntent pendingIntent = PendingIntent.getBroadcast(context, 0, intent, 0);\r\n	\r\n	RemoteViews remoteViews = new RemoteViews(context.getPackageName(), R.layout.layout_example_widgetv04);\r\n	remoteViews.setOnClickPendingIntent(R.id.widgetButtonId, pendingIntent);\r\n	\r\n	appWidgetManager.updateAppWidget(appWidgetIds, remoteViews);</code></pre><br></div><div><span style="font-size: 22px;">然后在receive中可以对widget控件进行操作改变</span></div><div><br><pre><code class="java">if(UPDATE_ACTION_STRING.equals(action)){\r\n	RemoteViews remoteViews = new RemoteViews(context.getPackageName(), R.layout.layout_example_widgetv04);\r\n	remoteViews.setTextViewText(R.id.widgetTextId,"new hello");\r\n	\r\n	AppWidgetManager appWidgetManager = AppWidgetManager.getInstance(context);\r\n	\r\n	ComponentName componentName  = new ComponentName(context,ExampleAppWidgetProvider.class);\r\n	appWidgetManager.updateAppWidget(componentName, remoteViews);\r\n\r\n}</code></pre><br></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">&nbsp;</span></div>\r\n\r\n\r\n\r\n\r\n', '', ''),
('tiankonguse1362235084', 'tiankonguse', '2013-03-02 14:38:04', ' How to Create Pop-Up Windows', '<div style="text-align: center;"><span style="font-size: 22px;">&nbsp;How to Create Pop-Up Windows</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">Aaron Boodman, September 19, 2002</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">Forget everything you know about creating pop-up windows. Most importantly, forget you ever knew that the javascript pseudo-protocol ever existed. Do you hear me??</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">Never, ever, ever use the javascript: pseudo-protocol for anything, ever ever ever ever again. Please. Pretty please. The next time I click on a hyperlink, only to have it cause an error in my browser, I am going to hunt down the author and pound them into holy oblivion. I''m not joking - I will kill someone. Maybe two... Perhaps an entire company-full.</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">Now that I''ve made my rage apparent, let me explain myself. This is not a holier-than-thou request to use web standards. This is not a hope for accessibility. This is a demand for my right as a web citizen to be able to click on hyperlinks without receiving javascript errors.</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">For the laggards in the audience, this is how it happens. I am reading an article, lets say about the newest fangled advances in technology, here. It has a link to a piece of code, which I am interested in. But I don''t want to lose my place in the article. So what do I do? I right-click, and select "open in new window".</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">But you, evil web author from the depths of hell, have anticipated my desire. You guessed that I might want this resource opened in a new window. Unfortunately for me, you are dim-witted enough to consider but one possibility: that I will click normally on the link, encounter a pop-up window, and marvel at your ingenuity.</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">You do not consider, for instance, that I may right-click on the link, as I do habitually when I want to read content in a new window. You do not consider that I may wish to bookmark this link and read it later. Nor do you consider that I may attempt to print the contents of this link, drag it to my desktop, or put it in my favorites bar.</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">Nope. In you complete, utter, and hopefully *not* hopeless idiocy, you consider but one possibility. In doing so, you and all of your ilk ban me to a life of javascript errors and blank windows. You cause me and others like me a web experience filled with frustration.</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">I hate you. I despise you. I wish for your sudden and excruciating death with every ounce of my being every single time I click one of your god-forsaken pretend hyperlinks. I swear to all the Gods in all the religions, that the next time this happens to me, somebody will pay. Oh yes. Somebody will be sorry.</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">Save yourself! Before it''s too late. Change all your popup window scripts to the following format:</span></div><div><br><pre><code class="xml">&lt;a href="http://google.com/" \r\n   onclick="window.open(this.href, ''popupwindow'', width=400,height=300,scrollbars,resizable'');\r\n            return false;"&gt;\r\n  Click me any way you desire, now or later, bookmarked or not. \r\n  I will not attempt to control you, nor punish you, for I am a \r\n  simple hyperlink; eager to do your bidding, while remaining ever \r\n  helpful. I anticipating desires, but never trample possibilities. \r\n  This is the way of the Link.\r\n&lt;/a&gt;</code></pre><br></div><div><span style="font-size: 22px;">Example</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">See how wonderful that is?? I can bookmark it, I can favorit-ize it. I can left click, I can right click. I can do all the things that an enlightened person might wish to do to a hyperlink. And if I do the default thing, you (ever so helpful author), anticipate my need for a popup without defiling my RIGHT to do whatever else I may want.</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">Please. Please!!! PLEASE. I don''t want to hurt you.</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">But I will.</span></div>\r\n\r\n\r\n\r\n\r\n', '', ''),
('tiankonguse1362304355', 'tiankonguse', '2013-03-03 09:52:35', '搜索引擎发展史', '<div style="text-align: center;"><span style="font-size: 22px;">搜索引擎发展史</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">原文来自</span><font color="#434545" face="Arial" size="5"><span style="line-height: 18.65625px; text-align: -webkit-center; background-color: rgb(247, 247, 247);"><a href="http://www.se-express.com/about/about.htm">搜索引擎发展历史</a></span></font><span style="color: rgb(67, 69, 69); font-family: Arial; font-size: 12px; line-height: 18.65625px; text-align: -webkit-center; background-color: rgb(247, 247, 247);">&nbsp;</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">在互联网发展初期，网站相对较少，信息查找比较容易。然而伴随互联网爆炸性的发展，普通网络用户想找到所需的资料简直如同大海捞针，这时为满足大众信息检索需求的专业搜索网站便应运而生了。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">现代意义上的搜索引擎的祖先，是1990年由蒙特利尔大学学生Alan Emtage发明的Archie。虽然当时World Wide Web还未出现，但网络中文件传输还是相当频繁的，而且由于大量的文件散布在各个分散的FTP主机中，查询起来非常不便，因此Alan Emtage想到了开发一个可以以文件名查找文件的系统，于是便有了Archie。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">Archie工作原理与现在的搜索引擎已经很接近，它依靠脚本程序自动搜索网上的文件，然后对有关信息进行索引，供使用者以一定的表达式查询。由于Archie深受用户欢迎，受其启发，美国内华达System Computing Services大学于1993年开发了另一个与之非常相似的搜索工具，不过此时的搜索工具除了索引文件外，已能检索网页。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">当时，“机器人”一词在编程者中十分流行。电脑“机器人”（Computer Robot）是指某个能以人类无法达到的速度不间断地执行某项任务的软件程序。由于专门用于检索信息的“机器人”程序象蜘蛛一样在网络间爬来爬去，因此，搜索引擎的“机器人”程序就被称为“蜘蛛”程序。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">世界上第一个用于监测互联网发展规模的“机器人”程序是Matthew Gray开发的World wide Web Wanderer。刚开始它只用来统计互联网上的服务器数量，后来则发展为能够检索网站域名。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">与Wanderer相对应，Martin Koster于1993年10月创建了ALIWEB，它是Archie的HTTP版本。ALIWEB不使用“机器人”程序，而是靠网站主动提交信息来建立自己的链接索引，类似于现在我们熟知的Yahoo。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">随着互联网的迅速发展，使得检索所有新出现的网页变得越来越困难，因此，在Matthew Gray的Wanderer基础上，一些编程者将传统的“蜘蛛”程序工作原理作了些改进。其设想是，既然所有网页都可能有连向其他网站的链接，那么从跟踪一个网站的链接开始，就有可能检索整个互联网。到1993年底，一些基于此原理的搜索引擎开始纷纷涌现，其中以JumpStation、The World Wide Web Worm（Goto的前身，也就是今天Overture），和Repository-Based Software Engineering (RBSE) spider最负盛名。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">然而JumpStation和WWW Worm只是以搜索工具在数据库中找到匹配信息的先后次序排列搜索结果，因此毫无信息关联度可言。而RBSE是第一个在搜索结果排列中引入关键字串匹配程度概念的引擎。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">最早现代意义上的搜索引擎出现于1994年7月。当时Michael Mauldin将John Leavitt的蜘蛛程序接入到其索引程序中，创建了大家现在熟知的Lycos。同年4月，斯坦福（Stanford）大学的两名博士生，David Filo和美籍华人杨致远（Gerry Yang）共同创办了超级目录索引Yahoo，并成功地使搜索引擎的概念深入人心。从此搜索引擎进入了高速发展时期。目前，互联网上有名有姓的搜索引擎已达数百家，其检索的信息量也与从前不可同日而语。比如最近风头正劲的Google，其数据库中存放的网页已达30亿之巨！</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">随着互联网规模的急剧膨胀，一家搜索引擎光靠自己单打独斗已无法适应目前的市场状况，因此现在搜索引擎之间开始出现了分工协作，并有了专业的搜索引擎技术和搜索数据库服务提供商。象国外的Inktomi（已被Yahoo收购），它本身并不是直接面向用户的搜索引擎，但向包括Overture（原GoTo，已被Yahoo收购）、LookSmart、MSN、HotBot等在内的其他搜索引擎提供全文网页搜索服务。国内的百度也属于这一类（注1），搜狐和新浪用的就是它的技术（注2）。因此从这个意义上说，它们是搜索引擎的搜索引擎。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">（注1）：百度已于2001年9月开始提供公共搜索服务。</span></div><div><span style="font-size: 22px;">（注2）：搜狐二级网页搜索现已改为中搜的引擎，而新浪则已转用Google的搜索结果。</span></div>\r\n\r\n\r\n\r\n\r\n', '', ''),
('tiankonguse1362304463', 'tiankonguse', '2013-03-03 09:54:23', '搜 索 引 擎 分 类', '<div style="text-align: center;"><span style="font-size: 22px;">搜 索 引 擎 分 类</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">原文来自 <a href="http://www.se-express.com/about/about1.htm">搜 索 引 擎 分 类</a></span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">　搜索引擎按其工作方式主要可分为三种，分别是全文搜索引擎（Full Text Search Engine）、目录索引类搜索引擎（Search Index/Directory）和元搜索引擎（Meta Search Engine）。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">　■ 全文搜索引擎</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">　　全文搜索引擎是名副其实的搜索引擎，国外具代表性的有Google、Fast/AllTheWeb、AltaVista、Inktomi、Teoma、WiseNut等，国内著名的有百度（Baidu）。它们都是通过从互联网上提取的各个网站的信息（以网页文字为主）而建立的数据库中，检索与用户查询条件匹配的相关记录，然后按一定的排列顺序将结果返回给用户，因此他们是真正的搜索引擎。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">　　从搜索结果来源的角度，全文搜索引擎又可细分为两种，一种是拥有自己的检索程序（Indexer），俗称“蜘蛛”（Spider）程序或“机器人”（Robot）程序，并自建网页数据库，搜索结果直接从自身的数据库中调用，如上面提到的7家引擎；另一种则是租用其他引擎的数据库，并按自定的格式排列搜索结果，如Lycos引擎。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">■ 目录索引</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">　　目录索引虽然有搜索功能，但在严格意义上算不上是真正的搜索引擎，仅仅是按目录分类的网站链接列表而已。用户完全可以不用进行关键词（Keywords）查询，仅靠分类目录也可找到需要的信息。目录索引中最具代表性的莫过于大名鼎鼎的Yahoo雅虎。其他著名的还有Open Directory Project（DMOZ）、LookSmart、About等。国内的搜狐、新浪、网易搜索也都属于这一类。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">■ 元搜索引擎 (META Search Engine)</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">　　元搜索引擎在接受用户查询请求时，同时在其他多个引擎上进行搜索，并将结果返回给用户。著名的元搜索引擎有InfoSpace、Dogpile、Vivisimo等（元搜索引擎列表），中文元搜索引擎中具代表性的有搜星搜索引擎。在搜索结果排列方面，有的直接按来源引擎排列搜索结果，如Dogpile，有的则按自定的规则将结果重新排列组合，如Vivisimo。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">　　除上述三大类引擎外，还有以下几种非主流形式：</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">　　1、集合式搜索引擎：如HotBot在2002年底推出的引擎。该引擎类似META搜索引擎，但区别在于不是同时调用多个引擎进行搜索，而是由用户从提供的4个引擎当中选择，因此叫它“集合式”搜索引擎更确切些。</span></div><div><span style="font-size: 22px;">　　2、门户搜索引擎：如AOL Search、MSN Search等虽然提供搜索服务，但自身即没有分类目录也没有网页数据库，其搜索结果完全来自其他引擎。</span></div><div><span style="font-size: 22px;">　　3、免费链接列表（Free For All Links，简称FFA）：这类网站一般只简单地滚动排列链接条目，少部分有简单的分类目录，不过规模比起Yahoo等目录索引来要小得多。　　</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">　　由于上述网站都为用户提供搜索查询服务，为方便起见，我们通常将其统称为搜索引擎。</span></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><br></div>\r\n\r\n\r\n\r\n\r\n', '', ''),
('tiankonguse1362304583', 'tiankonguse', '2013-03-03 09:56:23', '搜索引擎基本工作原理', '<div style="text-align: center;"><span style="font-size: 22px;">搜索引擎基本工作原理</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">原文来自 <a href="http://www.se-express.com/about/about2.htm">搜索引擎基本工作原理</a></span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">了解搜索引擎的工作原理对我们日常搜索应用和网站提交推广都会有很大帮助。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">........................................................................................</span></div><div><span style="font-size: 22px;">　■ 全文搜索引擎</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">　　在搜索引擎分类部分我们提到过全文搜索引擎从网站提取信息建立网页数据库的概念。搜索引擎的自动信息搜集功能分两种。一种是定期搜索，即每隔一段时间（比如Google一般是28天），搜索引擎主动派出“蜘蛛”程序，对一定IP地址范围内的互联网站进行检索，一旦发现新的网站，它会自动提取网站的信息和网址加入自己的数据库。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">　　另一种是提交网站搜索，即网站拥有者主动向搜索引擎提交网址，它在一定时间内（2天到数月不等）定向向你的网站派出“蜘蛛”程序，扫描你的网站并将有关信息存入数据库，以备用户查询。由于近年来搜索引擎索引规则发生了很大变化，主动提交网址并不保证你的网站能进入搜索引擎数据库，因此目前最好的办法是多获得一些外部链接，让搜索引擎有更多机会找到你并自动将你的网站收录。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">　　当用户以关键词查找信息时，搜索引擎会在数据库中进行搜寻，如果找到与用户要求内容相符的网站，便采用特殊的算法——通常根据网页中关键词的匹配程度，出现的位置/频次，链接质量等——计算出各网页的相关度及排名等级，然后根据关联度高低，按顺序将这些网页链接返回给用户。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">........................................................................................</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">　■ 目录索引</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">　　与全文搜索引擎相比，目录索引有许多不同之处。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">　　首先，搜索引擎属于自动网站检索，而目录索引则完全依赖手工操作。用户提交网站后，目录编辑人员会亲自浏览你的网站，然后根据一套自定的评判标准甚至编辑人员的主观印象，决定是否接纳你的网站。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">　　其次，搜索引擎收录网站时，只要网站本身没有违反有关的规则，一般都能登录成功。而目录索引对网站的要求则高得多，有时即使登录多次也不一定成功。尤其象Yahoo!这样的超级索引，登录更是困难。（由于登录Yahoo!的难度最大，而它又是商家网络营销必争之地，所以我们会在后面用专门的篇幅介绍登录Yahoo雅虎的技巧）</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">　　此外，在登录搜索引擎时，我们一般不用考虑网站的分类问题，而登录目录索引时则必须将网站放在一个最合适的目录（Directory）。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">　　最后，搜索引擎中各网站的有关信息都是从用户网页中自动提取的，所以用户的角度看，我们拥有更多的自主权；而目录索引则要求必须手工另外填写网站信息，而且还有各种各样的限制。更有甚者，如果工作人员认为你提交网站的目录、网站信息不合适，他可以随时对其进行调整，当然事先是不会和你商量的。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">　　目录索引，顾名思义就是将网站分门别类地存放在相应的目录中，因此用户在查询信息时，可选择关键词搜索，也可按分类目录逐层查找。如以关键词搜索，返回的结果跟搜索引擎一样，也是根据信息关联程度排列网站，只不过其中人为因素要多一些。如果按分层目录查找，某一目录中网站的排名则是由标题字母的先后顺序决定（也有例外）。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">　　目前，搜索引擎与目录索引有相互融合渗透的趋势。原来一些纯粹的全文搜索引擎现在也提供目录搜索，如Google就借用Open Directory目录提供分类查询。而象 Yahoo! 这些老牌目录索引则通过与Google等搜索引擎合作扩大搜索范围（注）。在默认搜索模式下，一些目录类搜索引擎首先返回的是自己目录中匹配的网站，如国内搜狐、新浪、网易等；而另外一些则默认的是网页搜索，如Yahoo。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">　　（注）：Yahoo已于2004年2月正式推出自己的全文搜索引擎，并结束了与Google的合作。</span></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><br></div>\r\n\r\n\r\n\r\n\r\n', '', ''),
('tiankonguse1362321310', 'tiankonguse', '2013-03-03 14:35:10', 'php函数之mysql_real_escape_string', '<div style="color: rgb(0, 0, 0); font-size: 22px; text-align: center;"><span style="font-size: 22px;">php函数之mysql_real_escape_string</span></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><span style="font-size: 22px;"><br></span></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><span style="color: rgb(68, 68, 68); line-height: 1.333;">php 中已经有 addslashes 函数了，把一些特殊字符转义，但是这些字符只有单引号（''）、双引号（"）、反斜线（\\）与 NUL（NULL 字符）。其他的特殊字符并不能转义。</span><br></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><span style="font-size: 22px;"><br></span></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><span style="font-size: 22px;">如果把 addslashes 转义的字符存入字符串，当从字符串取出来时使用有很多问题。</span></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><span style="font-size: 22px;"><br></span></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><span style="font-size: 22px;">这就是 mysql_real_escape_string 函数的好处。转义后存入数据库，取出后可以直接使用。</span></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><br><pre><code class="php">string mysql_real_escape_string ( string unescaped_string [, resource link_identifier] )</code></pre><br></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><span style="font-size: 22px;"><br></span></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><span style="font-size: 22px;">本函数将 unescaped_string 中的特殊字符转义，并计及连接的当前字符集，因此可以安全用于 mysql_query()。&nbsp;</span></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><span style="font-size: 22px;"><br></span></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><span style="font-size: 22px;">提示：mysql_real_escape_string() 并不转义 % 和 _。&nbsp;</span></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><br></div><div style="color: rgb(0, 0, 0); font-size: 22px;">注：</div><div style="color: rgb(0, 0, 0); font-size: 22px;"><span style="color: rgb(68, 68, 68); line-height: 1.333;"><span class="Apple-tab-span" style="white-space:pre">	</span>addslashes</span><span style="color: rgb(68, 68, 68); line-height: 1.333;">&nbsp;</span>函数见<a href="http://tiankonguse.com/blog/tiankonguse1362233316.html">这里</a><br></div><div><span class="Apple-tab-span" style="white-space: pre;"><font color="#000000">	<span style="white-space: normal;">mysql_escape_string 函数见<a href="http://tiankonguse.com/blog/tiankonguse1362321624.html">这里</a></span></font></span></div>\r\n\r\n\r\n\r\n\r\n', '', ''),
('tiankonguse1362321624', 'tiankonguse', '2013-03-03 14:40:24', 'php 函数之 mysql_escape_string', '<div style="text-align: center;"><span style="font-size: 22px;">php 函数之 mysql_escape_string</span></div><div><span style="font-size: 22px;"><br></span></div><div><br><pre><code class="cpp">string mysql_escape_string ( string unescaped_string )</code></pre><br></div><div><span style="font-size: 22px;"><span class="Apple-tab-span" style="white-space:pre">	</span> &nbsp;</span></div><div><span style="font-size: 22px;">函数将 unescaped_string 转义，使之可以安全用于 mysql_query()。&nbsp;</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">提示：本函数和 mysql_real_escape_string() 完全一样，除了 mysql_real_escape_string() 接受的是一个连接句柄并根据当前字符集转移字符串之外。</span></div><div><span style="font-size: 22px;">&nbsp; &nbsp; &nbsp; mysql_escape_string() 并不接受连接参数，也不管当前字符集设定。&nbsp;</span></div><div><span style="font-size: 22px;"><br></span></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><div style="background-color: rgba(243, 243, 243, 0.54902);">注：</div><div style="color: rgb(35, 35, 35); background-color: rgba(243, 243, 243, 0.54902);"><font color="#000000">mysql_escape_string 函数见<a href="http://tiankonguse.com/blog/tiankonguse1362321624.html">这里</a></font></div><div style="color: rgb(35, 35, 35); background-color: rgba(243, 243, 243, 0.54902);"><span style="line-height: 1.333;">get_magic_quotes_gpc 函数见</span><a href="http://tiankonguse.com/blog/tiankonguse1362322109.html" style="line-height: 1.333;">这里</a></div><div style="color: rgb(35, 35, 35); background-color: rgba(243, 243, 243, 0.54902);">mysql_escape_string 函数见<a href="http://tiankonguse.com/blog/tiankonguse1362321624.html">这里</a><br></div><div style="color: rgb(35, 35, 35); background-color: rgba(243, 243, 243, 0.54902);">addslashes 函数见<a href="http://tiankonguse.com/blog/tiankonguse1362233316.html">这里</a></div></div>\r\n\r\n\r\n\r\n\r\n', '', ''),
('tiankonguse1362321981', 'tiankonguse', '2013-03-03 14:46:21', 'android 学习之 Creating The First Android Projec', '<div style="text-align: center;"><span style="font-size: 22px;">Creating The First Android Project</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">&nbsp; An Android project contains all the files that comprise the source code for your Android app. The Android SDK tools make it easy to start a new Android project with a set of default project directories and files.</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">Note: You should already have the Android SDK installed, and if you''re using Eclipse, you should have installed the ADT plugin as well. If you have not installed these, see Installing the Android SDK and return here when you''ve completed the installation.</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;"><b>Create a Project with Eclipse</b></span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">1.In Eclipse, select File &gt; New &gt; Project. The resulting dialog should have a folder labeled Android. (If you don’t see the Android folder, then you have not installed the ADT plugin—see Installing the ADT Plugin).</span></div><div><span style="font-size: 22px;">2.Open the Android folder, select Android Project and click Next.</span></div><div><span style="font-size: 22px;">3.Enter a project name (such as "MyFirstApp") and click Next.</span></div><div><span style="font-size: 22px;">4.Select a build target. This is the platform version against which you will compile your app.</span></div><div><span style="font-size: 22px;">5.Specify other app details, such as the:</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">&nbsp; &nbsp; Application Name: The app name that appears to the user. Enter "My First App".</span></div><div><span style="font-size: 22px;">&nbsp; &nbsp; Package Name: The package namespace for your app (following the same rules as packages in the Java programming language). Your package name must be unique across all packages installed on the Android system. For this reason, it''s important that you use a standard domain-style package name that’s appropriate to your company or publisher entity. For your first app, you can use something like "com.example.myapp." However, you cannot publish your app using the "com.example" namespace.</span></div><div><span style="font-size: 22px;">&nbsp; &nbsp; Create Activity: This is the class name for the primary user activity in your app (an activity represents a single screen in your app). Enter "MyFirstActivity".</span></div><div><span style="font-size: 22px;">&nbsp; &nbsp; Minimum SDK: Select 4 (Android 1.6).</span></div><div><span style="font-size: 22px;">6.Click Finish.</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">Your Android project is now set up with some default files and you’re ready to begin building the app.</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;"><b>Create a Project with Command Line Tools</b></span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">If you''re not using the Eclipse IDE with the ADT plugin, you can instead create your project using the SDK tools in a command line:</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">&nbsp; &nbsp; Change directories into the Android SDK’s tools/ path.</span></div><div><span style="font-size: 22px;">&nbsp; &nbsp;&nbsp;</span></div><div><span style="font-size: 22px;"><span class="Apple-tab-span" style="white-space:pre">	</span>Execute: android list targets</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">&nbsp; &nbsp; This prints a list of the available Android platforms that you’ve downloaded for your SDK. Find the platform against which you want to compile your app. Make a note of the target id. We recommend that you select the highest version possible. You can still build your app to support older versions, but setting the build target to the latest version allows you to optimize your app for the latest devices.</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">&nbsp; &nbsp; Execute:</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">&nbsp; &nbsp; android create project --target &lt;target-id&gt; --name MyFirstApp --path &lt;path-to-workspace&gt;/MyFirstApp --activity MyFirstActivity --package com.example.myapp</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">&nbsp; &nbsp; Replace &lt;target-id&gt; with an id from the list of targets (from the previous step) and replace &lt;path-to-workspace&gt; with the location in which you want to save your Android projects.</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">Your Android project is now set up with several default configurations and you’re ready to begin building the app. &nbsp;</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">Tip: Add the platform-tools/ as well as the tools/ directory to your PATH environment variable.</span></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><br></div>\r\n\r\n\r\n\r\n\r\n', '', ''),
('tiankonguse1362322109', 'tiankonguse', '2013-03-03 14:48:29', 'php函数之 get_magic_quotes_gpc', '<div style="text-align: center;"><span style="font-size: 22px;">php函数之 get_magic_quotes_gpc</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;"><br></span></div><div><br><pre><code class="cpp">long get_magic_quotes_gpc(void); </code></pre><br></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">获取当前 magic_quotes_gpc (GPC, Get/Post/Cookie)的配置选项设置。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">返回 0 表示关闭本功能；返回 1 表示本功能打开。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">当 magic_quotes_gpc 打开时，所有的 '' (单引号), " (双引号), \\ (反斜线) and 空字符会自动转为含有反斜线的溢出字符。&nbsp;</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">提示：5.4.0 始终返回 FALSE，因为这个魔术引号功能已经从 PHP 中移除了。 &nbsp;</span></div><div><span style="font-size: 22px;">&nbsp; &nbsp; &nbsp; 因此必须自己进行字符转义。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;"><br></span></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><div style="background-color: rgba(243, 243, 243, 0.54902);">注：</div><div style="color: rgb(35, 35, 35); background-color: rgba(243, 243, 243, 0.54902);"><font color="#000000">mysql_escape_string 函数见<a href="http://tiankonguse.com/blog/tiankonguse1362321624.html">这里</a></font></div><div style="color: rgb(35, 35, 35); background-color: rgba(243, 243, 243, 0.54902);"><span style="line-height: 1.333;">get_magic_quotes_gpc 函数见</span><a href="http://tiankonguse.com/blog/tiankonguse1362322109.html" style="line-height: 1.333;">这里</a></div><div style="color: rgb(35, 35, 35); background-color: rgba(243, 243, 243, 0.54902);">mysql_escape_string 函数见<a href="http://tiankonguse.com/blog/tiankonguse1362321624.html">这里</a><br></div><div style="color: rgb(35, 35, 35); background-color: rgba(243, 243, 243, 0.54902);">addslashes 函数见<a href="http://tiankonguse.com/blog/tiankonguse1362233316.html">这里</a></div></div>\r\n\r\n\r\n\r\n\r\n', '', ''),
('tiankonguse1362322228', 'tiankonguse', '2013-03-03 14:50:28', 'Android Project directories', '<div style="text-align: center;"><span style="font-size: 22px;">Android Project directories</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">AndroidManifest.xml</span></div><div><span style="font-size: 22px;"><span class="Apple-tab-span" style="white-space:pre">	</span>This manifest file describes the fundamental characteristics of the app and defines each of its components. You''ll learn about various declarations in this file as you read more training classes.</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">src/</span></div><div><span style="font-size: 22px;">&nbsp; &nbsp; Directory for your app''s main source files. By default, it includes an Activity class that runs when your app is launched using the app icon.</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">res/</span></div><div><span style="font-size: 22px;">&nbsp; &nbsp; Contains several sub-directories for app resources. Here are just a few:</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">drawable-hdpi/</span></div><div><span style="font-size: 22px;"><span class="Apple-tab-span" style="white-space:pre">	</span>Directory for drawable objects (such as bitmaps) that are designed for high-density (hdpi) screens. Other drawable directories contain assets designed for other screen densities.</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">layout/</span></div><div><span style="font-size: 22px;"><span class="Apple-tab-span" style="white-space:pre">	</span>Directory for files that define your app''s user interface.</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">values/</span></div><div><span style="font-size: 22px;"><span class="Apple-tab-span" style="white-space:pre">	</span>Directory for other various XML files that contain a collection of resources, such as string and color definitions.</span></div><div><span style="font-size: 22px;"><br></span></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><br></div>\r\n\r\n\r\n\r\n\r\n', '', '');
INSERT INTO `tk_blog` (`tk_blog_key`, `tk_blog_user`, `tk_blog_datetime`, `tk_blog_title`, `tk_blog_content`, `tk_blog_password`, `tk_blog_category`) VALUES
('tiankonguse1362350909', 'tiankonguse', '2013-03-03 22:48:29', 'javascrip 中括号的含义(大括号、中括号、小括号)', '<div style="text-align: center;"><span style="font-size: 22px;">javascrip 中括号的含义(大括号、中括号、小括号)</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">本文包括 javascript 中大括号的含义、javascript 中中括号的含义、javascript 中小括号的含义、。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">这篇讲解的比较简单，以后还会写一篇详细的关于 javascript 的括号的含义。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">首先说明两点：</span></div><div><span style="font-size: 22px;">1.对于 javascrip 函数，不调用是不会执行的。调用方法是指向函数的变量（函数名也是指向函数的变量）加小括号。</span></div><div><span style="font-size: 22px;">2.声明一个函数时，有个返回值。返回值指向那个函数。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">我们在一些 javascrip 代码中经常可以看到这样的用法 ：</span></div><div><span style="font-size: 22px;">(function(){})();</span></div><div><span style="font-size: 22px;">那这些括号是做什么用的呢？</span></div><div><span style="font-size: 22px;">下面我们来测试一下就知道了</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">1.</span></div><br><pre><code class="javascript">(function(){alert(''tiankonguse'');});</code></pre><br><div><span style="font-size: 22px;">运行后，没有反映</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">2.</span></div><br><pre><code class="javascript">(function(){alert(''tiankonguse'');})();</code></pre><br><div><span style="font-size: 22px;">运行后，弹出 tiankonguse</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">3.</span></div><br><pre><code class="javascript">(function(){alert(''tiankonguse one'');})(alert(''tiankonguse two''));</code></pre><br><div><span style="font-size: 22px;">运行后，先弹出tiankonguse two,再弹出tiankonguse one。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">4.</span></div><br><pre><code class="javascript">(function(){alert(''tiankonguse one'');})(alert(''tiankonguse two''););</code></pre><br><div><span style="font-size: 22px;">出错，什么也不运行。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">我们从第二个可以看出，第一个括号中的匿名函数执行了，说明第二个括号是用于执行操作，这和我们调用函数的用法一样。</span></div><div><span style="font-size: 22px;">比如定义了一个function a(){};我们调用a这个函数是 a();</span></div><div><span style="font-size: 22px;">那么a就和这个例子中的第一个括号代表的意思相同，是一个函数体，只是没有名字，我们也叫他匿名函数。</span></div><div><span style="font-size: 22px;">第三个代码中先弹 tiankonguse two，说明alert(''tiankonguse two'')是先执行，这个是做为第一个括号的函数的参数来运行了,如果给参数后加分号，当然就出错了，所以第四个代码就不运行了。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">一、{ } 大括号，表示定义一个对象，大部分情况下要有成对的属性和值，或是函数。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">如：</span></div><br><pre><code class="javascript">var LangShen = {"Name":"Langshen","AGE":"28"};</code></pre><br><div><span style="font-size: 22px;">上面声明了一个名为“LangShen”的对象，多个属性或函数用,（逗号）隔开.</span></div><div><span style="font-size: 22px;">因为是对象的属性，所以访问时，应该用.（点）来层层访问：LangShen.Name、LangShen.AGE，当然我们也可以用数组的方式来访问，如：LangShen["Name"]、LangShen["AGE"]，结果是一样的。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">该写法，在JSON数据结构中经常用，除此之外，我们平时写函数组的时候，也经常用到，如：</span></div><div><br><pre><code class="javascript">var LangShen = {\r\n	Name = function(){\r\n		return "LangShen";\r\n	},\r\n	Age = function(){\r\n		return "28";\r\n	}\r\n}</code></pre><br></div><div><span style="font-size: 22px;">调用方式差不多，因为是函数组，所以要加上()，如：alert( LangShen.Name() );</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">二、[ ]中括号，表示一个数组，也可以理解为一个数组对象。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">如：</span></div><br><pre><code class="javascript">var LangShen = [ "Name","LangShen","AGE","28" ];</code></pre><br><div><span style="font-size: 22px;">很明显，每个值或函数，都是独立的，多个值之间只用,（逗号）隔开.</span></div><div><span style="font-size: 22px;">因为是数组对象，所以它等于：</span></div><br><pre><code class="javascript">var LangShen = Array( "Name","LangShen","AGE","28" );</code></pre><br><div><span style="font-size: 22px;">访问时，也是和数组一样，alert( LangShen[0] );</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">三、{ } 和[ ] 一起使用，我们前面说到，{ } 是一个对象，[ ] 是一个数组，我们可以组成一个对象数组</span></div><div><span style="font-size: 22px;"><br></span></div><div><br><pre><code class="javascript">如：\r\nvar LangShen = {\r\n	"Name":"Langshen",\r\n	"MyWife":[ "LuLu","26" ],\r\n	"MySon":[{"Name":"Son1"},{"Name":"Son2"},{"Name":"Son3"}]\r\n}</code></pre><br></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">从上面的结构来看，那个对象里面的第一项是个属性，第二项是一个数组，第三个是包含有多个对象的数组。</span></div><div><span style="font-size: 22px;">调用起来，也是一层一层访问，对象的属性用.（点）叠加，数组用 [下标] 来访问。</span></div><div><span style="font-size: 22px;">如：alert( LangShen.MySon[1].Name ) ;</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">再来一遍吧！</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">一、大括号｛｝表示对象：</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">javascript供了另外一种简单的方式来创建对象，即大括号（{}）语法：</span></div><div><br><pre><code class="javascript">arr = {\r\n	a:5, //对象属性，a是变量名\r\n	b:8,\r\n	c:function(){return this.a + this.b;}, //对象方法\r\n	d:[''a'':1,''b'':2] //对象属性，数组\r\n}</code></pre><br></div><div><span style="font-size: 22px;">通过大括号括住多个属性或方法及其定义（这些属性或方法用逗号隔开），来实现对象的定义，这段代码就直接定义个了具有n个属性或方法的对象，其中属性名和其定义之间用冒号（:）隔开。</span></div><div><br><pre><code class="javascript">document.write(arr.c());</code></pre><br></div><div><span style="font-size: 22px;">注意，各属性间用逗号（,）隔开。</span></div><div><span style="font-size: 22px;">使用这种方式来定义对象，还可以使用字符串作为属性（方法）名，例如：</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">var obj={“001”:”abc”}</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">因为这种简单对象没有通过构造函数创造所以也就没能在对象外添加方法。</span></div><div><span style="font-size: 22px;">对比构造函数创造的对象：</span></div><div><br><pre><code class="javascript">function Test(a,b){\r\n	this.a = a;\r\n	this.b = b;\r\n	this.c = function(){return this.a + this.b;}\r\n}\r\nTest.prototype.d = function another(){\r\n	return this.a * this.b * Math.PI;\r\n};\r\narr = new Test(5,8);\r\ndocument.write(arr.c());\r\n\r\n//输出：13\r\n\r\ndocument.write(arr.d());\r\n\r\n//输出：125.66370614359172</code></pre><br></div><div><span style="font-size: 22px;">二、中括号 [ ] 表示数组：</span></div><div><br><pre><code class="javascript">arr = [\r\n	[1,2], //数组\r\n	[''a'',''b''],\r\n	[{c:''a1'',d:''b1''},{e:''a2'',f:''b2''}] //对象\r\n];\r\nfor(key in arr){\r\n	for(chikey in arr[key]){\r\n		document.write(chikey + "=&gt;" + arr[key][chikey] + "&lt;br /&gt;");\r\n	}\r\n}\r\n/*\r\n输出：\r\n0=&gt;1\r\n1=&gt;2\r\n0=&gt;a\r\n1=&gt;b\r\n0=&gt;[object Object]\r\n1=&gt;[object Object]\r\n*/\r\n\r\ndocument.write(arr[2][1].e);\r\n\r\n//输出：a2</code></pre><br></div><div><span style="font-size: 22px;">这里，数组的第三组是未命名的对象，可以用arr[2][1].e的方式指定访问属性。当然也可以遍历：</span></div><div><br><pre><code class="javascript">for(key in arr[2]){\r\n	for(val in arr[2][key]){\r\n		document.write(val + "=&gt;" + arr[2][key][val] + "&lt;br /&gt;");\r\n	}\r\n}\r\n/*\r\n输出：\r\nc=&gt;a1\r\nd=&gt;b1\r\ne=&gt;a2\r\nf=&gt;b2\r\n*/</code></pre><br></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">三、数组与对象</span></div><div><span style="font-size: 22px;">在js中，上述的对象与数组的创建很相似，有人称第一种方式为js的关联数组。</span></div>\r\n\r\n\r\n\r\n\r\n', '', ''),
('tiankonguse1362383915', 'tiankonguse', '2013-03-04 07:58:35', '配置htaccess文件之自定义错误页面', '<div style="text-align: center;"><span style="font-size: 22px;">配置htaccess文件之自定义错误页面</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">#规则： ErrorDocument 错误代码 显示网页</span></div><div><span style="font-size: 22px;">#例如： ErrorDocument 400 /404.html</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">#一下是错误代码：</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">#400<span class="Apple-tab-span" style="white-space:pre">	</span>错误的请求<span class="Apple-tab-span" style="white-space:pre">	</span></span></div><div><span style="font-size: 22px;">#401<span class="Apple-tab-span" style="white-space:pre">	</span>认证失败<span class="Apple-tab-span" style="white-space:pre">	</span></span></div><div><span style="font-size: 22px;">#402<span class="Apple-tab-span" style="white-space:pre">	</span>需要付费<span class="Apple-tab-span" style="white-space:pre">	</span></span></div><div><span style="font-size: 22px;">#403<span class="Apple-tab-span" style="white-space:pre">	</span>禁止访问(Forbidden)<span class="Apple-tab-span" style="white-space:pre">	</span></span></div><div><span style="font-size: 22px;">#404<span class="Apple-tab-span" style="white-space:pre">	</span>未找到(Not Found)<span class="Apple-tab-span" style="white-space:pre">	</span></span></div><div><span style="font-size: 22px;">#405<span class="Apple-tab-span" style="white-space:pre">	</span>方法不允许<span class="Apple-tab-span" style="white-space:pre">	</span></span></div><div><span style="font-size: 22px;">#406<span class="Apple-tab-span" style="white-space:pre">	</span>不可接受<span class="Apple-tab-span" style="white-space:pre">	</span></span></div><div><span style="font-size: 22px;">#407<span class="Apple-tab-span" style="white-space:pre">	</span>需要代理认证<span class="Apple-tab-span" style="white-space:pre">	</span></span></div><div><span style="font-size: 22px;">#408<span class="Apple-tab-span" style="white-space:pre">	</span>请求超时<span class="Apple-tab-span" style="white-space:pre">	</span></span></div><div><span style="font-size: 22px;">#409<span class="Apple-tab-span" style="white-space:pre">	</span>请求冲突<span class="Apple-tab-span" style="white-space:pre">	</span></span></div><div><span style="font-size: 22px;">#410<span class="Apple-tab-span" style="white-space:pre">	</span>失败<span class="Apple-tab-span" style="white-space:pre">	</span></span></div><div><span style="font-size: 22px;">#411<span class="Apple-tab-span" style="white-space:pre">	</span>需要长度<span class="Apple-tab-span" style="white-space:pre">	</span></span></div><div><span style="font-size: 22px;">#412<span class="Apple-tab-span" style="white-space:pre">	</span>条件失败<span class="Apple-tab-span" style="white-space:pre">	</span></span></div><div><span style="font-size: 22px;">#413<span class="Apple-tab-span" style="white-space:pre">	</span>请求实体太长<span class="Apple-tab-span" style="white-space:pre">	</span></span></div><div><span style="font-size: 22px;">#414<span class="Apple-tab-span" style="white-space:pre">	</span>请求URI太长<span class="Apple-tab-span" style="white-space:pre">	</span></span></div><div><span style="font-size: 22px;">#500<span class="Apple-tab-span" style="white-space:pre">	</span>服务器内部错误<span class="Apple-tab-span" style="white-space:pre">	</span></span></div><div><span style="font-size: 22px;">#501<span class="Apple-tab-span" style="white-space:pre">	</span>未实现<span class="Apple-tab-span" style="white-space:pre">	</span></span></div><div><span style="font-size: 22px;">#502<span class="Apple-tab-span" style="white-space:pre">	</span>错误的网关<span class="Apple-tab-span" style="white-space:pre">	</span></span></div><div><span style="font-size: 22px;">#503<span class="Apple-tab-span" style="white-space:pre">	</span>服务不可用<span class="Apple-tab-span" style="white-space:pre">	</span></span></div><div><span style="font-size: 22px;">#504<span class="Apple-tab-span" style="white-space:pre">	</span>网关超时<span class="Apple-tab-span" style="white-space:pre">	</span></span></div><div><span style="font-size: 22px;">#505<span class="Apple-tab-span" style="white-space:pre">	</span>HTTP版本不支持</span></div><div><span style="font-size: 22px;"><br></span></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><br></div>\r\n\r\n\r\n\r\n\r\n', '', ''),
('tiankonguse1362384404', 'tiankonguse', '2013-03-04 16:06:44', ' 配置htaccess文件之目录显示', '<div style="text-align: center;"><span style="font-size: 22px;">&nbsp;配置htaccess文件之目录显示</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">&nbsp;</span></div><div><span style="font-size: 22px;">#是否在没有默认文档的目录显示文件列表</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">#显示</span></div><div><span style="font-size: 22px;">#Options +Indexes</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">#隐藏</span></div><div><span style="font-size: 22px;">#Options -Indexes</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">&nbsp;</span></div>\r\n\r\n\r\n\r\n\r\n', '', ''),
('tiankonguse1362384773', 'tiankonguse', '2013-03-04 16:12:53', '配置htaccess文件之访问权限控制', '<div style="text-align: center;"><span style="font-size: 22px;">配置htaccess文件之访问权限控制</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">#访问权限控制</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">order deny,allow</span></div><div><span style="font-size: 22px;">allow from allowIP</span></div><div><span style="font-size: 22px;">deny from denyIP</span></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><br></div>\r\n\r\n\r\n\r\n\r\n', '', ''),
('tiankonguse1362385376', 'tiankonguse', '2013-03-04 16:22:56', '配置htaccess文件之域名重定向', '<div style="text-align: center;"><span style="font-size: 22px;">配置htaccess文件之域名重定向</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">#WWW域名重定向</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">#什么意思呢？</span></div><div><span style="font-size: 22px;">#假设你有个域名 http://tiankonguse.com .</span></div><div><span style="font-size: 22px;">#当你输入 http://tiankonguse.com 时显示你的网站了， 但是输入 http://www.tiankonguse.com 也先显示你的网站。</span></div><div><span style="font-size: 22px;">#如果你只想使用 http://tiankonguse.com ，你就可以重定向 http://www.tiankonguse.com 到 http://tiankonguse.com。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">RewriteEngine on</span></div><div><span style="font-size: 22px;">RewriteCond %{HTTP_HOST} ^(www\\.tiankonguse\\.com)(:80)? [NC]</span></div><div><span style="font-size: 22px;">RewriteRule ^(.*) http://tiankonguse.com/$1 [R=301,L]</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">#反过来，如果你只想使用 http://www.tiankonguse.com 时，就要用下面的代码了。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">RewriteEngine on</span></div><div><span style="font-size: 22px;">RewriteCond %{HTTP_HOST} ^(tiankonguse\\.com)(:80)? [NC]</span></div><div><span style="font-size: 22px;">RewriteRule ^(.*) http://www.tiankonguse.com/$1 [R=301,L]</span></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><br></div>\r\n\r\n\r\n\r\n\r\n', '', ''),
('tiankonguse1362385579', 'tiankonguse', '2013-03-04 16:26:19', '配置htaccess文件之文件夹密码', '<div style="text-align: center;"><span style="font-size: 22px;">配置htaccess文件之文件夹密码</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">#文件夹密码保护</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">#1.制作一个.htpasswd文件</span></div><div><span style="font-size: 22px;">#内容格式为： 用户名:密码</span></div><div><span style="font-size: 22px;">#例如： tiankonguse:password</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">#2.在.htaccess中指定.htpasswd文件的完整路径</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">AuthUserFile 路径</span></div><div><span style="font-size: 22px;">AuthGroupFile /dev/null</span></div><div><span style="font-size: 22px;">AuthName "Please enter your ID and password"</span></div><div><span style="font-size: 22px;">AuthType Basic</span></div><div><span style="font-size: 22px;">require valid-user&nbsp;</span></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><br></div>\r\n\r\n\r\n\r\n\r\n', '', ''),
('tiankonguse1362385663', 'tiankonguse', '2013-03-04 16:27:43', '配置htaccess文件之网页重定向', '<div style="text-align: center;"><span style="font-size: 22px;">配置htaccess文件之网页重定向</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">#网页重定向</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">#Redirect指令</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">#基础认识</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">#下面这句话很重要，请重视。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">#Redirect指令是.htaccess文件中一个非常常用的指令，</span></div><div><span style="font-size: 22px;">#它的作用是发送一个 外部重定向 使 客户端 重新跳转到一个不同的URL。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">#Redirect重定向指令有三个不同的状态参数：</span></div><div><span style="font-size: 22px;">#第一个是permanent：永久性301重定向；</span></div><div><span style="font-size: 22px;">#第二个是temp：临时重定向状态码，即返回302；</span></div><div><span style="font-size: 22px;">#第三个是seeother：此参数表示“参见”的含义，即本资源已经被另外一个更好的资源替代了；</span></div><div><span style="font-size: 22px;">#还有一个gone，表示此资源已经被永久性删除了，因此，也就不存在什么跳转关系了。其后面的URL会被忽略。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">#语法介绍：</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">#301 Moved Permanently 永久重定向</span></div><div><span style="font-size: 22px;">#规则: Redirect permanent 原地址 目标地址</span></div><div><span style="font-size: 22px;">#例如: Redirect permanent /old.html /new.html</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">#302 Moved Temporarily 临时重定向</span></div><div><span style="font-size: 22px;">#规则: Redirect temp 原地址 目标地址</span></div><div><span style="font-size: 22px;">#例如: Redirect temp /old.html /new.html</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">#例子详解</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">#如果希望网页从本空间的 /blog 目录跳转到 http://blog.tiankonguse.com/ ，那么，则可以使用如下htaccess文件指令：</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">Redirect [permanent,temp,seeother] /blog http://blog.tiankonguse.com/&nbsp;</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">此时，如果客户端请求http://tiankonguse.com/blog.php?blogid=tiankonguse1362321624，则会被重定向到http://blog.tiankonguse.com/blog.php?blogid=tiankonguse1362321624。</span></div><div><span style="font-size: 22px;">通过例子可以看出，此时的重定向是带有广泛匹配的.</span></div><div><span style="font-size: 22px;">即：该目录下的所有子文档都会被重定向到一一对应的新地址上去。</span></div><div><span style="font-size: 22px;">这一特性也给htaccess文件的编写带来了非常大的方便。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">因为Redirect指令进匹配完整的URL，因此，该命令不能用来匹配文件名的正则表达式。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">如果希望匹配更多的条件，请使用RedirectMatch命令。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">#RedirectMatch 指令：</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">#基础认识</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">#RedirectMatch指令是基于正则表达式匹配对当前的URL发送一个外部重定向命令。</span></div><div><span style="font-size: 22px;">#该命令与Redirect等效，但是URL能使用正则匹配。</span></div><div><span style="font-size: 22px;">#它使用了标准的正则表达式而不是简单的文件匹配。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">#语法介绍：</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;"># RedirectMatch [status] regex URL</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">#如果regex与URL相匹配，则服务器会把所匹配的括弧中的字符串替换到该指令所指定的目标字符串中，并将它视之为一个文件名。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">#例如，重定向所有GIF文件到另一个服务器上同名的JPEG文件，可以：</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">#RedirectMatch (.*)\\.gif$ http://www.anotherserver.com$1.jpg</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">#与上述的301重定向命令类似的还有RedirectPermanent指令，与之对应的302重定向还有RedirectTemp指令。</span></div><div><span style="font-size: 22px;">#他们在用法上都是大同小异，只是这两个指令将之前的那两个指令具体化了一下，并且不带有状态码参数。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">#无论使用哪种表达都具有同样的效果。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">#301永久重定向将会促使搜索引擎尽快更新收录的地址并且收录新的地址。</span></div><div><span style="font-size: 22px;">#但是，某些情况下，这一方法可能会让搜索引擎作为作弊处理。</span></div><div><span style="font-size: 22px;">#这些指令的作用域都包含.htaccess配置文件，直接将需要的指令加入该文件</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;"><br></span></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><br></div>\r\n\r\n\r\n\r\n\r\n', '', ''),
('tiankonguse1362385944', 'tiankonguse', '2013-03-04 16:32:24', '配置htaccess文件之文件缓存', '<div style="text-align: center;"><span style="font-size: 22px;">配置htaccess文件之文件缓存</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">#是否开启站点的图片缓存</span></div><div><span style="font-size: 22px;">#max-age是以秒为单位的</span></div><div><span style="font-size: 22px;">&lt;FilesMatch ".(gif|jpg|jpeg|png|ico)$"&gt;</span></div><div><span style="font-size: 22px;"><span class="Apple-tab-span" style="white-space:pre">	</span>Header set Cache-Control "max-age=600"</span></div><div><span style="font-size: 22px;">&lt;/FilesMatch&gt;</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">#是否开启站点的非图片缓存</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">&lt;FilesMatch ".(js|css)$"&gt;</span></div><div><span style="font-size: 22px;"><span class="Apple-tab-span" style="white-space:pre">	</span>Header set Cache-Control "max-age=60"</span></div><div><span style="font-size: 22px;">&lt;/FilesMatch&gt;</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;"><br></span></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><br></div>\r\n\r\n\r\n\r\n\r\n', '', ''),
('tiankonguse1362386820', 'tiankonguse', '2013-03-04 16:47:00', '配置htaccess文件之IME类型自定义', '<div style="text-align: center;"><span style="font-size: 22px;">配置htaccess文件之IME类型自定义</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">背景介绍：</span></div><div><span style="font-size: 22px;">不想别人知道你用的什么语言编的网站？这个就可以帮助你。</span></div><div><span style="font-size: 22px;">把文件保存为html照样可以编译php代码。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">#MIME类型自定义</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">AddType html php</span></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><br></div>\r\n\r\n\r\n\r\n\r\n', '', ''),
('tiankonguse1362386974', 'tiankonguse', '2013-03-04 16:49:34', '配置htaccess文件之自定义默认网页', '<div style="text-align: center;"><span style="font-size: 22px;">配置htaccess文件之自定义默认网页</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">#自定义默认网页</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">#有时你的网站的某个目录中没有index.php 或default.php文件，</span></div><div><span style="font-size: 22px;">你又想别人输入的网址是这个目录时显示这个目录的一个文件。</span></div><div><span style="font-size: 22px;">下面的方法就能帮助你。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">DirectoryIndex index.php index.html &nbsp;test.php</span></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><br></div>\r\n\r\n\r\n\r\n\r\n', '', ''),
('tiankonguse1362389703', 'tiankonguse', '2013-03-04 17:35:03', '配置htaccess文件之伪静态网页', '<div style="text-align: center;"><span style="font-size: 22px;">配置htaccess文件之伪静态网页</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">我们自己的网站的url经常用到参数。</span></div><div><span style="font-size: 22px;">而且一个功能强大的网站参数越多。</span></div><div><span style="font-size: 22px;">但是如果这个url直接显示在客户端，就可能被某些人利用url来攻击我们的网站。</span></div><div><span style="font-size: 22px;">那我们可以利用 htaccess 的 RewriteRule 来显示一个伪静态网页，这样就不容易被攻击了。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">规则和标准的正则表达式一样。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">RewriteEngine On&nbsp;</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">RewriteRule ^blog.php?id=([0-9a-zA-Z_]+)$ blog/$1.php&nbsp;</span></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><br></div>\r\n\r\n\r\n\r\n\r\n', '', ''),
('tiankonguse1362390496', 'tiankonguse', '2013-03-04 17:48:16', '配置htaccess文件', '<div style="text-align: center;"><span style="font-size: 22px;">配置htaccess文件</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">htaccess文件是Apache服务器中的一个配置文件，它负责相关目录下的网页配置。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">.htaccess可以做大量的事情，包括：文件夹密码保护、用户自动重定向、自定义错误页面、改变你的文件扩展名、封禁特定IP地址的用户、只允许特定IP地址的用户、禁止目录列表，以及使用其他文件作为index文件。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">.htaccess文件中的配置指令作用于.htaccess文件所在的目录及其所有子目录，但是很重要的、需要注意的是，其上级目录也可能会有.htaccess文件，而指令是按查找顺序依次生效的，所以一个特定目录下的.htaccess文件中的指令可能会覆盖其上级目录中的.htaccess文件中的指令，即子目录中的指令会覆盖父目录或者主配置文件中的指令。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;"><b>如何创建.httaccess文件创建</b></span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">.htaccess文件也许会给你带来一些困难。</span></div><div><span style="font-size: 22px;">写文件很容易，你只需要在文字编缉器\\里写下适当的代码。</span></div><div><span style="font-size: 22px;">真正困难的可能是文件的保存，因为.htaccess是一个古怪的文件名（它事实上没有文件名，只有一个由8个字母组成的扩展名），而在一些系统中无法接受这样的文件名。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">这里介绍两个方法：</span></div><div><span style="font-size: 22px;">1.创建一个文件 error.htaccess .在命令行里使用 rename 命令即可。</span></div><div><span style="font-size: 22px;">2.创建一个文件 error.htaccess .传到服务器上后，使用ftp重命名。</span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;"><b>配置.httaccess教程</b></span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;"><br></span></div><div><span style="font-size: 22px;">1.<a href="http://tiankonguse.com/blog/tiankonguse1362383915.html">配置.htaccess 自定义错误页</a></span></div><div><span style="font-size: 22px;">2.<a href="http://tiankonguse.com/blog/tiankonguse1362384404.html">配置.htaccess 禁止显示目录列表</a></span></div><div><span style="font-size: 22px;">3.<a href="http://tiankonguse.com/blog/tiankonguse1362384773.html">配置.htaccess 阻止/允许特定的IP地址访问网站</a></span></div><div><span style="font-size: 22px;">4.<a href="http://tiankonguse.com/blog/tiankonguse1362386974.html">配置.htaccess 指定缺省主页</a></span></div><div><span style="font-size: 22px;">5.<a href="http://tiankonguse.com/blog/tiankonguse1362385376.html">配置.htaccess 重定向域名</a></span></div><div><span style="font-size: 22px;">6.<a href="http://tiankonguse.com/blog/tiankonguse1362385579.html">配置.htaccess 加密目录</a></span></div><div><span style="font-size: 22px;">7.配置.htaccess 防止盗链</span></div><div><span style="font-size: 22px;">8.<a href="http://tiankonguse.com/blog/tiankonguse1362385663.html">配置.htaccess 地址转向</a></span></div><div><span style="font-size: 22px;">9<a href="http://tiankonguse.com/blog/tiankonguse1362389703.html">.配置.htaccess 伪静态页</a></span></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><br></div>\r\n\r\n\r\n\r\n\r\n', '', '');
INSERT INTO `tk_blog` (`tk_blog_key`, `tk_blog_user`, `tk_blog_datetime`, `tk_blog_title`, `tk_blog_content`, `tk_blog_password`, `tk_blog_category`) VALUES
('tiankonguse1362439415', 'tiankonguse', '2013-03-05 07:23:35', 'CSS display 属性', '<p style="line-height: 19px; margin: 10px auto; color: rgb(75, 75, 75); font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; font-size: 13px; background-color: rgb(255, 255, 255);"><font size="5"><strong>定义和用法</strong></font></p><p style="line-height: 19px; margin: 10px auto; color: rgb(75, 75, 75); font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; font-size: 13px; background-color: rgb(255, 255, 255);">display 属性规定元素应该生成的框的类型。</p><p style="line-height: 19px; margin: 10px auto; color: rgb(75, 75, 75); font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; font-size: 13px; background-color: rgb(255, 255, 255);"><font size="5"><strong>说明</strong></font></p><p style="line-height: 19px; margin: 10px auto; color: rgb(75, 75, 75); font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; font-size: 13px; background-color: rgb(255, 255, 255);">这个属性用于定义建立布局时元素生成的显示框类型。对于 HTML 等文档类型，如果使用 display 不谨慎会很危险，因为可能违反 HTML 中已经定义的显示层次结构。对于 XML，由于 XML 没有内置的这种层次结构，所有 display 是绝对必要的。</p><p style="line-height: 19px; margin: 10px auto; color: rgb(75, 75, 75); font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; font-size: 13px; background-color: rgb(255, 255, 255);"><font color="#ff0000">注释：CSS2 中有值 compact 和 marker，不过由于缺乏广泛的支持，已经从 CSS2.1 中去除了。</font></p><p style="line-height: 19px; margin: 10px auto; color: rgb(75, 75, 75); font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; font-size: 13px; background-color: rgb(255, 255, 255);">默认值：inline</p><p style="line-height: 19px; margin: 10px auto; color: rgb(75, 75, 75); font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; font-size: 13px; background-color: rgb(255, 255, 255);">继承性：no</p><p style="line-height: 19px; margin: 10px auto; color: rgb(75, 75, 75); font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; font-size: 13px; background-color: rgb(255, 255, 255);">版本：CSS1</p><p style="line-height: 19px; margin: 10px auto; color: rgb(75, 75, 75); font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; font-size: 13px; background-color: rgb(255, 255, 255);">JavaScript 语法：<i>object</i>.style.display="inline"</p><p style="line-height: 19px; margin: 10px auto; color: rgb(75, 75, 75); font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; font-size: 13px; background-color: rgb(255, 255, 255);"><font size="5"><strong>实例</strong></font></p><p style="line-height: 19px; margin: 10px auto; color: rgb(75, 75, 75); font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; font-size: 13px; background-color: rgb(255, 255, 255);">使段落生出行内框：p.inline{<code>display:inline;</code>}</p><p style="line-height: 19px; margin: 10px auto; color: rgb(75, 75, 75); font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; font-size: 13px; background-color: rgb(255, 255, 255);"><font size="5"><strong>浏览器支持</strong></font></p><p style="line-height: 19px; margin: 10px auto; color: rgb(75, 75, 75); font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; font-size: 13px; background-color: rgb(255, 255, 255);">所有主流浏览器都支持 display 属性。</p><p style="line-height: 19px; margin: 10px auto; color: rgb(75, 75, 75); font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; font-size: 13px; background-color: rgb(255, 255, 255);">注释：如果规定了 !DOCTYPE，则 Internet Explorer 8 （以及更高版本）支持属性值 "inline-table"、"run-in"、"table"、"table-caption"、"table-cell"、"table-column"、"table-column-group"、"table-row"、"table-row-group"、以及 "inherit"。</p><p style="line-height: 19px; margin: 10px auto; color: rgb(75, 75, 75); font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; font-size: 13px; background-color: rgb(255, 255, 255);">&nbsp;</p><h5 style="color: rgb(75, 75, 75); font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; background-color: rgb(255, 255, 255);">可能的值</h5><p style="line-height: 19px; margin: 10px auto; color: rgb(75, 75, 75); font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; font-size: 13px; background-color: rgb(255, 255, 255);">值&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 描述</p><p style="line-height: 19px; margin: 10px auto; color: rgb(75, 75, 75); font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; font-size: 13px; background-color: rgb(255, 255, 255);">none&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 此元素不会被显示。</p><p style="line-height: 19px; margin: 10px auto; color: rgb(75, 75, 75); font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; font-size: 13px; background-color: rgb(255, 255, 255);">block&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 此元素将显示为块级元素，此元素前后会带有换行符。</p><p style="line-height: 19px; margin: 10px auto; color: rgb(75, 75, 75); font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; font-size: 13px; background-color: rgb(255, 255, 255);">inline&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 默认。此元素会被显示为内联元素，元素前后没有换行符。</p><p style="line-height: 19px; margin: 10px auto; color: rgb(75, 75, 75); font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; font-size: 13px; background-color: rgb(255, 255, 255);">inline-block&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 行内块元素。（CSS2.1 新增的值）</p><p style="line-height: 19px; margin: 10px auto; color: rgb(75, 75, 75); font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; font-size: 13px; background-color: rgb(255, 255, 255);">list-item&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 此元素会作为列表显示。</p><p style="line-height: 19px; margin: 10px auto; color: rgb(75, 75, 75); font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; font-size: 13px; background-color: rgb(255, 255, 255);">run-in&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 此元素会根据上下文作为块级元素或内联元素显示。</p><p style="line-height: 19px; margin: 10px auto; color: rgb(75, 75, 75); font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; font-size: 13px; background-color: rgb(255, 255, 255);">compact&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; CSS 中有值 compact，不过由于缺乏广泛支持，已经从 CSS2.1 中删除。</p><p style="line-height: 19px; margin: 10px auto; color: rgb(75, 75, 75); font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; font-size: 13px; background-color: rgb(255, 255, 255);">marker&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; CSS 中有值 marker，不过由于缺乏广泛支持，已经从 CSS2.1 中删除。</p><p style="line-height: 19px; margin: 10px auto; color: rgb(75, 75, 75); font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; font-size: 13px; background-color: rgb(255, 255, 255);">table&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 此元素会作为块级表格来显示（类似 &lt;table&gt;），表格前后带有换行符。</p><p style="line-height: 19px; margin: 10px auto; color: rgb(75, 75, 75); font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; font-size: 13px; background-color: rgb(255, 255, 255);">inline-table&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 此元素会作为内联表格来显示（类似 &lt;table&gt;），表格前后没有换行符。</p><p style="line-height: 19px; margin: 10px auto; color: rgb(75, 75, 75); font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; font-size: 13px; background-color: rgb(255, 255, 255);">table-row-group&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 此元素会作为一个或多个行的分组来显示（类似 &lt;tbody&gt;）。</p><p style="line-height: 19px; margin: 10px auto; color: rgb(75, 75, 75); font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; font-size: 13px; background-color: rgb(255, 255, 255);">table-header-group&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 此元素会作为一个或多个行的分组来显示（类似 &lt;thead&gt;）。</p><p style="line-height: 19px; margin: 10px auto; color: rgb(75, 75, 75); font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; font-size: 13px; background-color: rgb(255, 255, 255);">table-footer-group&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 此元素会作为一个或多个行的分组来显示（类似 &lt;tfoot&gt;）。</p><p style="line-height: 19px; margin: 10px auto; color: rgb(75, 75, 75); font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; font-size: 13px; background-color: rgb(255, 255, 255);">table-row&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 此元素会作为一个表格行显示（类似 &lt;tr&gt;）。</p><p style="line-height: 19px; margin: 10px auto; color: rgb(75, 75, 75); font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; font-size: 13px; background-color: rgb(255, 255, 255);">table-column-group&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 此元素会作为一个或多个列的分组来显示（类似 &lt;colgroup&gt;）。</p><p style="line-height: 19px; margin: 10px auto; color: rgb(75, 75, 75); font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; font-size: 13px; background-color: rgb(255, 255, 255);">table-column&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 此元素会作为一个单元格列显示（类似 &lt;col&gt;）</p><p style="line-height: 19px; margin: 10px auto; color: rgb(75, 75, 75); font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; font-size: 13px; background-color: rgb(255, 255, 255);">table-cell&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 此元素会作为一个表格单元格显示（类似 &lt;td&gt; 和 &lt;th&gt;）</p><p style="line-height: 19px; margin: 10px auto; color: rgb(75, 75, 75); font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; font-size: 13px; background-color: rgb(255, 255, 255);">table-caption&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 此元素会作为一个表格标题显示（类似 &lt;caption&gt;）</p><p style="line-height: 19px; margin: 10px auto; color: rgb(75, 75, 75); font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; font-size: 13px; background-color: rgb(255, 255, 255);">inherit&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 规定应该从父元素继承 display 属性的值。</p><p style="line-height: 19px; margin: 10px auto; color: rgb(75, 75, 75); font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; font-size: 13px; background-color: rgb(255, 255, 255);">&nbsp;</p><h3 style="margin: 10px 0px; font-size: 14px; color: rgb(102, 102, 102); background-image: none; font-family: Verdana; background-color: rgb(255, 255, 255); background-repeat: no-repeat no-repeat;">HTML DOM display 属性</h3><p style="line-height: 19px; margin: 10px auto; color: rgb(75, 75, 75); font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; font-size: 13px; background-color: rgb(255, 255, 255);">&nbsp;</p><h4 style="color: rgb(75, 75, 75); font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 19px; background-color: rgb(255, 255, 255);">实例</h4><p style="line-height: 19px; margin: 10px auto; color: rgb(75, 75, 75); font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; font-size: 13px; background-color: rgb(255, 255, 255);">本例设置不显示元素：</p><h4 style="color: rgb(75, 75, 75); font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 19px; background-color: rgb(255, 255, 255);">实例</h4><p style="line-height: 19px; margin: 10px auto; color: rgb(75, 75, 75); font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; font-size: 13px; background-color: rgb(255, 255, 255);">本例设置不显示元素：</p><p style="line-height: 19px; margin: 10px auto; color: rgb(75, 75, 75); font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; font-size: 13px; background-color: rgb(255, 255, 255);"><br></p><pre><code class="xml">&lt;html&gt; \r\n&lt;head&gt; \r\n&lt;script type="text/javascript"&gt; \r\nfunction removeElement() \r\n{ \r\ndocument.getElementById("p1").style.display="none"; \r\n} \r\n&lt;/script&gt; \r\n&lt;/head&gt; \r\n&lt;body&gt; \r\n\r\n&lt;h1&gt;Hello&lt;/h1&gt; \r\n\r\n&lt;p id="p1"&gt;This is some text. This is some text. This is some text. \r\nThis is some text. This is some text. This is some text. \r\nThis is some text. This is some text. This is some text.&lt;/p&gt; \r\n\r\n&lt;input type="button" onclick="removeElement()" \r\nvalue="Do not display paragraph" /&gt; \r\n\r\n&lt;/body&gt; \r\n&lt;/html&gt;</code></pre><br><p></p>\r\n\r\n\r\n\r\n\r\n', '', ''),
('tiankonguse1362468956', 'tiankonguse', '2013-03-05 15:35:56', 'javascrip 中的 Arguments, caller, callee, apply', '<div><br></div><div><font color=\\"#000000\\">一、Arguments</font></div><div><font color=\\"#000000\\"><br></font></div><div><font color=\\"#000000\\">该对象代表正在执行的函数和调用他的函数的参数。</font></div><div><font color=\\"#000000\\"><br></font></div><div><font color=\\"#000000\\">[function.]arguments[n]</font></div><div><font color=\\"#000000\\"><br></font></div><div><font color=\\"#000000\\">参数function ：当前正在执行的 Function 对象的名字。</font></div><div><font color=\\"#000000\\">n ：要传递给 Function 对象的从0开始的参数值索引。</font></div><div><font color=\\"#000000\\"><br></font></div><div><font color=\\"#000000\\">说明：Arguments是进行函数调用时，除了指定的参数外，还另外创建的一个隐藏对象。</font></div><div><font color=\\"#000000\\"><br></font></div><div><font color=\\"#000000\\">Arguments是个类似数组但不是数组的对象。</font></div><div><font color=\\"#000000\\">说他类似数组是因为其具备数组相同的访问性质及方式，能够由arguments[n]来访问对应的单个参数的值，并拥有数组长度属性length。</font></div><div><font color=\\"#000000\\">还有就是arguments对象存储的是实际 传递给函数的参数，而不局限于函数声明所定义的参数列表，而且不能显式创建 arguments 对象。</font></div><div><font color=\\"#000000\\"><br></font></div><div><font color=\\"#000000\\">在此添加了一个说明arguments不是数组(Array类)的代码:</font></div><div><pre><code class=\\"javascript\\">Array.prototype.selfvalue = 1;\r\nalert(new Array().selfvalue);\r\nfunction testAguments(){\r\n        alert(arguments.selfvalue)；\r\n}</code></pre></div><div><font color=\\"#000000\\">运行代码您会发现第一个alert显示1，这表示数组对象拥有selfvalue属性，值为1，而当您调用函数testAguments时，您会发现显示的是“undefined”，说明了不是arguments的属性，即arguments并不是个数组对象。</font></div><div><font color=\\"#000000\\"><br></font></div><div><font color=\\"#000000\\">二、caller</font></div><div><font color=\\"#000000\\"><br></font></div><div><font color=\\"#000000\\">返回一个对函数的引用，该函数调用了当前函数。</font></div><div><font color=\\"#000000\\">&nbsp;</font></div><div><font color=\\"#000000\\">&nbsp;functionName.caller</font></div><div><font color=\\"#000000\\"><br></font></div><div><font color=\\"#000000\\">&nbsp;functionName 对象是所执行函数的名称。</font></div><div><font color=\\"#000000\\">&nbsp;</font></div><div><font color=\\"#000000\\">说明：对于函数来说，caller 属性只有在函数执行时才有定义。</font></div><div><font color=\\"#000000\\">假如函数是由顶层调用的，那么 caller 包含的就是 null 。</font></div><div><font color=\\"#000000\\">假如在字符串上下文中使用 caller 属性，那么结果和 functionName.toString 相同，也就是说，显示的是函数的反编译文本。</font></div><div><font color=\\"#000000\\"><br></font></div><div><font color=\\"#000000\\">下面的例子说明了 caller 属性的用法：</font></div><div><pre><code class=\\"javascript\\">function callerDemo() {\r\n  if (callerDemo.caller) {\r\n      var a= callerDemo.caller.toString()；\r\n      alert(a)；\r\n } else{\r\n    alert(\\"this is a top function\\")；\r\n }\r\n}\r\n\r\nfunction handleCaller() {\r\n    callerDemo();\r\n}</code></pre></div><div><font color=\\"#000000\\">三、callee</font></div><div><font color=\\"#000000\\"><br></font></div><div><font color=\\"#000000\\">返回正被执行的 Function 对象，也就是所指定的 Function 对象的正文。</font></div><div><font color=\\"#000000\\"><br></font></div><div><font color=\\"#000000\\">[function.]arguments.callee</font></div><div><font color=\\"#000000\\"><br></font></div><div><font color=\\"#000000\\">可选项 function 参数是当前正在执行的 Function 对象的名称。</font></div><div><font color=\\"#000000\\">说明：callee 属性的初始值就是正被执行的 Function 对象。</font></div><div><font color=\\"#000000\\"><br></font></div><div><font color=\\"#000000\\">callee 属性是 arguments&nbsp;</font></div><div><font color=\\"#000000\\"><br></font></div><div><font color=\\"#000000\\">对象的一个成员，他表示对函数对象本身的引用，这有利于匿名函数的递归或确保函数的封装性，例如下边示例的递归计算1到n的自然数之和。</font></div><div><font color=\\"#000000\\">而该属性仅当相关函数正在执行时才可用。</font></div><div><font color=\\"#000000\\">更有需要注意的是callee拥有length属性，这个属性有时候用于验证还是比较好的。</font></div><div><font color=\\"#000000\\">arguments.length是实参度，arguments.callee.length是形参长度，由此能够判断调用时形参长度是否和实参长度一致。</font></div><div><pre><code class=\\"javascript\\">//callee能够打印其本身\r\nfunction calleeDemo() {\r\n  alert(arguments.callee);\r\n}\r\n\r\n//递归计算\r\nvar sum = function(n){\r\n  if (n &lt;= 0) return 1;\r\n  else return n ＋arguments.callee(n - 1)\r\n}</code></pre></div><div><font color=\\"#000000\\">比较一般的递归函数：</font></div><div><pre><code class=\\"javascript\\">var sum = function(n){\r\n  if (1==n) return 1;\r\n  else return n + sum (n-1);\r\n}</code></pre></div><div><font color=\\"#000000\\">调用时：alert(sum(100));</font></div><div><font color=\\"#000000\\">其中函数内部包含了对sum自身的引用，函数名仅仅是个变量名，在函数内部调用sum即相当于调用一个全局变量，不能很好的体现出是调用自身，这时使用callee会是个比较好的方法。</font></div><div><font color=\\"#000000\\"><br></font></div><div><font color=\\"#000000\\">四、apply and call</font></div><div><font color=\\"#000000\\"><br></font></div><div><font color=\\"#000000\\">他们的作用都是将函数绑定到另外一个对象上去运行，两者仅在定义参数方式有所区分：</font></div><div><pre><code class=\\"javascript\\">     apply(thisArg,argArray);\r\n     call(thisArg[,arg1,arg2…] ]);</code></pre></div><div><font color=\\"#000000\\">即任何函数内部的this指针都会被赋值为thisArg，这可实现将函数作为另外一个对象的方法运行的目的</font></div><div><font color=\\"#000000\\"><br></font></div><div><font color=\\"#000000\\">apply的说明：假如 argArray 不是个有效的数组或不是 arguments 对象，那么将导致一个 TypeError。</font></div><div><font color=\\"#000000\\">假如没有提供 argArray 和 thisArg任何一个参数，那么 Global 对象将被用作 thisArg，并且无法被传递任何参数。</font></div><div><font color=\\"#000000\\"><br></font></div><div><font color=\\"#000000\\">call的说明：call 方法可将一个函数的对象上下文从初始的上下文改变为由thisArg指定的新对象。</font></div><div><font color=\\"#000000\\"><br></font></div><div><font color=\\"#000000\\">假如没有提供thisArg参数，那么Global对象被用作thisArg</font></div><div><font color=\\"#000000\\">相关技巧：应用call和apply有一个技巧在里面，就是用call和apply应用另一个函数（类）以后，当前的</font></div><div><font color=\\"#000000\\">函数（类）就具备了另一个函数（类）的方法或是属性，这也能够称之为“继承”。</font></div><div><font color=\\"#000000\\"><br></font></div><div><font color=\\"#000000\\">看下面示例:</font></div><div><br></div><div><pre><code class=\\"javascript\\">// 继承的演示\r\nfunction base() {\r\n  this.member = \\" dnnsun_Member\\";\r\n  this.method = function() {\r\n     window.alert(this.member);\r\n  }\r\n}\r\n\r\nfunction extend() {\r\n  base.call(this);\r\n  window.alert(member);\r\n  window.alert(this.method);\r\n}</code></pre></div><div><font color=\\"#000000\\"><br></font></div><div><font color=\\"#000000\\">上面的例子能够看出，通过call之后，extend能够继承到base的方法和属性。</font></div><div><font color=\\"#000000\\">顺便提一下，在javascript框架prototype里就使用apply来创建一个定义类的模式，</font></div><div><font color=\\"#000000\\"><br></font></div><div><font color=\\"#000000\\">其实现代码如下：</font></div><div><br></div><div><pre><code class=\\"javascript\\">var Class = {\r\n  create: function() {\r\n    return function() {\r\n      this.initialize.apply(this, arguments);\r\n    }\r\n  }\r\n}</code></pre></div><div><font color=\\"#000000\\"><br></font></div><div><font color=\\"#000000\\">解析：从代码看,该对象仅包含一个方法：Create，其返回一个函数，即类。</font></div><div><font color=\\"#000000\\">但这也同时是类的构造函数，其中调用initialize，而这个方法是在类创建时定义的初始化函数。</font></div><div><font color=\\"#000000\\">通过如此途径，就能够实现prototype中的类创建模式</font></div><div style=\\"color: rgb(0, 0, 0); font-size: 22px;\\"><br></div>\r\n\r\n\r\n\r\n\r\n', '', ''),
('tiankonguse1362470077', 'tiankonguse', '2013-03-05 15:54:37', 'javascript 中 括号 的几种 含义', '<div><span style="\\&quot;\\\\&quot;color:\\&quot;" rgb(0,="\\&quot;\\&quot;" 0,="\\&quot;\\&quot;" 0);="\\&quot;\\&quot;" line-height:="\\&quot;\\&quot;" 1.333;\\\\\\"="\\&quot;\\&quot;">&nbsp;小括号</span></div><div><font color="\\&quot;\\\\&quot;#000000\\\\&quot;\\&quot;">&nbsp; &nbsp; &nbsp; &nbsp;JavaScript中小括号有五种语义</font></div><div><font color="\\&quot;\\\\&quot;#000000\\\\&quot;\\&quot;">&nbsp; &nbsp; &nbsp; &nbsp;语义1，函数声明时参数表</font></div><div><span style="color: rgb(68, 68, 68); line-height: 1.333;"><br></span></div><div><pre><code class="javascript"> function func(arg1,arg2){  \r\n              // ... \r\n}</code></pre></div><div><span style="color: rgb(68, 68, 68); line-height: 1.333;">&nbsp;</span></div><div><font color="\\&quot;\\\\&quot;#000000\\\\&quot;\\&quot;">&nbsp; &nbsp; &nbsp; &nbsp;语义2，和一些语句联合使用以达到某些限定作用</font></div><div><pre><code class="javascript">              // 和for in一起使用\r\n              for(var a in obj){  \r\n              // ...\r\n              }  \r\n              // 和if一起使用\r\n              if(boo){  \r\n              //...\r\n              }  \r\n              // 和while一起使用\r\n              while(boo){  \r\n              // ...\r\n              }  \r\n              // 和do while一起使用 \r\n              do{  \r\n              // ...\r\n              }while(boo)  </code></pre></div><div><font color="\\&quot;\\\\&quot;#000000\\\\&quot;\\&quot;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 注意：在与if、while及do while一起使用时小括号会将其中的表达式结果隐式的转换成布尔值。见无处不在的隐式类型转换 。</font></div><div><font color="\\&quot;\\\\&quot;#000000\\\\&quot;\\&quot;">&nbsp; &nbsp; &nbsp; &nbsp;语义3，和new一起使用用来传值(实参)</font></div><div><pre><code class="javascript">              // 假设已经定义了类Person，它有两个字段姓名（name），年龄（age）\r\n      \r\n              var p1 = new Person(\\\\\\''Jack\\\\\\'',26); \r\n </code></pre></div><div><font color="\\&quot;\\\\&quot;#000000\\\\&quot;\\&quot;">&nbsp; &nbsp; &nbsp; &nbsp;语义4，作为函数或对象方法的调用运算符(如果定义了参数也可与语义3一样传实参)</font></div><div><pre><code class="javascript">              // 假设已经定义了函数func     \r\n               func();  \r\n              // 假设已经定义了对象obj，且拥有func方法\r\n              obj.func();  </code></pre></div><div><font color="\\&quot;\\\\&quot;#000000\\\\&quot;\\&quot;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 这里提下typeof运算符，有人喜欢这么使用</font></div><div><font color="\\&quot;\\\\&quot;#000000\\\\&quot;\\&quot;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 请注意typeof后的小括号并非语义4(即不是函数调用)，而是后面提到的语义5。我使用typeof一般不加后面的小括号。见 具名函数的多种调用方式</font></div><div><font color="\\&quot;\\\\&quot;#000000\\\\&quot;\\&quot;">&nbsp; &nbsp; &nbsp; &nbsp;语义5，强制表达式运算</font></div><div><pre><code class="javascript">              function strToJson(str){                  // eval 中字符串两旁加了强制运算符()\r\n                 var json = eval(\\\\\\''(\\\\\\'' + str + \\\\\\'')\\\\\\'');       \r\n                 return json;  \r\n              }  \r\n</code></pre></div><div><font color="\\&quot;\\\\&quot;#000000\\\\&quot;\\&quot;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 关于语义5，大家最熟悉的莫过于使用eval解析JSON</font></div><div><font color="\\&quot;\\\\&quot;#000000\\\\&quot;\\&quot;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 又如使用较多的是匿名函数自执行 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</font></div><div><pre><code class="javascript">              (function(){  \r\n              // ...\r\n              })();  \r\n</code></pre></div><div><font color="\\&quot;\\\\&quot;#000000\\\\&quot;\\&quot;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 注意，以上代码第1对小括号是语义5，第3对则是语义4。</font></div><div><font color="\\&quot;\\\\&quot;#000000\\\\&quot;\\&quot;"><br></font></div><div><font color="\\&quot;\\\\&quot;#000000\\\\&quot;\\&quot;">大括号</font></div><div><font color="\\&quot;\\\\&quot;#000000\\\\&quot;\\&quot;">&nbsp; &nbsp; &nbsp; &nbsp;JavaScript中大括号有四种语义作用</font></div><div><font color="\\&quot;\\\\&quot;#000000\\\\&quot;\\&quot;"><br></font></div><div><font color="\\&quot;\\\\&quot;#000000\\\\&quot;\\&quot;">&nbsp; &nbsp; &nbsp; &nbsp;语义1，组织复合语句,这是最常见的</font></div><div><font color="\\&quot;\\\\&quot;#000000\\\\&quot;\\&quot;"><br></font></div><div><pre><code class="javascript">              if( condition ) {  \r\n              //... \r\n              }else {  \r\n              //... \r\n              }  for() {  \r\n              //... \r\n              }  \r\n</code></pre></div><div><font color="\\&quot;\\\\&quot;#000000\\\\&quot;\\&quot;">&nbsp; &nbsp; &nbsp; &nbsp;语义2，对象直接量声明</font></div><div><font color="\\&quot;\\\\&quot;#000000\\\\&quot;\\&quot;"><br></font></div><div><font color="\\&quot;\\\\&quot;#000000\\\\&quot;\\&quot;">&nbsp;</font></div><pre><code class="javascript">             var obj = {      name : \\\\\\''jack\\\\\\'',      age : 23  };  <br></code></pre><div><font color="\\&quot;\\\\&quot;#000000\\\\&quot;\\&quot;">&nbsp; &nbsp; &nbsp; &nbsp;整个是个赋值语句，其中的{name:\\\\\\''jack\\\\\\'',age:23}是个表达式。</font></div><div><font color="\\&quot;\\\\&quot;#000000\\\\&quot;\\&quot;"><br></font></div><div><font color="\\&quot;\\\\&quot;#000000\\\\&quot;\\&quot;">&nbsp; &nbsp; &nbsp; &nbsp;语义3，声明函数或函数直接量</font></div><div><font color="\\&quot;\\\\&quot;#000000\\\\&quot;\\&quot;"><br></font></div><div><pre><code class="javascript">              function f1(){  \r\n              //... \r\n              }  \r\n              var f2 = function(){  \r\n              //... \r\n              }  \r\n</code></pre></div><div><font color="\\&quot;\\\\&quot;#000000\\\\&quot;\\&quot;">&nbsp; &nbsp; &nbsp; &nbsp; f1与非f2的区别是前者在语法解释期，后者在运行期。区别在于：如果调用该函数的代码在函数定义之后，则没有区别;如果调用该函数的代码在函数定义之前，则f1仍然可以调用，f2则会报错，提示f2未定义。</font></div><div><font color="\\&quot;\\\\&quot;#000000\\\\&quot;\\&quot;"><br></font></div><div><font color="\\&quot;\\\\&quot;#000000\\\\&quot;\\&quot;">&nbsp; &nbsp; &nbsp; &nbsp;语义4，结构化异常处理的语法符号</font></div><div><pre><code class="javascript">              try {  \r\n              //... \r\n              }catch( ex ){  \r\n              //... \r\n              }finally{  \r\n              //... \r\n              }  \r\n</code></pre></div><div><font color="\\&quot;\\\\&quot;#000000\\\\&quot;\\&quot;">&nbsp; &nbsp; &nbsp; &nbsp;这里的大括号与符合语句(语义1 )是有区别的，大括号中如果只有一条语句，在if/else/for等中大括号是可以省略的，但try/catch/finally则不能省略。</font></div><div><font color="\\&quot;\\\\&quot;#000000\\\\&quot;\\&quot;"><br></font></div><div><font color="\\&quot;\\\\&quot;#000000\\\\&quot;\\&quot;">以下代码纠结了偶N久</font></div><div><font color="\\&quot;\\\\&quot;#000000\\\\&quot;\\&quot;"><br></font></div><div><pre><code class="javascript">              function(){}() //匿名函数立即执行， 语法分析期报 \r\n              {}.constructor //获取对象直接量的构造器，语法分析期报错\r\n</code></pre></div><div><font color="\\&quot;\\\\&quot;#000000\\\\&quot;\\&quot;"><br></font></div><div><font color="\\&quot;\\\\&quot;#000000\\\\&quot;\\&quot;">&nbsp; &nbsp; &nbsp; &nbsp;令人不解的是为何[].constructor这么写却不报错呢，一个是想获取对象直接量的构造器，一个是获取数组直接量的构造器而已。</font></div><div><font color="\\&quot;\\\\&quot;#000000\\\\&quot;\\&quot;"><br></font></div><div><font color="\\&quot;\\\\&quot;#000000\\\\&quot;\\&quot;">&nbsp; &nbsp; &nbsp; &nbsp;当然添加个变量接收也不会报错</font></div><div><font color="\\&quot;\\\\&quot;#000000\\\\&quot;\\&quot;"><br></font></div><div><font color="\\&quot;\\\\&quot;#000000\\\\&quot;\\&quot;">&nbsp; &nbsp; &nbsp; &nbsp;同样的情况如</font></div><div><font color="\\&quot;\\\\&quot;#000000\\\\&quot;\\&quot;"><br></font></div><div><font color="\\&quot;\\\\&quot;#000000\\\\&quot;\\&quot;">&nbsp;</font></div><pre><code class="javascript">             var fn = function(){}()，也不会报错。<br></code></pre><div><font color="\\&quot;\\\\&quot;#000000\\\\&quot;\\&quot;">&nbsp; &nbsp; &nbsp; &nbsp;实际上是js的“语句优先”在作怪，即{}被理解成复合语句块(语义1 )而不是对象直接量(语义2 )或声明函数(语义3 )的语义。</font></div><div><font color="\\&quot;\\\\&quot;#000000\\\\&quot;\\&quot;"><br></font></div><div><font color="\\&quot;\\\\&quot;#000000\\\\&quot;\\&quot;">function(){}()，大括号被理解成复合语句，自然前面的function()声明函数的语法不完整导致语法分析期出错。</font></div><div><font color="\\&quot;\\\\&quot;#000000\\\\&quot;\\&quot;"><br></font></div><div><font color="\\&quot;\\\\&quot;#000000\\\\&quot;\\&quot;">&nbsp; &nbsp; &nbsp; &nbsp;{}.constructor，大括号被理解成复合语句，大括号后面是点运算符，点运算符前没有合理的对象自然也报错。</font></div><div><font color="\\&quot;\\\\&quot;#000000\\\\&quot;\\&quot;"><br></font></div><div><font color="\\&quot;\\\\&quot;#000000\\\\&quot;\\&quot;">&nbsp; &nbsp; &nbsp; &nbsp;修复方式众所周知：加个强制运算符()</font></div><div><font color="\\&quot;\\\\&quot;#000000\\\\&quot;\\&quot;"><br></font></div><div><pre><code class="javascript">       (function(){})()，(function(){});//强制其理解为函数(语义3 )，“函数()”表示执行该函数，即声明后立即执行了。\r\n\r\n       ({}).constructor //({})强制把大括号理解成对象直接量(语义2 )，“对象.xx”表示获取对象的成员，自然后面的点运算符可以正常执行了。\r\n</code></pre></div><div><font color="\\&quot;\\\\&quot;#000000\\\\&quot;\\&quot;"><br></font></div><div><font color="\\&quot;\\\\&quot;#000000\\\\&quot;\\&quot;">中括号</font></div><div><font color="\\&quot;\\\\&quot;#000000\\\\&quot;\\&quot;">&nbsp; &nbsp; &nbsp; &nbsp;JavaScript中括号有四种语义</font></div><div><font color="\\&quot;\\\\&quot;#000000\\\\&quot;\\&quot;"><br></font></div><div><font color="\\&quot;\\\\&quot;#000000\\\\&quot;\\&quot;">&nbsp; &nbsp; &nbsp; &nbsp;语义1，声明数组</font></div><div><pre><code class="javascript">              var ary = []; // 声明一个空数组\r\n              var ary = [1,3]; // 声明一个数组，同时赋初值\r\n</code></pre></div><div><font color="\\&quot;\\\\&quot;#000000\\\\&quot;\\&quot;">&nbsp; &nbsp; &nbsp; &nbsp;语义2，取数组成员</font></div><div><font color="\\&quot;\\\\&quot;#000000\\\\&quot;\\&quot;"><br></font></div><div><font color="\\&quot;\\\\&quot;#000000\\\\&quot;\\&quot;">&nbsp;</font></div><pre><code class="javascript">             var ary = [1,2,3];  var item = ary[0];  <br></code></pre><div><font color="\\&quot;\\\\&quot;#000000\\\\&quot;\\&quot;">&nbsp; &nbsp; &nbsp; &nbsp;语义3，定义对象成员 (可以不遵循标识符规则 )</font></div><div><font color="\\&quot;\\\\&quot;#000000\\\\&quot;\\&quot;"><br></font></div><div><pre><code class="javascript">              var obj = {};  \r\n              // 为obj添加一个属性name，name是合法的标识符，即也可以通过obj.name方式来定义\r\n              obj[\\\\\\''name\\\\\\''] = \\\\\\''jack\\\\\\'';   \r\n              // 为obj添加一个属性2a，2a不是合法的标识符（不能以数字开头），不能通过obj.2a来定义\r\n              obj[\\\\\\''2a\\\\\\''] = \\\\\\''test\\\\\\'';   </code></pre></div><div><font color="\\&quot;\\\\&quot;#000000\\\\&quot;\\&quot;"><br></font></div><div><font color="\\&quot;\\\\&quot;#000000\\\\&quot;\\&quot;">&nbsp; &nbsp; &nbsp; &nbsp;语义4，取对象成员</font></div><div><font color="\\&quot;\\\\&quot;#000000\\\\&quot;\\&quot;"><br></font></div><div><pre><code class="javascript">              var obj = {name:\\\\\\''jack\\\\\\''};  obj[\\\\\\''2a\\\\\\''] = \\\\\\''test\\\\\\'';  \r\n              obj[\\\\\\''name\\\\\\'']; // --&gt; jack\r\n              obj[\\\\\\''2a\\\\\\'']; // --&gt; test (不能通过obj.2a获取)\r\n</code></pre></div>\r\n\r\n\r\n', '', ''),
('tiankonguse1362473165', 'tiankonguse', '2013-03-05 16:46:05', 'code test', '<pre><code class="xml">&lt;html&gt; \r\n&lt;head&gt; \r\n&lt;script type="text/javascript"&gt; \r\nfunction removeElement() \r\n{ \r\ndocument.getElementById("p1").style.display="none"; \r\n} \r\n&lt;/script&gt; \r\n&lt;/head&gt; \r\n&lt;body&gt; \r\n&nbsp;\r\n&lt;h1&gt;Hello&lt;/h1&gt; \r\n&nbsp;\r\n&lt;p id="p1"&gt;This is some text. This is some text. This is some text. \r\nThis is some text. This is some text. This is some text. \r\nThis is some text. This is some text. This is some text.&lt;/p&gt; \r\n&nbsp;\r\n&lt;input type="button" onclick="removeElement()"\r\nvalue="Do not display paragraph" /&gt; \r\n&nbsp;\r\n&lt;/body&gt; \r\n&lt;/html&gt;</code></pre>\r\n\r\n\r\n\r\n\r\n', '', ''),
('tiankonguse1362492641', 'tiankonguse', '2013-03-05 22:10:41', 'PHP重定向', '<div style="text-align: center;"><font color="#000000">PHP重定向</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">实际上重定向分为客户端重定向和服务器端重定向。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">关于服务器端的永久重定向可以在 .htaccess 或 apache 的 http.conf 中配置。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">若想动态重定向，我还没在网络中找到相关知识。如果谁知道请告诉我，谢谢。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">关于在客户端的 重定向，这里有几种方法。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000"><br></font></div><div><font color="#000000">方法一、用HTTP头信息</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">也就是用PHP的HEADER函数。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">PHP里的HEADER函数的作用就是向浏览器发出由HTTP协议规定的本来应该通过WEB服务器的控制指令。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">例如声明返回信息的类型("Context-type: xxx/xxx")，页面的属性("No cache", "Expire")等等。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">用HTTP头信息进行PHP重定向到另外一个页面的方法如下：</font></div><div><br></div><div><pre><code class="php">&lt;?php \r\n	$url = "http://tiankonguse.com";  \r\n	if (!empty($url)){    \r\n		Header("HTTP/1.1 303 See Other");\r\n		Header("Location: $url");  \r\n	}\r\n?&gt; \r\n\r\n</code></pre></div><div><br></div><div><font color="#000000">这个很容易迷惑人。</font></div><div><font color="#000000">容易让人认为执行这条语句就跳转了。</font></div><div><font color="#000000">实际上跳转时在客户端执行的，所以这个php文件都会解析的。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000"><br></font></div><div><font color="#000000"><br></font></div><div><font color="#000000">方法二、javascript实现重定向</font></div><div><font color="#000000"><br></font></div><div><pre><code class="php">&lt;?php\r\n$url="http://tiankonguse.com";\r\necho "&lt;script language=\\"javascript\\"&gt;";\r\necho "location.href=\\"$url\\"";\r\necho "&lt;/script&gt;";\r\n?&gt;\r\n\r\n</code></pre></div><div><font color="#000000"><br></font></div><div><font color="#000000">这个就很容易理解了。</font></div><div><font color="#000000">这个就不会产生误解了。</font></div><div><font color="#000000">因为大家都知道javascript是在客户端执行的。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000"><br></font></div><div><font color="#000000">方法三、HTML标记重定向</font></div><div><font color="#000000"><br></font></div><div><pre><code class="php">&lt;?php\r\necho "&lt;META HTTP-EQUIV=\\"refresh\\" CONTENT=\\"5;url=http://tiankonguse.com\\"&gt;";\r\n?&gt;</code></pre></div><div><font color="#000000"><br></font></div><div><font color="#000000">这个也是在客户端跳转的。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000"><br></font></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><br></div>\r\n\r\n\r\n\r\n\r\n', '', '');
INSERT INTO `tk_blog` (`tk_blog_key`, `tk_blog_user`, `tk_blog_datetime`, `tk_blog_title`, `tk_blog_content`, `tk_blog_password`, `tk_blog_category`) VALUES
('tiankonguse1362531959', 'tiankonguse', '2013-03-06 09:05:59', 'AJAX基础', '<div style="text-align: center;"><br></div><div><div><font color="#000000">关于ajax的实验，<a href="http://tiankonguse.com/tools/AJAX.html">见这里</a></font></div></div><div><div><font color="#000000">关于ajax用jquery实现的实验，<a href="http://tiankonguse.com/tools/jquery_AJAX.html">见这里</a></font></div></div><div><font color="#000000"><br></font></div><div><font color="#000000"><br></font></div><div style="text-align: center;"><font color="#000000">XMLHttpRequest 对象</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">所有现代浏览器均支持 XMLHttpRequest 对象（IE5 和 IE6 使用 ActiveXObject）。</font></div><div><font color="#000000">XMLHttpRequest 用于在后台与服务器交换数据。</font></div><div><font color="#000000">这意味着可以在不重新加载整个网页的情况下，对网页的某部分进行更新。</font></div><div><font color="#000000"><br></font></div><div style="text-align: center;"><font color="#000000">创建 XMLHttpRequest 对象</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">创建 XMLHttpRequest 对象的语法：</font></div><div><pre><code class="javascript">variable=new XMLHttpRequest();</code></pre></div><div><font color="#000000">老版本的 Internet Explorer （IE5 和 IE6）使用 ActiveX 对象：</font></div><div><pre><code class="javascript">variable=new ActiveXObject("Microsoft.XMLHTTP");</code></pre></div><div><font color="#000000">为了应对所有的现代浏览器，包括 IE5 和 IE6，请检查浏览器是否支持 XMLHttpRequest 对象。</font></div><div><font color="#000000">如果支持，则创建 XMLHttpRequest 对象。如果不支持，则创建 ActiveXObject ：</font></div><div><font color="#000000">var xmlhttp;</font></div><div><pre><code class="javascript">if (window.XMLHttpRequest){\r\n	// code for IE7+, Firefox, Chrome, Opera, Safari\r\n	xmlhttp=new XMLHttpRequest();\r\n}else{\r\n	// code for IE6, IE5\r\n	xmlhttp=new ActiveXObject("Microsoft.XMLHTTP");\r\n}</code></pre></div><div style="text-align: center;"><font color="#000000">向服务器发送请求</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">XMLHttpRequest 对象用于和服务器交换数据。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">如需将请求发送到服务器，我们使用 XMLHttpRequest 对象的 open() 和 send() 方法：</font></div><div><pre><code class="javascript">xmlhttp.open("GET","/robots.txt",true);</code></pre></div><div><font color="#000000">规定请求的类型、URL 以及是否异步处理请求。</font></div><div><font color="#000000"><span class="Apple-tab-span" style="white-space:pre">	</span>method：请求的类型；GET 或 POST</font></div><div><font color="#000000"><span class="Apple-tab-span" style="white-space:pre">	</span>url：文件在服务器上的位置</font></div><div><font color="#000000"><span class="Apple-tab-span" style="white-space:pre">	</span>async：true（异步）或 false（同步）</font></div><div><pre><code class="javascript">xmlhttp.send();</code></pre></div><div><font color="#000000"><br></font></div><div><font color="#000000">将请求发送到服务器。</font></div><div><font color="#000000"><span class="Apple-tab-span" style="white-space:pre">	</span>string：仅用于 POST 请求</font></div><div><font color="#000000"><br></font></div><div style="text-align: center;"><font color="#000000">GET 还是 POST？</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">与 POST 相比，GET 更简单也更快，并且在大部分情况下都能用。</font></div><div><font color="#000000">然而，在以下情况中，请使用 POST 请求：</font></div><div><font color="#000000">无法使用缓存文件（更新服务器上的文件或数据库）</font></div><div><font color="#000000">向服务器发送大量数据（POST 没有数据量限制）</font></div><div><font color="#000000">发送包含未知字符的用户输入时，POST 比 GET 更稳定也更可靠</font></div><div><font color="#000000"><br></font></div><div><font color="#000000"><br></font></div><div style="text-align: center;"><font color="#000000">GET 请求</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">参数直接写在URL中</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">如果您希望通过 GET 方法发送信息，请向 URL 添加信息：</font></div><div><pre><code class="javascript">xmlhttp.open("GET","http://tiankonguse.com/blog.php?nowPage=3&amp;file=",true);\r\nxmlhttp.send();</code></pre></div><div><font color="#000000"><br></font></div><div style="text-align: center;"><font color="#000000">POST 请求</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">如果需要像 HTML 表单那样 POST 数据，请使用 setRequestHeader() 来添加 HTTP 头。</font></div><div><font color="#000000">然后在 send() 方法中规定您希望发送的数据(和get的参数差不多)。</font></div><div><pre><code class="javascript">xmlhttp.open("POST","http://tiankonguse.com/blog.php",true);\r\nxmlhttp.setRequestHeader("Content-type","application/x-www-form-urlencoded");\r\nxmlhttp.send("nowPage=3&amp;lname=Gates");</code></pre></div><div><font color="#000000">向请求添加 HTTP 头。</font></div><div><font color="#000000"><span class="Apple-tab-span" style="white-space:pre">	</span>header: 规定头的名称</font></div><div><font color="#000000"><span class="Apple-tab-span" style="white-space:pre">	</span>value: 规定头的值</font></div><div><font color="#000000"><br></font></div><div style="text-align: center;"><font color="#000000">url - 请求的网址</font></div><div><font color="#000000"><br></font></div><div style="text-align: center;"><font color="#000000">异步 - True 或 False？</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">AJAX 指的是异步 JavaScript 和 XML（Asynchronous JavaScript and XML）。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">XMLHttpRequest 对象如果要用于 AJAX 的话，其 open() 方法的 async 参数必须设置为 true：</font></div><div><pre><code class="javascript">xmlhttp.open("GET","http://tiankonguse.com/blog.php",true);</code></pre></div><div><font color="#000000"><br></font></div><div><font color="#000000">对于 web 开发人员来说，发送异步请求是一个巨大的进步。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">很多在服务器执行的任务都相当费时。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">AJAX 出现之前，这可能会引起应用程序挂起或停止。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">通过 AJAX，JavaScript 无需等待服务器的响应，而是：</font></div><div><font color="#000000"><span class="Apple-tab-span" style="white-space:pre">	</span>在等待服务器响应时执行其他脚本</font></div><div><font color="#000000"><span class="Apple-tab-span" style="white-space:pre">	</span>当响应就绪后对响应进行处理</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">Async = true</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">当使用 async=true 时，请规定在响应处于 onreadystatechange 事件中的就绪状态时执行的函数：</font></div><div><pre><code class="javascript">xmlhttp.onreadystatechange=function(){\r\n	if (xmlhttp.readyState==4 &amp;&amp; xmlhttp.status==200){\r\n		$(".newdata-ajax").html(xmlhttp.responseText);\r\n	}\r\n}\r\nxmlhttp.open("GET","/robots.txt",true);\r\nxmlhttp.send();</code></pre></div><div><font color="#000000"><br></font></div><div><font color="#000000">Async = false</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">如需使用 async=false，请将 open() 方法中的第三个参数改为 false：</font></div><div><pre><code class="javascript">xmlhttp.open("GET","/robots.txt",false);</code></pre></div><div><font color="#000000"><br></font></div><div><font color="#000000">我们不推荐使用 async=false，但是对于一些小型的请求，也是可以的。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">请记住，JavaScript 会等到服务器响应就绪才继续执行。如果服务器繁忙或缓慢，应用程序会挂起或停止。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">注释：当您使用 async=false 时，请不要编写 onreadystatechange 函数 - 把代码放到 send() 语句后面即可：</font></div><div><pre><code class="javascript">xmlhttp.open("GET","/robots.txt",false);\r\nxmlhttp.send();\r\n$(".newdata-ajax").html(xmlhttp.responseText);</code></pre></div><div><font color="#000000"><br></font></div><div><font color="#000000"><br></font></div><div style="text-align: center;"><font color="#000000">服务器响应</font></div><div><font color="#000000"><br></font></div><div><font color="#000000"><br></font></div><div><font color="#000000">如需获得来自服务器的响应，请使用 XMLHttpRequest 对象的 responseText 或 responseXML 属性。</font></div><div><font color="#000000"><span class="Apple-tab-span" style="white-space:pre">	</span>responseText<span class="Apple-tab-span" style="white-space:pre">	</span>获得字符串形式的响应数据。</font></div><div><font color="#000000"><span class="Apple-tab-span" style="white-space:pre">	</span>responseXML<span class="Apple-tab-span" style="white-space:pre">	</span> &nbsp; &nbsp;获得 XML 形式的响应数据。</font></div><div><font color="#000000"><br></font></div><div style="text-align: center;"><font color="#000000">responseText 属性</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">如果来自服务器的响应并非 XML，请使用 responseText 属性。</font></div><div><font color="#000000">responseText 属性返回字符串形式的响应，因此您可以这样使用：</font></div><div><font color="#000000">$(".newdata-ajax").html(xmlhttp.responseText);</font></div><div><span class="Apple-tab-span" style="white-space:pre"><font color="#000000">	</font></span></div><div><font color="#000000">responseXML 属性</font></div><div><font color="#000000">如果来自服务器的响应是 XML，而且需要作为 XML 对象进行解析，请使用 responseXML 属性</font></div><div><font color="#000000"><br></font></div><div><font color="#000000"><br></font></div><div style="text-align: center;"><font color="#000000">onreadystatechange 事件</font></div><div><span class="Apple-tab-span" style="white-space:pre"><font color="#000000">	</font></span></div><div><font color="#000000">当请求被发送到服务器时，我们需要执行一些基于响应的任务。</font></div><div><font color="#000000">每当 readyState 改变时，就会触发 onreadystatechange 事件。</font></div><div><font color="#000000">readyState 属性存有 XMLHttpRequest 的状态信息。</font></div><div><font color="#000000">下面是 XMLHttpRequest 对象的三个重要的属性：</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">onreadystatechange<span class="Apple-tab-span" style="white-space:pre">	</span></font></div><div><font color="#000000"><span class="Apple-tab-span" style="white-space:pre">	</span>存储函数（或函数名），每当 readyState 属性改变时，就会调用该函数。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000"><br></font></div><div><font color="#000000">readyState<span class="Apple-tab-span" style="white-space:pre">	</span></font></div><div><font color="#000000">存有 XMLHttpRequest 的状态。从 0 到 4 发生变化。</font></div><div><font color="#000000"><span class="Apple-tab-span" style="white-space:pre">	</span>0: 请求未初始化</font></div><div><font color="#000000"><span class="Apple-tab-span" style="white-space:pre">	</span>1: 服务器连接已建立</font></div><div><font color="#000000"><span class="Apple-tab-span" style="white-space:pre">	</span>2: 请求已接收</font></div><div><font color="#000000"><span class="Apple-tab-span" style="white-space:pre">	</span>3: 请求处理中</font></div><div><font color="#000000"><span class="Apple-tab-span" style="white-space:pre">	</span>4: 请求已完成，且响应已就绪</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">status<span class="Apple-tab-span" style="white-space:pre">	</span></font></div><div><font color="#000000"><span class="Apple-tab-span" style="white-space:pre">	</span>200: "OK"</font></div><div><font color="#000000"><span class="Apple-tab-span" style="white-space:pre">	</span>404: 未找到页面</font></div><div><font color="#000000"><br></font></div><div style="text-align: center;"><font color="#000000">使用 Callback 函数</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">callback 函数是一种以参数形式传递给另一个函数的函数。</font></div><div><font color="#000000">如果您的网站上存在多个 AJAX 任务，那么您应该为创建 XMLHttpRequest 对象编写一个标准的函数，并为每个 AJAX 任务调用该函数。</font></div><div><font color="#000000">该函数调用应该包含 URL 以及发生 onreadystatechange 事件时执行的任务（每次调用可能不尽相同）</font></div><div><font color="#000000"><br></font></div><div><font color="#000000"><br></font></div><div><div><div><font color="#000000">关于ajax的实验，<a href="http://tiankonguse.com/tools/AJAX.html">见这里</a></font></div></div><div><div><font color="#000000">关于ajax用jquery实现的实验，<a href="http://tiankonguse.com/tools/jquery_AJAX.html">见这里</a></font></div></div></div><div><span class="Apple-tab-span" style="white-space:pre"><font color="#000000">	</font></span></div><div><span class="Apple-tab-span" style="white-space: pre;"><font color="#000000">	</font></span></div>\r\n\r\n\r\n\r\n\r\n', '', ''),
('tiankonguse1362555853', 'tiankonguse', '2013-03-06 15:44:13', 'cannot find module IP-MIB:At line 0 in none', '<div><font color="#000000">apache log报错：（cannot find module &lt;IP-MIB&gt;:At line 0 in &lt;none&gt;）&nbsp;</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">原因是因为php插件的问题</font></div><div><font color="#000000">解决方法：将php.ini文件中的;extension=php_snmp.dll扩展注释掉就号了</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">但是你可能会说你已经去掉注释了呀。</font></div><div><font color="#000000">在去掉注释的时候，你会看到;extension=php_snmp.dll上面有几句话。</font></div><div><font color="#000000">The MIBS data available in the PHP distribution must be installed.</font></div><div><font color="#000000">意思是某些东西必须安装。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">去这里http://www.php.net/manual/en/snmp.installation.php安装吧。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000"><br></font></div><div><font color="#000000">&nbsp;</font></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><br></div>\r\n\r\n\r\n\r\n\r\n', '', ''),
('tiankonguse1362556050', 'tiankonguse', '2013-03-06 15:47:30', 'PHP Warning: PHP Startup: in Unknown on line ', '<div><font color="#000000">PHP Warning: PHP Startup: in Unknown on line 0</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">some one said he had resolved it adding the PHP folder to the path and restarting the computer..</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">but he''s problem was that he &nbsp;enabled the extension php_mbstring.dll .</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">但是我操作了一遍后没有解决问题。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">还有的人说 php.ini 中的 extension_dir 必须是绝对路径。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">但是我的 extension_dir 本来就是 绝对路径。所有还没有解决问题。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">后来在这里http://blog.csdn.net/cdefg198/article/details/7820462看到了一个方案。</font></div><div><font color="#000000">出现这个 Warning 肯定是由于某个模块引起的，那我们就要先找到这个模块。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">所以我们要一个个注释打开模块、重启服务器，最终来找到出问题的模块。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">我是这把php根目录下的libeay32.dll、ssleay32.dll copy to C:\\WINDOWS\\system32;</font></div><div><font color="#000000">结果出现了很多错误，一大堆模块找不到了。</font></div><div><br></div>\r\n\r\n\r\n\r\n\r\n', '', ''),
('tiankonguse1362556524', 'tiankonguse', '2013-03-06 15:55:24', 'javascrip 中括号的详细含义(大括号、中括号、小括号)', '<div style="text-align: center;"><font color="#000000">javascrip 中括号的详细含义(大括号、中括号、小括号)</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">请结合这篇文章一起学习 <a href="http://tiankonguse.com/blog/tiankonguse1362470077.html">这里</a></font></div><div><font color="#000000"><br></font></div><div><font color="#000000">本文包括 javascript 中大括号的详细含义、javascript 中中括号的详细含义、javascript 中小括号的详细含义、。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">一、{ } 大括号，表示定义一个对象，大部分情况下要有成对的属性和值，或是函数。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">如：var LangShen = {"Name":"Langshen","AGE":"28"};</font></div><div><font color="#000000">上面声明了一个名为“LangShen”的对象，多个属性或函数用,（逗号）隔开.</font></div><div><font color="#000000">因为是对象的属性，所以访问时，应该用.（点）来层层访问：LangShen.Name、LangShen.AGE，当然我们也可以用数组的方式来访问，如：LangShen["Name"]、LangShen["AGE"]，结果是一样的。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">该写法，在JSON数据结构中经常用，除此之外，我们平时写函数组的时候，也经常用到，如：</font></div><div><pre><code class="javascript">var LangShen = {\r\n	Name = function(){\r\n		return "LangShen";\r\n	},\r\n	Age = function(){\r\n		return "28";\r\n	}\r\n}</code></pre></div><div><font color="#000000">调用方式差不多，因为是函数组，所以要加上()，如：alert( LangShen.Name() );</font></div><div><font color="#000000"><br></font></div><div><font color="#000000"><br></font></div><div><font color="#000000">二、[ ]中括号，表示一个数组，也可以理解为一个数组对象。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">如：</font></div><div><pre><code class="javascript">var LangShen = [ "Name","LangShen","AGE","28" ];</code></pre></div><div><font color="#000000">很明显，每个值或函数，都是独立的，多个值之间只用,（逗号）隔开.</font></div><div><font color="#000000">因为是数组对象，所以它等于：</font></div><div><pre><code class="javascript">var LangShen = Array( "Name","LangShen","AGE","28" );</code></pre></div><div><font color="#000000">访问时，也是和数组一样，alert( LangShen[0] );</font></div><div><font color="#000000"><br></font></div><div><font color="#000000"><br></font></div><div><font color="#000000">三、{ } 和[ ] 一起使用，我们前面说到，{ } 是一个对象，[ ] 是一个数组，我们可以组成一个对象数组</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">如：</font></div><div><pre><code class="javascript">var LangShen = {\r\n	"Name":"Langshen",\r\n	"MyWife":[ "LuLu","26" ],\r\n	"MySon":[{"Name":"Son1"},{"Name":"Son2"},{"Name":"Son3"}]\r\n}</code></pre></div><div><font color="#000000"><br></font></div><div><font color="#000000">从上面的结构来看，那个对象里面的第一项是个属性，第二项是一个数组，第三个是包含有多个对象的数组。</font></div><div><font color="#000000">调用起来，也是一层一层访问，对象的属性用.（点）叠加，数组用 [下标] 来访问。</font></div><div><font color="#000000">如：</font></div><div><pre><code class="javascript">alert( LangShen.MySon[1].Name ) ;</code></pre></div><div><font color="#000000"><br></font></div><div><font color="#000000">再来一遍吧！</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">一、大括号｛｝表示对象：</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">javascript供了另外一种简单的方式来创建对象，即大括号（{}）语法：</font></div><div><font color="#000000"><br></font></div><div><pre><code class="javascript">arr = {\r\n	a:5, //对象属性，a是变量名\r\n	b:8,\r\n	c:function(){return this.a + this.b;}, //对象方法\r\n	d:[''a'':1,''b'':2] //对象属性，数组\r\n}</code></pre></div><div><font color="#000000"><br></font></div><div><font color="#000000">通过大括号括住多个属性或方法及其定义（这些属性或方法用逗号隔开），来实现对象的定义，这段代码就直接定义个了具有n个属性或方法的对象，其中属性名和其定义之间用冒号（:）隔开。</font></div><div><font color="#000000"><br></font></div><div><pre><code class="javascript">document.write(arr.c());</code></pre></div><div><font color="#000000"><br></font></div><div><font color="#000000">注意，各属性间用逗号（,）隔开。</font></div><div><font color="#000000">使用这种方式来定义对象，还可以使用字符串作为属性（方法）名，例如：</font></div><div><font color="#000000"><br></font></div><div><pre><code class="javascript">var obj={“001”:”abc”}</code></pre></div><div><font color="#000000"><br></font></div><div><font color="#000000">因为这种简单对象没有通过构造函数创造所以也就没能在对象外添加方法。</font></div><div><font color="#000000">对比构造函数创造的对象：</font></div><div><font color="#000000"><br></font></div><div><pre><code class="javascript">function Test(a,b){\r\n	this.a = a;\r\n	this.b = b;\r\n	this.c = function(){return this.a + this.b;}\r\n}\r\nTest.prototype.d = function another(){\r\n	return this.a * this.b * Math.PI;\r\n};\r\narr = new Test(5,8);\r\ndocument.write(arr.c());\r\n\r\n//输出：13\r\n\r\ndocument.write(arr.d());\r\n\r\n//输出：125.66370614359172</code></pre></div><div><font color="#000000"><br></font></div><div><font color="#000000">二、中括号 [ ] 表示数组：</font></div><div><font color="#000000"><br></font></div><div><pre><code class="javascript">arr = [\r\n	[1,2], //数组\r\n	[''a'',''b''],\r\n	[{c:''a1'',d:''b1''},{e:''a2'',f:''b2''}] //对象\r\n];\r\nfor(key in arr){\r\n	for(chikey in arr[key]){\r\n		document.write(chikey + "=&gt;" + arr[key][chikey] + "&lt;br /&gt;");\r\n	}\r\n}\r\n/*\r\n输出：\r\n0=&gt;1\r\n1=&gt;2\r\n0=&gt;a\r\n1=&gt;b\r\n0=&gt;[object Object]\r\n1=&gt;[object Object]\r\n*/\r\n\r\ndocument.write(arr[2][1].e);\r\n\r\n//输出：a2</code></pre></div><div><font color="#000000"><br></font></div><div><font color="#000000">这里，数组的第三组是未命名的对象，可以用arr[2][1].e的方式指定访问属性。当然也可以遍历：</font></div><div><pre><code class="javascript">for(key in arr[2]){\r\n	for(val in arr[2][key]){\r\n		document.write(val + "=&gt;" + arr[2][key][val] + "&lt;br /&gt;");\r\n	}\r\n}\r\n/*\r\n输出：\r\nc=&gt;a1\r\nd=&gt;b1\r\ne=&gt;a2\r\nf=&gt;b2\r\n*/</code></pre></div><div><font color="#000000"><br></font></div><div><font color="#000000">三、数组与对象</font></div><div><font color="#000000">在js中，上述的对象与数组的创建很相似，有人称第一种方式为js的关联数组。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">看完了这篇文章，可以接着看这篇文章来进一步加深对 javascript 的 括号 的理解。<a href="http://tiankonguse.com/blog/tiankonguse1362470077.html">这里</a></font></div>\r\n\r\n\r\n\r\n\r\n', '', ''),
('tiankonguse1362556698', 'tiankonguse', '2013-03-06 15:58:18', 'javascript 的 execCommand 命令', '<div style="text-align: center;"><font color="#000000">javascript 的 execCommand 命令</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">execCommand是一个对当前文档，当前选择或者给出范围的命令。</font></div><div><font color="#000000">参数： sCommand[,交互方式,动态参数]</font></div><div><font color="#000000">sCommand为指令参数</font></div><div><font color="#000000">交互方式为true，则显示对话框,false,则不显示对话框</font></div><div><font color="#000000">动态参数一般为属性值</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">yes为 google 浏览器支持， Y 为 firefox 浏览器支持。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">BackColor &nbsp; &nbsp; &nbsp; &nbsp;yes &nbsp; &nbsp; Y</font></div><div><font color="#000000">Bold 粗体 &nbsp; &nbsp; &nbsp; &nbsp;yes &nbsp; &nbsp; Y</font></div><div><font color="#000000">Copy</font></div><div><font color="#000000">contentReadOnly &nbsp; &nbsp; &nbsp;Y</font></div><div><font color="#000000">CreateBookMark</font></div><div><font color="#000000">CreateLink &nbsp;超链接 &nbsp; &nbsp; &nbsp; &nbsp;yes &nbsp; &nbsp; Y</font></div><div><font color="#000000">Cut&nbsp;</font></div><div><font color="#000000">Delete &nbsp;删除当前选中区 &nbsp; &nbsp; &nbsp; &nbsp;yes &nbsp; &nbsp; Y</font></div><div><font color="#000000">DecreaseFontSize &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Y</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">enableInlineTableEdiying &nbsp; &nbsp; &nbsp;Y</font></div><div><font color="#000000">enableObjectResizing &nbsp; &nbsp; &nbsp;Y</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">FontName,false,fn &nbsp; 字体 &nbsp; &nbsp; &nbsp; &nbsp;yes &nbsp; &nbsp; Y</font></div><div><font color="#000000">FontSize,false,fs 字大小 &nbsp; &nbsp; &nbsp; &nbsp;yes &nbsp; &nbsp; Y</font></div><div><font color="#000000">ForeColor 文本前景色，也就是文本色 &nbsp; &nbsp; &nbsp; &nbsp;yes &nbsp; &nbsp; Y</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">formatBlock1 &nbsp; &nbsp; &nbsp; &nbsp; yes &nbsp; &nbsp; Y</font></div><div><font color="#000000">forwardDelete &nbsp; &nbsp; &nbsp; &nbsp; yes</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">hiliteColor &nbsp; &nbsp; &nbsp; &nbsp; yes</font></div><div><font color="#000000">heading &nbsp; &nbsp; &nbsp;Y</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">increaseFontSize &nbsp; &nbsp; &nbsp;Y</font></div><div><font color="#000000">Indent 缩进 &nbsp; &nbsp; &nbsp; &nbsp;yes &nbsp; &nbsp; Y</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">insertBrOnReturn &nbsp; &nbsp; &nbsp;Y</font></div><div><font color="#000000">InsertButton,false,''name or id'',然后可以由js控制</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">InsertFieldset</font></div><div><font color="#000000">InsertHorizontalRule 水平线 &nbsp; &nbsp; &nbsp; &nbsp;yes &nbsp; &nbsp; Y</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">InsertIFrame &nbsp; &nbsp; &nbsp; &nbsp;yes</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">InsertImage ,,"id",true :有图片，false,无图片 &nbsp; &nbsp; yes Y</font></div><div><font color="#000000">InsertHTML &nbsp; &nbsp; &nbsp; &nbsp; yes &nbsp; &nbsp; Y</font></div><div><font color="#000000">insertLineBreak &nbsp; &nbsp; &nbsp; &nbsp; yes</font></div><div><font color="#000000">InsetrtInputCheckBox</font></div><div><font color="#000000">InsertInputButton</font></div><div><font color="#000000">InsertInputFileUpload</font></div><div><font color="#000000">InsertInputImage</font></div><div><font color="#000000">InsertInputPassword</font></div><div><font color="#000000">InsertInputRadio</font></div><div><font color="#000000">InsertInputHidden</font></div><div><font color="#000000">InsertInputReset</font></div><div><font color="#000000">InsertInputSubmit</font></div><div><font color="#000000">InserInputText</font></div><div><font color="#000000">InsertMarquee</font></div><div><font color="#000000">InsertInputSelectListBox</font></div><div><font color="#000000">InsertOrderedList &nbsp; &nbsp; &nbsp; &nbsp;yes &nbsp; &nbsp; Y</font></div><div><font color="#000000">InsertSelectDropdown</font></div><div><font color="#000000">InsertMarquee true</font></div><div><font color="#000000">InsertTextArea</font></div><div><font color="#000000">insertText &nbsp; &nbsp; &nbsp; &nbsp; yes</font></div><div><font color="#000000">InsertUnorderdList &nbsp; &nbsp; &nbsp; &nbsp; yes &nbsp; &nbsp; Y</font></div><div><font color="#000000">InsertParagraph 用换行覆盖当前选中区 &nbsp; &nbsp; &nbsp; &nbsp;yes &nbsp; &nbsp; Y</font></div><div><font color="#000000">Italic 斜体 &nbsp; &nbsp; &nbsp; &nbsp;yes &nbsp; &nbsp; Y</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">JustifyCenter 格式化 &nbsp; &nbsp; &nbsp; &nbsp;yes &nbsp; &nbsp; Y</font></div><div><font color="#000000">JustifyFull &nbsp; &nbsp; &nbsp; &nbsp;yes &nbsp; &nbsp; Y</font></div><div><font color="#000000">JustifyLeft &nbsp; &nbsp; &nbsp; &nbsp;yes &nbsp; &nbsp; Y</font></div><div><font color="#000000">JustifyNone &nbsp; &nbsp; &nbsp; &nbsp;yes</font></div><div><font color="#000000">JustifyRight &nbsp; &nbsp; &nbsp; &nbsp;yes &nbsp; &nbsp; Y</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">LiveResize</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">MultipleSelection</font></div><div><font color="#000000">Open</font></div><div><font color="#000000">Outdent 减少缩进 &nbsp; &nbsp; &nbsp; &nbsp;yes &nbsp; &nbsp; Y</font></div><div><font color="#000000">OverWrite</font></div><div><font color="#000000">Paste</font></div><div><font color="#000000">Print</font></div><div><font color="#000000">Redo &nbsp; &nbsp; Y</font></div><div><font color="#000000">Refresh,false,0</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">RemoveFormat &nbsp; &nbsp; &nbsp; &nbsp;yes &nbsp; &nbsp; Y</font></div><div><font color="#000000">SaveAs , false,"路径"</font></div><div><font color="#000000">SelectAll &nbsp; &nbsp; &nbsp; &nbsp;yes &nbsp; &nbsp; Y</font></div><div><font color="#000000">Stop</font></div><div><font color="#000000">StrikeThough &nbsp; &nbsp; &nbsp; &nbsp;yes &nbsp; &nbsp; Y</font></div><div><font color="#000000">subscript &nbsp; &nbsp; &nbsp; &nbsp; yes &nbsp; &nbsp; Y</font></div><div><font color="#000000">SuperScript &nbsp; &nbsp; &nbsp; &nbsp;yes &nbsp; &nbsp; Y</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">Undo &nbsp; &nbsp; Y</font></div><div><font color="#000000">Unlink 删除超链接接 &nbsp; &nbsp; &nbsp; &nbsp;yes &nbsp; &nbsp; Y</font></div><div><font color="#000000">useCSS &nbsp; &nbsp; &nbsp;Y</font></div><div><font color="#000000">styleWithCSS &nbsp; &nbsp; &nbsp;Y</font></div><div><font color="#000000">UnderLine &nbsp; &nbsp; &nbsp; &nbsp; yes &nbsp; &nbsp; Y</font></div><div><font color="#000000">Unselect&nbsp;</font></div><div><font color="#000000"><br></font></div><div><font color="#000000"><br></font></div><div><font color="#000000"><br></font></div><div><font color="#000000"><br></font></div><div><font color="#000000"><br></font></div><div><font color="#000000"><br></font></div><div><font color="#000000"><br></font></div><div><font color="#000000"><br></font></div><div><font color="#000000"><br></font></div><div><font color="#000000"><br></font></div><div><font color="#000000"><br></font></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><br></div>\r\n\r\n\r\n\r\n\r\n', '', ''),
('tiankonguse1362556945', 'tiankonguse', '2013-03-06 16:02:25', 'Javascript 中 void(0) 的用法', '<div style="text-align: center;"><font color="#000000">Javascript 中 void(0)的用法</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">Javascript中void是一个操作符，该操作符指定要计算一个表达式但是不返回值。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">void 操作符用法格式如下：</font></div><div><font color="#000000">1. javascript:void (expression)</font></div><div><font color="#000000">2. javascript:void expression</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">expression 是一个要计算的 Javascript 标准的表达式。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">表达式外侧的圆括号是选的，但是写上去是一个好习惯。(实现版本Navigator 3.0)</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">你以使用 void 操作符指定超级链接。</font></div><div><font color="#000000"><br></font></div><div>实际上，并不建议使用 在超链接上使用void(0) 。</div><div><br></div><div>至于如何避免void(0),请看这篇文章 <a href="http://tiankonguse.com/blog/tiankonguse1362557696.html">这里</a></div><div><font color="#000000"><br></font></div><div>为什么要避免 void(0) ,请看这篇文章 <a href="http://tiankonguse.com/blog/tiankonguse1362558199.html">这里</a></div><div><font color="#000000"><br></font></div><div><font color="#000000">表达式会被计算但是不会当前文档处装入任何内容。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">下面的代码创建了一个超级链接，当用户以后不会发生任何事。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">当用户链接时，void(0) 计算为 0，但 Javascript 上没有任何效果。</font></div><div><font color="#000000"><br></font></div><div><pre><code class="xml">&lt;A HREF="javascript:void(0)"&gt;单此处什么也不会发生&lt;/A&gt;</code></pre></div><div><font color="#000000"><br></font></div><div><font color="#000000">下面的代码创建了一个超级链接，用户单时会提交表单。</font></div><div><font color="#000000"><br></font></div><div><pre><code class="xml">&lt;A HREF="javascript:void(document.form.submit())"&gt;单此处提交表单&lt;/A&gt;\r\n</code></pre></div><div><font color="#000000"><br></font></div><div style="text-align: center;"><font color="#000000">a href=#与 a href=javascript:void(0) 的区别</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">#包含了一个位置信息</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">默认的锚是#top 也就是网页的上端</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">而javascript:void(0) &nbsp; 仅仅表示一个死链接</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">这就是为什么有的时候页面很长浏览链接明明是#是</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">跳动到了页首</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">而javascript:void(0) 则不是如此</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">所以调用脚本的时候最好用void(0)</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">或者&lt;input onclick&gt;</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">&lt;div onclick&gt;等</font></div><div><font color="#000000"><br></font></div><div><pre><code class="xml">\r\n&lt;a href=”javascript:void(0)”&gt;单击此处什么也不会发生&lt;/a&gt;  </code></pre></div><div><font color="#000000"><br></font></div><div><font color="#000000">也就是说，要执行某些处理，但是不整体刷新页面的情况下，可以使用void(0),但是在需要对页面进行refresh的情况下，那就要仔细了。</font></div><div><font color="#000000"><br></font></div><div><pre><code class="xml">&lt;a href=”javascript:void(document.form.submit())”&gt;  </code></pre></div><div><font color="#000000"><br></font></div><div><font color="#000000">其实我们可以用上面的代码，这句话会进行一次submit操作。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">那什么情况下用void(0)比较多呢，无刷新，当然是Ajax了，看一下 Ajax的web页面的话，一般都会看到有很多的void(0)，</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">所以在使用void(0)之前,最好先想一想,这个页面是否需要整体刷新。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000"><br></font></div><div><font color="#000000">链接的几种办法</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">1.</font></div><div><pre><code class="javascript">window.open(''''url'''')</code></pre></div><div><font color="#000000"><br></font></div><div><font color="#000000">2.用自定义函数</font></div><div><font color="#000000"><br></font></div><div><pre><code class="xml">&lt;script&gt;\r\n function openWin(tag,obj){\r\n     obj.target="_blank";\r\n     obj.href = "blog.php?blogid="+tag;\r\n     obj.click();\r\n }\r\n&lt;/script&gt;\r\n\r\n&lt;a href="javascript:void(0)" onclick="openWin(3,this)"&gt;javascrip&lt;/a&gt;\r\n\r\n\r\nwindow.location.href=""\r\n\r\n&lt;script type="text/javascript"&gt;     \r\n    function goUrl(x){     \r\n        window.location.href=x;     \r\n    }     \r\n&lt;/script&gt;     \r\n  \r\n&lt;a href="javascript:;" onclick="javascript:goUrl(''http://tiankonguse.com'');"&gt;跳转1&lt;/a&gt;  \r\n     \r\n&lt;a href="javascript:void(0);" onclick="javascript:goUrl(''http://tiankonguse.com'');"&gt;跳转2&lt;/a&gt;  \r\n     \r\n&lt;a href="javascript:void(0);" onclick="javascript:goUrl(''http://tiankonguse.com'');return false;"&gt;跳转3&lt;/a&gt;     \r\n  \r\n&lt;a href="#" onclick="javascript:goUrl(''http://tiankonguse.com'');"&gt;跳转4&lt;/a&gt;     \r\n  \r\n&lt;a href="###" onclick="javascript:goUrl(''http://tiankonguse.com'');"&gt;跳转5&lt;/a&gt; </code></pre></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><br></div>\r\n\r\n\r\n\r\n\r\n', '', ''),
('tiankonguse1362557696', 'tiankonguse', '2013-03-06 16:14:56', 'How to Avoid Javascript Void', '<div style="text-align: center;"><font color="#000000">How to Avoid Javascript Void</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">The "javascript:void(0);" statement is often when a link has no URL attached to it but is used to reference a JavaScript function.&nbsp;</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">If there is no URL attached to the link, the browser does not know what to do and returns you to the top of the page.&nbsp;</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">Using "javascript:void(0)" in this instance can cause certain browsers to present your web page in unusual ways.&nbsp;</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">Instead, you should use the "return false;" statement to tell the browser not to look for the URL.</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">Instructions</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">1 Open the document in any text editor.</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">2 Locate the "javascript:void(0)" references within the document.</font></div><div><span style="color: rgb(0, 0, 0); line-height: 1.333;"><br></span></div><div><span style="color: rgb(0, 0, 0); line-height: 1.333;">Replace the links with the pound symbol (#) with the syntax "&lt;a href="#"''&gt;."</span></div><div><font color="#000000"><br></font></div><div><font color="#000000">4 Add the "return false" declaration to the statement.&nbsp;</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">The entire link reference would look like:</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">&lt;a href="a" onClick="callFunction();return false;"&gt;Link&lt;/a&gt;</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">Replace "callFunction()" with the name of your function.</font></div><div><br></div><div><font color="#000000">5 Save and close the file.</font></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><br></div>\r\n\r\n\r\n\r\n\r\n', '', ''),
('tiankonguse1362558199', 'tiankonguse', '2013-03-06 16:23:19', 'a标签中的href,onclick,#,javascript void简要分析', '<div style="text-align: center;"><font color="#000000">a标签中的href,onclick,#,javascript void简要分析</font></div><div><font color="#000000"><br></font></div><div><pre><code class="xml">&lt;script type="text/javascript"&gt;\r\n	window.onbeforeunload=function(){\r\n		alert("onbeforeunload event...");\r\n		//return false;\r\n	}\r\n&lt;/script&gt;\r\n&lt;a href="#" onclick="return true;"&gt;测试1&lt;/a&gt;&lt;br/&gt;\r\n&lt;a href="javascript:void(0)" onclick="return true;"&gt;测试2&lt;/a&gt;&lt;br/&gt;\r\n&lt;a href="javascript:void(0)" onclick="return false;"&gt;测试3&lt;/a&gt;&lt;br/&gt;\r\n&lt;a href="javascript:void(alert(''test 4....''))" onclick="return true;"&gt;测试4&lt;/a&gt;&lt;br/&gt;\r\n&lt;a href="javascript:void(alert(''test 5....''))" onclick="return false;"&gt;测试5&lt;/a&gt;&lt;br/&gt;</code></pre></div><div><font color="#000000"><br></font></div><div><font color="#000000">&nbsp;在开发过程中，经常会使用测试1&lt;a href=''#'' onclick=''fun();return false;''/&gt;这种方式来触发javascript事件而不改变当前链接.</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">或者测试2&lt;a href="javascript:void(0)" onclick="return true;"&gt;测试2&lt;/a&gt;这种方式来建立死链接。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">但是只要看过&lt;<a href="http://tiankonguse.com/blog/tiankonguse1362557696.html">How to Avoid Javascript Void</a>》和《<a href="http://tiankonguse.com/blog/tiankonguse1362235084.html">How to Create Pop-Up Windows</a>》这2篇文章后就能发现，作者更赞同使用测试1的方式而不是测试2，我也是认同作者的观点。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">在web标准中也是不建议使用测试2的方式的，但是测试2javascript:void(0)伪协议也会有bug存在，会使gif动画停止播放。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">在测试2的案例中，我们还能看到，点击事件触发的时候（调用顺序：onclick-&gt;window.onbeforeunload-&gt;href），而测试1却没有，这是因为void运算符在执行之前会调用window.onbeforeunload方法</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">对于void运算符（void只做运算，返回结果为undefined）,所以在调用到href时遇到void运算符的时候，可能就会产生一些bug</font></div><div><br></div><div><font color="#000000">&nbsp; &nbsp; 但是使用测试1的方式href=''#'' onclick中加上return false，也会存在问题，导致点击链接页面返回顶部.</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">这是由于#号默认锚点为#top,点击后重新定位到top锚点位置，当然可以自己再重新定义一个top锚点，但是这也不能很好解决问题，仍然也存在定位不准。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">有些朋友喜欢使用####来替换#(#一般为2到6个，大多都取4个)。无论#几个都是会存在这个bug的，原因同上。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">点击链接导致页面返回顶部也可以采用span标签替换a标签来解决，但是还可以不改变标签，只需讲#用#this替换即可解决问题,也可以采用其它锚点</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">&lt;a href=''#this'' onclick=''fun();return false;''/&gt;</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">&nbsp;</font></div><div><font color="#000000">另：当window.onbeforeunload中return false的时候将会有意想不到的收获。提示“确实要离开页面吗？确定...取消...”</font></div><div><span class="Apple-tab-span" style="white-space: pre;"><font color="#000000">	</font></span></div>\r\n\r\n\r\n\r\n\r\n', '', ''),
('tiankonguse1362558780', 'tiankonguse', '2013-03-06 16:33:00', '(请忽略这篇文章)学习 javascript 正则表达式 的实验(2)', '<div><font color="#000000"><br></font></div><div><pre><code class="javascript">//\r\n\r\n/((?:\\((?:\\([^()]+\\)|[^()]+)+\\)|\\[(?:\\[[^\\[\\]]*\\]|[''"][^''"]*[''"]|[^\\[\\]''"]+)+\\]|\\\\.|[^ &gt;+~,(\\[\\\\]+)+|[&gt;+~])(\\s*,\\s*)?((?:.|\\r|\\n)*)/g\r\n\r\n//</code></pre></div><div><font color="#000000">分析图如下。</font></div><div><font color="#000000">是两层嵌套括号的序列，加上一个逗号，再加上一个字符</font></div><div><pre><code class="sql">/\r\n\r\n(\r\n	(?:\r\n		\\(\r\n			(?:\r\n				\\( [^()]+ \\)\r\n				|\r\n				[^()]+\r\n			)+\r\n		\\)\r\n		|\r\n		\\[\r\n			(?:\r\n				\\[ [^\\[\\]]* \\]\r\n				|\r\n				[''"][^''"]*[''"]\r\n				|\r\n				[^\\[\\]''"]+\r\n			)+\r\n		\\]\r\n		|\r\n		\\\\ . \r\n		|\r\n		[^ &gt;+~,(\\[\\\\]+\r\n	)+\r\n	|\r\n	[&gt;+~]\r\n)\r\n(\r\n	\\s*,\\s*\r\n)?\r\n(\r\n	(?:\r\n		.\r\n		|\r\n		\\r\r\n		|\r\n		\\n\r\n	)*\r\n)\r\n\r\n/g;</code></pre></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><br></div>', '', ''),
('tiankonguse1362559295', 'tiankonguse', '2013-03-06 16:41:35', '(请忽略这篇文章)学习 javascript 正则表达式 的实验(3)', '<div><font color="#000000"><br></font></div><div><pre><code class="javascript">//\r\n\r\n/\\\\(?:["\\\\\\/bfnrt]|u[0-9a-fA-F]{4})/g,\r\n\r\n//\r\n</code></pre></div><div><font color="#000000"><br></font></div><div><font color="#000000">分析图如下</font></div><div><font color="#000000">是转义字符以及十六进制数</font></div><div><pre><code class="javascript">/\r\n	\\\\ (?:\r\n			["\\\\\\/bfnrt]\r\n			|\r\n			u[0-9a-fA-F]{4}\r\n		)\r\n/g</code></pre></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><br></div>\r\n\r\n\r\n\r\n\r\n', '', ''),
('tiankonguse1362560981', 'tiankonguse', '2013-03-06 17:09:41', '(请忽略这篇文章)学习 javascript object(对象) 的实验(4)', '<pre><code class="javascript">\r\n// Create a variable called add and store a function\r\n// in it that adds two numbers.\r\nvar add = function (a, b) {\r\n    return a + b;\r\n};\r\n\r\n\r\nvar sum = add(3, 4); // sum is 7\r\n\r\n// Make an array of 2 numbers and add them.\r\nvar array = [5, 4];\r\nvar sum = add.apply(null, array); // sum is 7\r\n\r\n\r\n\r\n// Create myObject. It has a value and an increment\r\n// method. The increment method takes an optional\r\n// parameter. If the argument is not a number, then 1\r\n// is used as the default.\r\n\r\nvar myObject = {\r\n    value: 0,\r\n    increment: function (inc) {\r\n        this.value += typeof inc === ''number'' ? inc : 1;\r\n    }\r\n};\r\n\r\n\r\nmyObject.increment( );\r\n\r\nmyObject.increment(2);\r\n\r\n\r\n\r\n// Augment myObject with a double method.\r\nmyObject.double = function ( ) {\r\n    var that = this; // Workaround.\r\n    \r\n    var helper = function ( ) {\r\n    \r\n        that.value = add(that.value, that.value);\r\n    };\r\n    helper( ); // Invoke helper as a function.\r\n};\r\n\r\n// Invoke double as a method.\r\nmyObject.double( );\r\n\r\n</code></pre>\r\n\r\n\r\n\r\n\r\n', '', '');
INSERT INTO `tk_blog` (`tk_blog_key`, `tk_blog_user`, `tk_blog_datetime`, `tk_blog_title`, `tk_blog_content`, `tk_blog_password`, `tk_blog_category`) VALUES
('tiankonguse1362561267', 'tiankonguse', '2013-03-06 17:14:27', '(请忽略这篇文章)html正则表达式学习记录', '<div style="text-align: center;"><div><font color="#000000">html正则表达式学习记录</font></div><div style="text-align: left;"><pre><code class="javascript">\r\nvar text = ''&lt;html&gt;&lt;body bgcolor=linen&gt;&lt;p&gt;This is  &lt;b&gt; &lt;a&gt;bold0&lt;/a&gt; &lt;/b&gt; &lt;b&gt; &lt;a&gt;bold1&lt;/a&gt; &lt;/b&gt; &lt;b&gt; &lt;a&gt;bold2&lt;/a&gt; &lt;/b&gt; !&lt;\\/p&gt;&lt;\\/body&gt;&lt;\\/html&gt;'';	\r\n\r\n//删除所有标签的属性\r\nvar reg1 = /&lt;([_a-zA-Z0-9]+)[^&gt;]*&gt;/g;\r\nvar t=text.replace(reg1, ''&lt;$1&gt;'');\r\n\r\n/*\r\n&lt;html&gt;&lt;body&gt;&lt;p&gt;This is  &lt;b&gt; &lt;a&gt;bold0&lt;/a&gt; &lt;/b&gt; &lt;b&gt; &lt;a&gt;bold1&lt;/a&gt; &lt;/b&gt; &lt;b&gt; &lt;a&gt;bold2&lt;/a&gt; &lt;/b&gt; !&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;\r\n*/\r\n\r\n\r\n\r\n\r\n\r\n//如果需要的标签内部没有嵌套标签，则删除非需要的标签\r\nvar newcode = /(?:(&lt;[^b\\/][^&gt;\\/]*&gt;)|(&lt;b[^&gt;]+&gt;))|(?:(&lt;\\/[^b][^&gt;]*&gt;)|(&lt;\\/b[^&gt;]+&gt;))/g;\r\nvar tt1 = t.replace(newcode,"");\r\n\r\n\r\n/*\r\nThis is  &lt;b&gt; bold0 &lt;/b&gt; &lt;b&gt; bold1 &lt;/b&gt; &lt;b&gt; bold2 &lt;/b&gt; !\r\n*/\r\n\r\n//如果需要的标签内部有嵌套标签，则删除非需要的标签\r\nvar newcode = /(?:&lt;b&gt;([^&lt;]|(&lt;[^\\/][^&gt;]*&gt;)|(&lt;\\/[^b]&gt;))*&lt;\\/b&gt;)/g;\r\nvar tt2 = t.match(newcode);\r\n\r\ntt2\r\n\r\n\r\n/*\r\n&lt;b&gt; &lt;a&gt;bold0&lt;/a&gt; &lt;/b&gt;,&lt;b&gt; &lt;a&gt;bold1&lt;/a&gt; &lt;/b&gt;,&lt;b&gt; &lt;a&gt;bold2&lt;/a&gt; &lt;/b&gt;\r\n*/\r\n\r\n\r\n\r\n\r\n// Break a simple html text into tags and texts.\r\n// (See string.replace for the entityify method.)\r\n// For each tag or text, produce an array containing\r\n// [0] The full matched tag or text\r\n// [1] The /, if there is one\r\n// [2] The tag name\r\n// [3] The attributes, if any\r\nvar text = ''&lt;html&gt;&lt;body bgcolor=linen&gt;&lt;p&gt;'' +\r\n''This is &lt;b&gt;bold&lt;\\/b&gt;!&lt;\\/p&gt;&lt;\\/body&gt;&lt;\\/html&gt;'';\r\nvar tags = /[^&lt;&gt;]+|&lt;(\\/?)([A-Za-z]+)([^&lt;&gt;]*)&gt;/g;\r\nvar a, i;\r\nwhile ((a = tags.exec(text))) {\r\n	for (i = 0; i &lt; a.length; i += 1) {\r\n		document.writeln((''// ['' + i + ''] '' + a[i]).entityify( ));\r\n	}\r\n	document.writeln( );\r\n}\r\n</code></pre></div></div>\r\n\r\n\r\n\r\n\r\n', '', ''),
('tiankonguse1362654762', 'tiankonguse', '2013-03-07 19:12:42', 'jQuery 学习之文档就绪函数', '<div><br></div><div>在 javascript 中，我们经常遇到某些&nbsp;<span style="line-height: 1.333;">javascript</span><span style="line-height: 1.333;">&nbsp; 有时候无效，有时候有效，但又找不到错误。</span></div><div><span style="line-height: 1.333;"><br></span></div><div><span style="line-height: 1.333;">这是可以考虑是否因为文档没有加载完全，要操作的元素尚未加载完全。</span></div><div><br></div><div>使用方法：</div><div><br></div><div><pre><code class="javascript">$(document).ready(function(){\r\n\r\n--- jQuery functions go here ----\r\n\r\n});</code></pre></div><div><font color="#000000"><br></font></div><div><br></div>\r\n\r\n\r\n', '', ''),
('tiankonguse1362704273', 'tiankonguse', '2013-03-08 08:57:53', 'mysql : Incorrect string value: for column  a', '<div><font color="#000000">mysql : Incorrect string value: ''\\xE6\\x88\\x8F'' for column ''name'' at row 1</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">出现这个问题，知道是因为中文编码的问题。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">现在数据库的数据一般都是用 utf8 格式。</font></div><div><font color="#000000">可是我们建表时如果不指定编码格式，默认情况下可能是其他的编码格式(MySQL默认编码貌似是latin1)。</font></div><div><font color="#000000">然后输入中文时就不可避免的遇到这个问题了。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">先说说解决方法吧。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">数据删除：</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">如果数据不重要的话，可以把表删除了重新建表。</font></div><div><font color="#000000">建表时指定相关的编码。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">数据不变：</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">但是数据重要修改的表又少的话，可以使用</font></div><div><pre><code class="sql">alter table tablename convert to character set utf8 </code></pre></div><div><font color="#000000">转换需要插入汉字的数据表编码为utf8即可.</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">但是表较多的话，就是用MYSQLDUMP备份出数据，重新建立表，再导入数据</font></div><div><font color="#000000"><br></font></div><div><font color="#000000"><br></font></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><br></div>', '', ''),
('tiankonguse1362726890', 'tiankonguse', '2013-03-08 15:14:50', '不能 设置默认程序 的解决方法', '<div style="text-align: center;"><font color="#000000">不能 设置默认程序 的解决方法</font></div><div><font color="#000000"><br></font></div><div><font color="#000000"><br></font></div><div><font color="#000000">一般情况下，可以通过"打开方式"-&gt;"选择默认程序"-&gt;"浏览"-&gt;找到要关联的默认程序。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">但是，有时候我们通过上面的步骤不能设置默认程序。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">这是，我们可以通过修改注册表来设置。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">我们假设要设置的类型是 .xxx</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">1、在搜索框输入 regedit.exe，运行注册表，找到HKEY_CLASSES_ROOT\\.xxx项，右边的默认数值是“xxx_auto_file”.</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">找到已经修改的电脑，查看那个电脑的这里的值时多少，然后修改为一样的即可。</font></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><br></div>\r\n\r\n\r\n', '', ''),
('tiankonguse1362796830', 'tiankonguse', '2013-03-09 10:40:30', 'How to Uninstall Sweetpacks Toolbar and Searc', '<div style="text-align: center;"><font color="#000000">How to Uninstall Sweetpacks Toolbar and Search Infection?</font></div><div><font color="#000000"><br></font></div><div><span style="color: rgb(0, 0, 0); line-height: 1.333;">这篇文章转自这里</span><font color="#000000"><a href="http://forums.anvisoft.com/viewtopic-56-2184-0.html">http://forums.anvisoft.com/viewtopic-56-2184-0.html</a></font></div><div><font color="#000000"><br></font></div><div><font color="#000000">You notice that Sweetpacks Search and Sweetpacks toolbar come all of a sudden to your browser and becomes stubborn? It is annoying that the browser hijacking. Read more in this article to handle it.</font></div><div><font color="#000000"><br></font></div><div><font color="#000000"><b>What is Sweetpacks Search and Sweetpacks Toolbar?</b></font></div><div><font color="#000000"><br></font></div><div><font color="#000000">Sweetpacks Search(search.sweetpacks.com) and Sweetpacks Toolbar is typically an adware program that may come bundled with other software you may download from distrusted server. Without asking for your consent, the Sweetpacks Toolbar just infiltrates to modify browser settings like homepage, search engine, toolbar/extension, etc to enable it integrated with your Internet browser. Moreover, the adware will place some icons on the menu bar that may look useful, when in fact, you do not need them at all. It serves redundant function on the browser.&nbsp;</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">Beside the toolbar, Sweetpacks Search will override the existing home page. The adware places a search box that resolves to search.sweetpacks.com. It contains own search engine that many user called worthless. Using Sweetpacks Search gives undesirable results. It reveals irrelevant links that are way beyond the search term. Along with useless result is too much display of advertisement aiming to earn a pay-per-click revenue for the site owner.&nbsp;</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">To remove Sweetpacks Toolbar and Sweetpacks Search from the affected browser, you need to remove add-ons and extensions individually. First off, you also need running a scan of effective anti-malware program and this also helps find and delete components that are hidden in the system. Follow below steps to remove the adware Sweetpacks Toolbar and Sweetpacks Search. Good luck.&nbsp;</font></div><div><font color="#000000"><br></font></div><div><font color="#000000"><b>Symptoms</b></font></div><div><font color="#000000"><br></font></div><div><font color="#000000">Sweetpacks Search replaces the home page with its own search box. It usually use the search engine from address http://search.sweetpacks.com</font></div><div><br></div><div><font color="#000000">Sweetpacks Toolbar adds many useless toolbar icons on the affected Internet browser.</font></div><div><br></div><div><font color="#000000"><br></font></div><div><font color="#000000"><b>How to Remove Sweetpacks Toolbar and Sweetpacks Search</b>(search.sweetpacks.com removal)</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">Step1: Uninstall Sweetpacks Toolbar and Search from Windows Control Panel</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">1. Go to Start &gt; Control Panel</font></div><div><font color="#000000">2. Under Programs, click on Uninstall a program. It will open a program and features window where-in you can uninstall, change, or repair installed software.</font></div><div><font color="#000000">3. Look for the name Sweetpacks Toolbar and Search or any related term. Please note that the adware may change the title anytime. Once found, please select the item you wanted to remove.</font></div><div><font color="#000000">NOTE: Be aware that Sweetpacks Toolbar and Search may use other names or terms such as the following:</font></div><div><font color="#000000">Sweetpacks, SweetIM, and 1clickdownloader</font></div><div><font color="#000000">4. Click on Uninstall button to remove the program automatically.</font></div><div><font color="#000000">5. If it prompts for confirmation, please click OK to proceed.</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">Step 2: Scan the Computer with Anti-malware</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">To remove Sweetpacks Toolbar and Search, download Anvi Smart Defender anti-Malware below. This tool is effective in getting rid of Trojans, viruses and malware.</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">Download Anvi Smart Defender: www.anvisoft.com/software/asd/</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">1. After downloading, please install the program using the default settings.</font></div><div><font color="#000000">2. At the end of the installation, please make sure that it will download necessary updates.</font></div><div><font color="#000000">3. Once update has completed. The tool will launch.</font></div><div><font color="#000000">4. Thoroughly scan the computer and remove all threats detected by this anti-malware program.</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">Step3: Remove Sweetpacks Toolbar and Search from IE, Firefox, Google Chrome</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">If the hijacker was not removed properly during the scan, you can use this guide to uninstall it from the computer. We detail this guide to remove this unknown search program from various Internet browsers including Internet Explorer, Mozilla Firefox and Google Chrome.</font></div><div><font color="#000000"><br></font></div><div><font color="#000000"><b>In Internet Explorer</b></font></div><div><font color="#000000"><br></font></div><div><font color="#000000">1. Open Internet Explorer browser and navigate to Tools &gt; Internet Options.</font></div><div><font color="#000000">2. Then there will open the options window. Under the General tab, proceed to Change search defaults and click the Settings button.</font></div><div><font color="#000000">3. You will see a list of search providers in the window of Manage add-on. Select your preferred search provider and click the button Set as default to replace Sweetpacks Toolbar and Search.&nbsp;</font></div><div><font color="#000000">Be aware that Sweetpacks Toolbar and Search may use other names or terms such as the following:</font></div><div><font color="#000000">Sweetpacks, SweetIM, and 1clickdownloader</font></div><div><font color="#000000">4. Then still on the window of Manage add-on, select the Toolbars and Extensions tab and the view will switch to a list of toolbars and extensions, look for Sweetpacks related toolbar and related extensions there to remove.&nbsp;</font></div><div><font color="#000000">Be aware that Sweetpacks Toolbar and Search may use other names or terms such as the following:</font></div><div><font color="#000000">Sweetpacks, SweetIM, and 1clickdownloader</font></div><div><font color="#000000">6.<span class="Apple-tab-span" style="white-space: pre;">	</span>After that, close the window of Manage add-ons and we will turn back to the Internet Option menu, there relocate on the Home area where you can input a hompage address like google.com as per your preference. Then, click OK to save the changes and close the window.</font></div><div><font color="#000000">7.<span class="Apple-tab-span" style="white-space: pre;">	</span>Clear browser data by navigating to Tools-&gt;Safety-&gt;Delete browsing history. Then there will come up a detailed window, select due items including at least cookies, Internet temporary files, and history to clear for the sake of safety. That’s it.</font></div><div><font color="#000000"><br></font></div><div><font color="#000000"><br></font></div><div><font color="#000000"><b>In Mozilla Firefox</b></font></div><div><font color="#000000"><br></font></div><div><font color="#000000">1. Launch the program Mozilla Firefox and on the place of Search box, here is Google search box, and then navigate to Manage Search Engines.&nbsp;</font></div><div><font color="#000000">2.<span class="Apple-tab-span" style="white-space: pre;">	</span>Then there will appear a window of Manage Search Engine List, choose your preferred default search provider by placing it at the top most position. Highlight the item and click on Move up until it reaches the first spot.</font></div><div><font color="#000000">NOTE: Be aware that Sweetpacks Toolbar and Search may use other names or terms such as the following:</font></div><div><font color="#000000">Sweetpacks, SweetIM, and 1clickdownloader</font></div><div><font color="#000000">3. To remove Sweetpacks Toolbar and Search from Firefox, highlight on its name and click the Remove button. Then, click OK.</font></div><div><font color="#000000">4. Back at Firefox main screen, type about:config in the address bar. If it shows a warning, "This might void your warranty!" please click "I''ll be carefull, I promise!"</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">5. Firefox will display a list of entire preferences including those that were modified by Sweetpacks Toolbar and Search.</font></div><div><font color="#000000">6. In the Search field, type the name of malware. Then, right-click and Reset values for found Preferences.</font></div><div><font color="#000000"><br></font></div><div><font color="#000000"><br></font></div><div><font color="#000000">NOTE: Be aware that Sweetpacks Toolbar and Search may use other names or terms such as the following:</font></div><div><font color="#000000">Sweetpacks, SweetIM, and 1clickdownloader</font></div><div><font color="#000000">7. Navigate to top menu and click on Tools( Which is embodied Firefox button just on top left menu)-&gt; Options.</font></div><div><font color="#000000">8. On General Tab, under Home Page, type the desired address or simply click Restore to Default. Click OK to save the changes. This will reverse the changes made by Sweetpacks Toolbar and Search on your home page.</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">9. Delete Sweetpacks Toolbar and Search Extensions from Firefox</font></div><div><font color="#000000">a. In Mozilla Firefox Internet browser, navigate to Tools-&gt; Add-ons from the list. You can also press Ctrl+Shift+A on your keyboard to access this.</font></div><div><font color="#000000">b. Once the Add-ons manager is open, select Extensions from the sidebar and find the Sweetpacks related extensions or any other unknown extensions for you to unleash the Firefox from risks. Select the targeted extensions and click Remove button. Click OK to save the settings and close the window.</font></div><div><font color="#000000">NOTE: Be aware that Sweetpacks Toolbar and Search may use other names or terms such as the following:</font></div><div><font color="#000000">Sweetpacks, SweetIM, and 1clickdownloader</font></div><div><font color="#000000">10. Clear browser data to make it further secure. Refer here for clearing Firefox browser data in details. (see the Firefox part guide)</font></div><div><font color="#000000">11. Close the Firefox and restart it. Everything would be all right for now.</font></div><div><font color="#000000"><br></font></div><div><font color="#000000"><b>In Google Chrome</b></font></div><div><font color="#000000"><br></font></div><div><font color="#000000">1. Launch Google Chrome and click the Customize and Control Google Chrome icon, which is embodied by a wrench icon or a 3-bar icon, and then navigate to Settings.&nbsp;</font></div><div><font color="#000000">2. There will open a tab on setting details. Locate the Search area and click Manage search engines… button .&nbsp;</font></div><div><font color="#000000">3.<span class="Apple-tab-span" style="white-space: pre;">	</span>&nbsp;It will show a list of Search engines including the default one. There please mouse-over to your preferred search engine and click Make default. And then find the related search engine of Sweetpacks and mouse-over that item and click on the X mark to remove it.&nbsp;</font></div><div><font color="#000000">NOTE: Be aware that Sweetpacks Toolbar and Search may use other names or terms such as the following:</font></div><div><font color="#000000">Sweetpacks, SweetIM, and 1clickdownloader</font></div><div><font color="#000000">4.<span class="Apple-tab-span" style="white-space: pre;">	</span>Back to the Settings detailed window, find the On startup area, click on Open a specific page or set of pages.&nbsp;</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">5.<span class="Apple-tab-span" style="white-space: pre;">	</span>On Add a new page box, please type your desired home page address if you prefer to. Then click OK to save the change and close the window.</font></div><div><font color="#000000">6. To d elete Sweetpacks Toolbar and Search extension, click on extensions tab, which just on the top of Settings tab in the opened window, and there will come a list of all installed extensions. Find Sweetpacks related extensions there.</font></div><div><font color="#000000">NOTE: Be aware that Sweetpacks Toolbar and Search may use other names or terms such as the following:</font></div><div><font color="#000000">Sweetpacks, SweetIM, and 1clickdownloader</font></div><div><font color="#000000">7.On the right panel of the window, Disable/Delete (Trash) Sweetpacks Toolbar and Search extensions.&nbsp;</font></div><div><font color="#000000">8. Then after repairing the homepage and removing search engine and the extension, you still need to delete browsing data for the sake of more safety. Back to the Chrome settings page, this time click the History tab, which just on the top of Extensions, and then click on the Clear browsing data… to open a clear browsing data window in details and choose the items just as below picture shows, and then click clear browsing data to remove all and close the window. That’s it.&nbsp;</font></div><div><font color="#000000">8. Close Google Chrome and then reopen it to check out. Everything would be all right for now.&nbsp;</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">_____________________________________________</font></div><div><font color="#000000"><b>Protect your PC from Sweetpacks Toolbar and Search or Similar Attack</b></font></div><div><font color="#000000"><br></font></div><div><font color="#000000">You can just keep Anvi Smart Defender as a nice complementary secure tool to your antivirus. Or you can just at least turn on the security features of browsers like IE, Firefox and Google Chrome to better protect your online surfing. See detailed guide to turn on security features of IE, Firefox and Google Chrome now.</font></div><div><font color="#000000"><br></font></div>', '', ''),
('tiankonguse1362800820', 'tiankonguse', '2013-03-09 11:47:00', '什么是计算机病毒', '<p align="center">\r\n\r\n\r\n&nbsp;什么是计算机病毒？<br>&nbsp;<br></p><p align="left">计算机病毒是很小的软件程序，用于从一台计算机传播到另一台计算机，并干涉计算机运行。</p><p>病毒可能损害或删除计算机上的数据，使用您的电子邮件程序传播它本身到其他计算机，甚至删除您的硬盘上的一切东西。</p><p>计算机病毒经常通过电子邮件中或即时消息的附件传播。这就是您不应打开电子邮件附件的原因，除非您知道它是谁发送的，而且您正在等待该附件到来。</p><p>病毒可以伪装成搞笑图片、贺卡或音频和视频文件的附件。</p><p>计算机病毒还会通过互联网上的下载来传播它们会隐藏在非法软件或您可能下载的其他文件或程序中。 </p><p>为帮助避免计算机病毒，重要的是使用最新的更新程序和防病毒工具和 了解最新的威胁，运行计算机时使用标准用户身份（不是管理员身份）、 并在浏览互联网、下载文件和打开附件时遵照几个基本规则。</p><p>一旦您的计算机感染病毒，其类型或感染计算机的方法与 删除它和防止进一步感染同样重要。 </p>', '', ''),
('tiankonguse1362801239', 'tiankonguse', '2013-03-09 11:53:59', '防病毒软件原理', '<p align="center">\r\n\r\n\r\n防病毒软件原理</p><p>本文转自<a href="http://blog.sina.com.cn/s/blog_62b8fc3301013x6n.html">这里</a></p><p>随着计算机技术发展得越来越快，使得计算机病毒技术与计算机反病毒技术的对抗也越来越尖锐。据统计，现在基本上每天都要出现几十种新病毒，其中很多病毒的破坏性都非常大，稍有不慎，就会给计算机用户造成严重后果。下面我们以介绍国内防毒行业的发展为主。 </p><p>我国计算机反病毒技术的研究和发展，是从研制防病毒卡开始的。防病毒卡的核心实际上是一个软件，只不过将其固化在ROM中。它的出发点是想以不变应万变，通过动态驻留内存来监视计算机的运行情况，根据总结出来的病毒行为规则和经验来判断是否有病毒活动，通过截获中断控制权规则和经验来判定是否有病毒活动，并可以截获中断控制权来使内存中的病毒瘫痪，使其失去传染别的文件和破坏信息资料的能力，这就是防病毒卡"带毒运行"功能的基本原理。防病毒卡主要的不足是与正常软件特别是国产的软件有不兼容的现象，误报、漏报病毒现象时有发生，降低了计算机运行速度，升级困难等。从防病毒技术上说是不成熟的，病毒千变万化，技术手段越来越高，企图以一种不变的技术对付病毒是不可能的。防病毒卡的动态监测技术、病毒行为规则的研究，对于发现计算机病毒起了很大的作用，这些技术是防病毒卡换精华。但是作为一个产品，只有这部分技术是远远不够的，这部分技术也没有太大的实际意义，所以防病毒卡的使用者在减少。</p><p>随着防病毒卡的衰落，解病毒软件则日益风行。解病毒软件最重要的功能是将病毒彻底干净地予以清除，如果说防病毒卡是治标的话，那么解病毒软件则是治本。</p><p>第一代反病毒技术是采取单纯的病毒特征判断，将病毒从带毒文件中清除掉。这种方式可以准确地清除病毒，可靠性很高。后来病毒技术发展了，特别是加密和变形技术的运用，使得这种简单的静态扫描方式失去了作用。随之而来的反病毒技术也发展了一步。</p><p>第二代反病毒技术是采用静态广谱特征扫描方法检测病毒，这种方式可以更多地检测出变形病毒，但另一方面误报率也提高，尤其是用这种不严格的特征判定方式去清除病毒带来的风险性很大，容易造成文件和数据的破坏。所以说静态防病毒技术也有难以克服的缺陷。</p><p>第三代反病毒技术的主要特点是将静态扫描技术和动态仿真跟踪技术结合起来，将查找病毒和清除病毒合二为一，形成一个整体解决方案，能够全面实现防、查、消等反病毒所必备的各种手段，以驻留内存方式防止病毒的入侵，凡是检测到的病毒都能清除，不会破坏文件和数据。随着病毒数量的增加和新型病毒技术的发展，静态扫描技术将会使查毒软件速度降低，驻留内存防毒模块容易产生误报。</p><p>第四代反病毒技术则是针对计算机病毒的发展而基于病毒家族体系的命名规则、基于多位CRC校验和扫描机理，启发式智能代码分析模块、动态数据还原模块（能查出隐蔽性极强的压缩加密文件中的病毒）、内存解毒模块、自身免疫模块等先进的解毒技术，较好的解决了以前防毒技术顾此失彼、此消彼长的状态。</p><p>病毒检测的方法<br>在与病毒的对抗中，及早发现病毒很重要。早发现，早处置，可以减少损失。检测病毒方法有： 特征代码法、校验和法、行为监测法、软件模拟法。 </p><p>这些方法依据的原理不同，实现时所需开销不同，检测范围不同，各有所长。</p><p><br>一．特征代码法<br>特征代码法被早期应用于SCAN、CPAV等著名病毒检测工具中。国外专家认为特征代码法是检测已知病毒的最简单、开销最小的方法。<br>特征代码法的实现步骤如下：</p><p>1.采集已知病毒样本，病毒如果既感染COM文件，又感染EXE文件，对这种病毒要同时采集COM型病毒样本和EXE型病毒样本。<br>在病毒样本中，抽取特征代码。依据如下原则：<br>抽取的代码比较特殊，不大可能与普通正常程序代码吻合。抽取的代码要有适当长度，一方面维持特征代码的唯一性，另一方面又不要有太大的空间与时间的开销。如果一种病毒的特征代码增长一字节，要检测3000种病毒，增加的空间就是3000字节。在保持唯一性的前提下，尽量使特征代码长度短些，以减少空间与时间开销。<br>在既感染COM文件又感染EXE文件的病毒样本中，要抽取两种样本共有的代码。将特征代码纳入病毒数据库。</p><p>2．打开被检测文件，在文件中搜索，检查文件中是否含有病毒数据库中的病毒特征代码。如果发现病毒特征代码，由于特征代码与病毒一一对应，便可以断定，被查文件中患有何种病毒。<br>采用病毒特征代码法的检测工具，面对不断出现的新病毒，必须不断更新版本，否则检测工具便会老化，逐渐失去实用价值。病毒特征代码法对从未见过的新病毒，自然无法知道其特征代码，因而无法去检测这些新病毒。<br>特征代码法的优点是：<br>检测准确快速、可识别病毒的名称、误报警率低、依据检测结果，可做解毒处理。<br>其缺点是：<br>不能检测未知病毒、搜集已知病毒的特征代码，费用开销大、在网络上效率低（在网络服务器上，因长时间检索会使整个网络性能变坏）。<br>其特点：<br>A.速度慢。随着病毒种类的增多，检索时间变长。如果检索5000种病毒，必须对5000个病毒特征代码逐一检查。如果病毒种数再增加，检病毒的时间开销就变得十分可观。此类工具检测的高速性，将变得日益困难。<br>B.误报警率低。<br>C.不能检查多形性病毒。特征代码法是不可能检测多态性病毒的。国外专家认为多态性病毒是病毒特征代码法的索命者。<br>D.不能对付隐蔽性病毒。隐蔽性病毒如果先进驻内存，后运行病毒检测工具，隐蔽性病毒能先于检测工具，将被查文件中的病毒代码剥去，检测工具的确是在检查一个虚假的"好文件"，而不能报警，被隐蔽性病毒所蒙骗。</p><p>&nbsp;</p><p>二．校验和法 <br>将正常文件的内容，计算其校验和，将该校验和写入文件中或写入别的文件中保存。在文件使用过程中，定期地或每次使用文件前，检查文件现在内容算出的校验和与原来保存的校验和是否一致，因而可以发现文件是否感染，这种方法叫校验和法，它既可发现已知病毒又可发现未知病毒。在SCAN和CPAV工具的后期版本中除了病毒特征代码法之外，还纳入校验和法，以提高其检测能力。<br>这种方法既能发现已知病毒，也能发现未知病毒，但是，它不能识别病毒类，不能报出病毒名称。由于病毒感染并非文件内容改变的唯一的非他性原因，文件内容的改变有可能是正常程序引起的，所以校验和法常常误报警。而且此种方法也会影响文件的运行速度。<br>病毒感染的确会引起文件内容变化，但是校验和法对文件内容的变化太敏感，又不能区分正常程序引起的变动，而频繁报警。用监视文件的校验和来检测病毒，不是最好的方法。<br>这种方法遇到下述情况：已有软件版更新、变更口令、修改运行参数、校验和法都会误报警。<br>校验和法对隐蔽性病毒无效。隐蔽性病毒进驻内存后，会自动剥去染毒程序中的病毒代码，使校验和法受骗，对一个有毒文件算出正常校验和。</p><p>运用校验和法查病毒采用三种方式：<br>1．在检测病毒工具中纳入校验和法，对被查的对象文件计算其正常状态的校验和，将校验和值写入被查文件中或检测工具中，而后进行比较。<br>2．在应用程序中，放入校验和法自我检查功能，将文件正常状态的校验和写入文件本身中，每当应用程序启动时，比较现行校验和与原校验和值。实现应用程序的自检测。<br>3．将校验和检查程序常驻内存，每当应用程序开始运行时，自动比较检查应用程序内部或别的文件中预先保存的校验和。</p><p>校验和法的优点是：<br>方法简单能发现未知病毒、被查文件的细微变化也能发现<br>其缺点是：<br>发布通行记录正常态的校验和、会误报警、不能识别病毒名称、不能对付隐蔽型病毒。</p><p>&nbsp;</p><p>三．行为监测法 <br>利用病毒的特有行为特征性来监测病毒的方法，称为行为监测法。通过对病毒多年的观察、研究，有一些行为是病毒的共同行为，而且比较特殊。在正常程序中，这些行为比较罕见。当程序运行时，监视其行为，如果发现了病毒行为，立即报警。<br>这些做为监测病毒的行为特征如下：</p><p>A.占有INT 13H<br>所有的引导型病毒，都攻击Boot扇区或主引导扇区。系统启动时，当Boot扇区或主引导扇区获得执行权时，系统刚刚开工。一般引导型病毒都会占用INT 13H功能，因为其他系统功能未设置好，无法利用。引导型病毒占据INT 13H功能，在其中放置病毒所需的代码。</p><p>B.改DOS系统为数据区的内存总量<br>病毒常驻内存后，为了防止DOS系统将其覆盖，必须修改系统内存总量。</p><p>C.对COM、EXE文件做写入动作<br>病毒要感染，必须写COM、EXE文件。</p><p>D.病毒程序与宿主程序的切换<br>染毒程序运行中，先运行病毒，而后执行宿主程序。在两者切换时，有许多特征行为。 </p><p>行为监测法的长处：<br>可发现未知病毒、可相当准确地预报未知的多数病毒。<br>行为监测法的短处：<br>可能误报警、不能识别病毒名称、实现时有一定难度。</p><p>&nbsp;</p><p>四．软件模拟法 <br>多态性病毒每次感染都变化其病毒密码，对付这种病毒，特征代码法失效。因为多态性病毒代码实施密码化，而且每次所用密钥不同，把染毒的病毒代码相互比较，也无法找出相同的可能做为特征的稳定代码。虽然行为检测法可以检测多态性病毒，但是在检测出病毒后，因为不知病毒的种类，难于做消毒处理。<br>为了检测多态性病毒，可应用新的检测方法――软件模拟法。它是一种软件分析器，用软件方法来模拟和分析程序的运行。<br>新型检测工具纳入了软件模拟法，该类工具开始运行时，使用特征代码法检测病毒，如果发现隐蔽病毒或多态性病毒嫌疑时，启动软件模拟模块，监视病毒的运行，待病毒自身的密码译码以后，再运用特征代码法来识别病毒的种类。</p><p>&nbsp;</p>', '', ''),
('tiankonguse1362808099', 'tiankonguse', '2013-03-09 13:48:19', '【java语言】命令行编译运行有包的多个java文件', '<div style="text-align: center;"><font color="#000000">【java语言】命令行编译运行有包的多个java文件</font></div><div><font color="#000000"><br></font></div><div><font color="#000000"><br></font></div><div><font color="#000000">如果我们的java程序没有包，则直接javac，然后java即可。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">但是如果有包的话，这样编译倒是可以编译，但是运行时就报错了。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">再去看看编译器编译后的样子，包都变为文件夹了。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">所以我们命令行编译后也应该是文件夹的形式吧。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">实际上，正确的做法是这样：</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">从简单的例子开始：单独一个java文件，有包。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">D.java</font></div><div><pre><code class="java">package com.tiankonguse;\r\npublic class D {\r\n	public static void main(String[] args) {\r\n		System.out.println("hello word!");\r\n	}\r\n}</code></pre></div><div><font color="#000000">找到这个文件的位置</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">编译命令</font></div><div><pre><code class="sql">javac -d D.java</code></pre></div><div><font color="#000000">这是看看是不是有包的文件夹了。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">运行命令</font></div><div><font color="#000000"><br></font></div><div><pre><code class="sql">java com.tiankonguse.D</code></pre></div><div><font color="#000000"><br></font></div><div><font color="#000000">是不是输出了“hello word!”？</font></div><div><font color="#000000"><br></font></div><div><font color="#000000"><br></font></div><div><font color="#000000">接着，来看看多个文件的样例。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000"><br></font></div><div><font color="#000000">有两个文件A.java和C.java,放在同一个位置。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">A.java</font></div><div><pre><code class="java">package com.tiankong;\r\npublic class A {\r\n	private int a;\r\n	public A(int a){\r\n		this.a = a;\r\n	}\r\n	public int getA(){\r\n		return this.a;\r\n	}\r\n}</code></pre></div><div><font color="#000000">C.java</font></div><div><pre><code class="java">package com.tiankong;\r\npublic class C {\r\n	public static void main(String[] args) {\r\n		A a = new A(1);\r\n		System.out.println(a.getA());\r\n	}\r\n}</code></pre></div><div><font color="#000000">找到这个文件的位置</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">编译命令</font></div><div><font color="#000000"><br></font></div><div><pre><code class="java">javac -d A.java C.java</code></pre></div><div><font color="#000000"><br></font></div><div><font color="#000000">运行命令</font></div><div><font color="#000000"><br></font></div><div><pre><code class="java">java com.tiankonguse.C</code></pre></div><div><font color="#000000"><br></font></div><div><font color="#000000">是不是输出了“1”？</font></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><br></div>\r\n\r\n\r\n', '', ''),
('tiankonguse1362822047', 'tiankonguse', '2013-03-09 17:40:47', ' 域名解析中TTL值说明', '<div style="text-align: center;"><font color="#000000">域名解析中TTL值说明</font></div><div><font color="#000000">&nbsp;</font></div><div><font color="#000000">&nbsp;</font></div><div><font color="#000000">TTL值全称是“生存时间（Time To Live)”，简单的说它表示DNS记录在DNS服务器上缓存时间。</font></div><div><font color="#000000">&nbsp;</font></div><div><font color="#000000">要理解TTL值，请先看下面的一个例子：&nbsp;</font></div><div><font color="#000000">&nbsp;</font></div><div><font color="#000000">假设，有这样一个域名www.tiankonguse.com对应IP地址为127.0.0.1，它的TTL为10分钟。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">其实，这就是一条DNS记录，通常表示在tiankonguse.com域中有一台名为www的主机.</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">这个域名或称这条记录存储在一台名为dns.abc.com的DNS服务器上。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">现在有一个用户在浏览器中键入一下地址：http://www.tiankonguse.com 这时会发生什么呢？</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">该访问者指定的DNS服务器8.8.8.8就会试图为他解释www.tiankonguse.com.</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">当然8.8.8.8这台DNS服务器由于没有包含 www.tiankonguse.com这条信息，因此无法立即解析.</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">但是通过全球DNS的递归查询后，最终定位到dns.abc.com这台DNS服务器.</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">dns.abc.com这台DNS服务器将www.tiankonguse.com对应的IP地址1.1.1.1告诉8.8.8.8这台DNS服务器，然有再由 8.8.8.8告诉用户结果。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">8.8.8.8为了以后加快对myhost.abc.com这条记录的解析，就将刚才的1.1.1.1结果保留一段时间，这就是TTL时间.</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">在这段时间内如果用户又有对www.tiankonguse.com这条记录的解析请求，它就直接告诉用户1.1.1.1，当TTL到期则又会重复上面的过程。</font></div><div><font color="#000000"><br></font></div>\r\n\r\n\r\n', '', ''),
('tiankonguse1362823397', 'tiankonguse', '2013-03-09 18:03:17', '域名泛解析概念', '<div style="text-align: center;"><font color="#000000">域名泛解析概念</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">所谓“泛域名解析”是指：利用通配符 * (星号)来做次级域名以实现所有的次级域名均指向同一IP地址。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000"><br></font></div><div><font color="#000000">关于泛解析我们可以举例说明.</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">比如我们的域名是 tiankonguse.com，我们将子域名设置为"*"，IP解析到：127.0.0.1</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">大家都知道*是通配符，他表明tiankonguse.com之前的所有子域名都将解析到127.0.0.1</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">这就意味着例如输入www.tiankonguse.com或者blog.tiankonguse.com或者me.blog.idcicp.com都将解析到127.0.0.1，</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">这里需要说明的是，在我们系统里面如果单独设置一个子域名解析，比如将主机名设置为mail，单独解析到127.0.0.2那么该解析记录的优先级比泛解析要高。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">目前别名记录（cname记录）与URL转发记录暂不支持泛解析。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">但是请注意：经过实测 “.”(点), “-”(中横杆),“/”(左斜杆)这三个字符是无法应用在泛解析中的</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">问题出现在这三个字符不能存在于次级域名的第一个字符</font></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><br></div>\r\n\r\n\r\n', '', ''),
('tiankonguse1362823729', 'tiankonguse', '2013-03-09 18:08:49', 'ICMP协议的认识', '<div style="text-align: center;"><font color="#000000">ICMP协议的认识</font></div><div><font color="#000000"><br></font></div><div><font color="#000000"><b>什么是ICMP协议</b></font></div><div><font color="#000000"><br></font></div><div><font color="#000000">ICMP是“Internet Control Message Protocol”（Internet控制消息协议）的缩写。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">它是TCP/IP协议族的一个子协议，用于在IP主机、路由器之间传递控制消息。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">控制消息是指网络通不通、主机是否可达、路由是否可用等网络本身的消息。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">这些控制消息虽然并不传输用户数据，但是对于用户数据的传递起着重要的作用。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">我们在网络中经常会使用到ICMP协议，只不过我们觉察不到而已。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">比如我们经常使用的用于检查网络通不通的Ping命令，这个“Ping”的过程实际上就是ICMP协议工作的过程。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">还有其他的网络命令如跟踪路由的Tracert命令也是基于ICMP协议的。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000"><br></font></div><div><font color="#000000"><b>ICMP的重要性</b></font></div><div><font color="#000000"><br></font></div><div><font color="#000000">ICMP协议对于网络安全具有极其重要的意义。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">ICMP协议本身的特点决定了它非常容易被用于攻击网络上的路由器和主机。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">比如，可以利用操作系统规定的ICMP数据包最大尺寸不超过64KB这一规定，向主机发起“Ping of Death”（死亡之Ping）攻击。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">“Ping of Death” 攻击的原理是：如果ICMP数据包的尺寸超过64KB上限时，主机就会出现内存分配错误，导致TCP/IP堆栈崩溃，致使主机死机。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">此外，向目标主机长时间、连续、大量地发送ICMP数据包，也会最终使系统瘫痪。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">大量的ICMP数据包会形成“ICMP风暴”，使得目标主机耗费大量的CPU资源处理，疲于奔命。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000"><br></font></div><div><font color="#000000"><b>应对ICMP攻击</b></font></div><div><font color="#000000"><br></font></div><div><font color="#000000">虽然ICMP协议给黑客以可乘之机，但是ICMP攻击也并非无药可医。</font></div><div><font color="#000000">只要在日常网络管理中未雨绸缪，提前做好准备，就可以有效地避免ICMP攻击造成的损失。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">对于“Ping of Death”攻击，可以采取两种方法进行防范：</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">第一种方法是在路由器上对ICMP数据包进行带宽限制，将ICMP占用的带宽控制在一定的范围内，这样即使有ICMP攻击，它所占用的带宽也是非常有限的，对整个网络的影响非常少；</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">第二种方法就是在主机上设置ICMP数据包的处理规则，最好是设定拒绝所有的ICMP数据包。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">设置ICMP数据包处理规则的方法也有两种，一种是在操作系统上设置包过滤，另一种是在主机上安装防火墙。</font></div><div><font color="#000000"><br></font></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><br></div>\r\n\r\n\r\n', '', ''),
('tiankonguse1362837012', 'tiankonguse', '2013-03-09 21:50:12', '手机配置静态ip的注意事项', '<div style="color: rgb(0, 0, 0); font-size: 22px; text-align: center;"><font color="#000000">手机配置静态ip的注意事项</font></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><font color="#000000"><br></font></div><div style="text-align: left;"><font color="#000000" style="color: rgb(0, 0, 0); font-size: 22px;">关于配置</font><span style="color: rgb(68, 68, 68); font-size: 22px; text-align: center; line-height: 1.333;">静态ip，</span>配置正确还连不上<span style="color: rgb(68, 68, 68); font-size: 22px; line-height: 1.333; text-align: center;">，原因见&nbsp;</span><a href="http://www.tiankonguse.com/blog/tiankonguse1362838299.html" style="color: rgb(0, 0, 0); line-height: 1.333;"><font size="6"><b>手机配置静态ip连接wifi</b></font></a></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><font color="#000000"><br></font></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><font color="#000000">先从手机自身的配置找原因，如果手机是采用的静态IP地址，则一定要配置上网关和DNS</font></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><font color="#000000"><br></font></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><font color="#000000">路由器就是指网关地址</font></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><font color="#000000"><br></font></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><font color="#000000">一般来说，普通用户只需要把网关和DNS地址配置为无线路由器LAN口的IP就好了</font></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><font color="#000000"><br></font></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><font color="#000000">推荐使用自动获取IP的方式，也就是DHCP了，这样可以避免很多错误(现在几乎无效，看运气了)</font></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><font color="#000000"><br></font></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><font color="#000000">网络前缀长度 就是子网掩码的长度。</font></div>\r\n\r\n\r\n', '', '');
INSERT INTO `tk_blog` (`tk_blog_key`, `tk_blog_user`, `tk_blog_datetime`, `tk_blog_title`, `tk_blog_content`, `tk_blog_password`, `tk_blog_category`) VALUES
('tiankonguse1362837513', 'tiankonguse', '2013-03-09 21:58:33', '计算机DHCP服务启用', '<div style="text-align: center;"><font color="#000000">计算机DHCP服务启用</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">开始菜单--运行--键入命令services.msc--找到DHCP Client--右键选择"启动"</font></div><div><br></div><div><font color="#000000">&nbsp;</font></div><div><font color="#000000">&nbsp;</font></div><div><font color="#000000">&nbsp;</font></div><div><font color="#000000">&nbsp;</font></div>\r\n\r\n\r\n', '', ''),
('tiankonguse1362837681', 'tiankonguse', '2013-03-09 22:01:21', '网关', '<div><font color="#000000">网关</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">定义：在采用不同体系结构或协议的网络之间进行互通时，用于提供协议转换、路由选择、数据交换等网络兼容功能的设施。&nbsp;</font></div><div><font color="#000000"><br></font></div><div><font color="#000000"><br></font></div><div><font color="#000000">网关(Gateway)又称网间连接器、协议转换器。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">网关在传输层上以实现网络互连，是最复杂的网络互连设备，仅用于两个高层协议不同的网络互连。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">网关既可以用于广域网互连，也可以用于局域网互连。&nbsp;</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">网关是一种充当转换重任的计算机系统或设备。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">在使用不同的通信协议、数据格式或语言，甚至体系结构完全不同的两种系统之间，网关是一个翻译器。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">与网桥只是简单地传达信息不同，网关对收到的信息要重新打包，以适应目的系统的需求。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">同时，网关也可以提供过滤和安全功能。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">大多数网关运行在OSI 7层协议的顶层--应用层。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">网关曾经是很容易理解的概念。</font></div><div><font color="#000000">在早期的因特网中，术语网关即指路由器。</font></div><div><font color="#000000">路由器是网络中超越本地网络的标记，这个走向未知的“大门”曾经、现在仍然用于计算路由并把分组数据转发到源始网络之外的部分，因此，它被认为是通向因特网的大门。</font></div><div><font color="#000000">随着时间的推移，路由器不再神奇，公共的基于IP的广域网的出现和成熟促进了路由器的成长。</font></div><div><font color="#000000">现在路由功能也能由主机和交换集线器来行使，网关不再是神秘的概念。</font></div><div><font color="#000000">现在，路由器变成了多功能的网络设备，它能将局域网分割成若干网段、互连私有广域网中相关的局域网以及将各广域网互连而形成了因特网，这样路由器就失去了原有的网关概念。</font></div><div><font color="#000000">然而术语网关仍然沿用了下来，它不断地应用到多种不同的功能中，定义网关已经不再是件容易的事。&nbsp;</font></div><div><font color="#000000">目前，主要有三种网关：协议网关、应用网关、安全网关。</font></div><div><font color="#000000">唯一保留的通用意义是作为两个不同的域或系统间中介的网关，要克服的差异本质决定了需要的网关类型。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000"><br></font></div><div><font color="#000000">常见的网关有以下几种：&nbsp;</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">·IBM主机网关：把LAN上工作站与IBM主机系统连接起来。最早的网关模拟IBM主机的320终端，使LAN的工作站成为主机的终端。复杂一点的网关允许PC机与主机之间传输文件，或者以客户机/服务器运行模式，允许PC机访问主机的数据库。IBM的APPN协议提供了同层联网服务，使主机成为网络的一部分。当前的趋势是主机也支持TCP/IP，直接与TCP/IP或通过Web服务器与用户连接起来，不再需要专门的网关。&nbsp;</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">·LAN网关：LAN网关提供LAN之间数据传送的通道。通常居间的LAN因使用不同的协议，数据需要做些转换才能通过。不少路由器提供以太网与FDDI的连接，可以充当此任。另外，有提供AppleTalk与TCP/IP、IPX与TCP/IP等协议转换的网关。&nbsp;</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">·电子邮件网关：负责不同厂商应用软件之间邮件信息的转换，使用户在网上能共享不同的电子邮件应用程序所发出的信件。常见的电子邮件网关把专用信息格式转换成X.400格式。&nbsp;</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">·因特网网关：在因特网中，以往的网关现在称为路由器。网关现在是指一种系统，这种系统进行网络和应用协议的转换，使TCP/IP网和非TCP/IP网上的用户和应用可以相互通信。网关也指应用程序之间的翻译设备。代理服务器网关是一种防火墙，允许内部网的用户访问因特网，同时禁止因特网用户访问内部网。功能齐全的防火墙提供高级的甄别、验证和代理功能，以防止黑客和攻击者进入内部系统。</font></div><div><font color="#000000"><br></font></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><br></div>\r\n\r\n\r\n', '', ''),
('tiankonguse1362837872', 'tiankonguse', '2013-03-09 22:04:32', 'ip冲突', '<div style="text-align: center;"><font color="#000000">ip冲突</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">当计算机使用过程中出现“计算机探测到IP地址与您的网卡物理地址发生冲突”的错误时，您就无法使用网络。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">此时，您可以做如下操作解决问题：</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">1 如果您使用的计算机的操作系统是：windows 98</font></div><div><font color="#000000"><br></font></div><div><font color="#000000"><span class="Apple-tab-span" style="white-space:pre">	</span>点击左下角“开始”→“运行”，键入：winipcfg，点击“确定”。</font></div><div><font color="#000000"><span class="Apple-tab-span" style="white-space:pre">	</span>在弹出的窗口中，点击“全部释放”，然后点击“全部更新”，即可解决问题。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">&nbsp; &nbsp; 如果系统提示无法更新，则需要重新启动计算机。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">2 如果您使用的计算机的操作系统是：windows 2000 或windows XP</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">&nbsp; &nbsp; 点击左下角“开始”→“运行”，键入：ipconfig /release，点击“确定”。</font></div><div><font color="#000000"><span class="Apple-tab-span" style="white-space:pre">	</span>在此点击“开始”→“运行”，键入：ipconfig /renew，点击“确定”，即可解决问题。</font></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><br></div>\r\n\r\n\r\n', '', ''),
('tiankonguse1362837991', 'tiankonguse', '2013-03-09 22:06:31', '网络前缀长度', '<div style="text-align: center;"><font color="#000000">网络前缀长度</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">1、网络前缀 network prefix: 与地址的网络部分相对应的IP地址部分；</font></div><div><font color="#000000">例如，B类地址的网络前缀是/16（即前16位表示地址的网络部分，且255.255.0.0是对应的默认子网掩码</font></div><div><font color="#000000">　　</font></div><div><font color="#000000">用来唯一地标识着连入Internet的一个网络的网络号，称为网络前缀。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">2、标准的A/B/C类地址，网络前缀是固定的8、16、24位。如果网络前缀20，是采用了CIDR概念的地址细分策略。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">3、CIDR 对原来用于分配A类、B类和C类地址的有类别路由选择进程进行了重新构建。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">CIDR用 13-27位长的前缀取代了原来地址结构对地址网络部分的限制&nbsp;</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">3类地址的网络部分分别被限制为8位、16位和24位。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">在管理员能分配的地址块中，主机数量范围是32-500,000，从而能更好地满足机构对地址的特殊需求。&nbsp;</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">CIDR 地址中包含标准的32位IP地址和有关网络前缀位数的信息。</font></div><div><font color="#000000">以CIDR地址222.80.18.18/25为例，其中“/25”表示其前面地址中的前25位代表网络部分，其余位代表主机部分。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">4、所以题目中网络前缀为20，即是将一个B类地址（标准网络前缀16），细分成更多子网段，网络前缀增长为20.</font></div>\r\n\r\n\r\n', '', ''),
('tiankonguse1362838299', 'tiankonguse', '2013-03-09 22:11:39', '手机配置静态ip连接wifi', '<div style="color: rgb(0, 0, 0); font-size: 22px;"><font color="#000000">手机配置静态ip连接wifi</font></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><font color="#000000"><br></font></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><font color="#000000"><br></font></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><font color="#000000">查询资料：</font></div><div><font color="#000000" style="color: rgb(0, 0, 0); font-size: 22px;"><span class="Apple-tab-span" style="white-space:pre">	</span></font><font color="#000000"><a href="http://www.tiankonguse.com/blog/tiankonguse1362210195.html">windows 7建wifi</a></font></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><font color="#000000"><span class="Apple-tab-span" style="white-space:pre">	</span><a href="http://www.tiankonguse.com/blog/tiankonguse1362837991.html">网络前缀长度</a></font></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><font color="#000000"><span class="Apple-tab-span" style="white-space:pre">	</span><a href="http://www.tiankonguse.com/blog/tiankonguse1362837872.html">ip冲突</a></font></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><font color="#000000"><span class="Apple-tab-span" style="white-space:pre">	</span><a href="http://www.tiankonguse.com/blog/tiankonguse1362837681.html">网关</a></font></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><span class="Apple-tab-span" style="white-space:pre">	</span><a href="http://www.tiankonguse.com/blog/tiankonguse1362837513.html">电脑启动DHCP</a></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><span class="Apple-tab-span" style="white-space:pre">	</span><a href="http://www.tiankonguse.com/blog/tiankonguse1362837012.html">手机配置静态ip的注意事项</a></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><br></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><font color="#000000">以前，电脑随便建一个wifi,设个密码，手机输入密码连上自己建的wifi就能上网了。</font></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><font color="#000000"><br></font></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><font color="#000000">可是，现在总是手机连接不上了wifi了，一直显示在获得ip.</font></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><font color="#000000"><br></font></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><font color="#000000">后来，网上都说需要设为静态ip,于是自己也设了静态ip(当时只填写了ip，子网掩码，网关)，手机也填上静态ip，于是有连上了。</font></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><font color="#000000"><br></font></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><font color="#000000">但是最近怎么也连不上了。</font></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><font color="#000000"><br></font></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><font color="#000000">作为学计算机的我不能再淡定了，我非要去看看到底是怎么回事。</font></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><font color="#000000"><br></font></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><font color="#000000">坐下来仔细想想，自己建一个wifi,相当于我这个wifi局域网内使用了这个ip,而且配置的是掩码24位，等于费了255个ip,而自己只是用了一个，减去网关，去头去尾去零头自己也浪费了200个ip.</font></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><font color="#000000"><br></font></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><font color="#000000">大家都在自己建wifi,大家都在浪费ip,这样不可避免的会有ip冲突，冲突后的果当然是不能上网了。</font></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><font color="#000000"><br></font></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><font color="#000000">那之前没有配置静态ip，一直显示在获得ip也是这个原因了。</font></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><font color="#000000"><br></font></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><font color="#000000">当我发现这个后，为了自己能够上网，我计算了一下，再一次建了一个wifi,只分配了7个地址。</font></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><font color="#000000"><br></font></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><font color="#000000">然后再次配置静态ip,惊奇的发现可以连上wifi了。</font></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><font color="#000000"><br></font></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><font color="#000000">哈哈，问题就在这，随着有连接wifi功能的电子设备越来越多，以后建wifi还真是个问题呢。</font></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><font color="#000000"><br></font></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><font color="#000000">现在怎么能避免ip冲突也是个问题，只要分配的ip范围尽量小点，如果连不上，就多配置几次，每次都换一个网段。</font></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><font color="#000000"><br></font></div><div style="color: rgb(0, 0, 0); font-size: 22px;">具体配置静态ip的方法和网上一样，只是缩小ip范围，也就是增大子网掩码。</div>\r\n\r\n\r\n', '', ''),
('tiankonguse1362924747', 'tiankonguse', '2013-03-10 22:12:27', '【jquery笔记】使用jquery操作iframe', '<div style="text-align: center;"><font color="#000000">使用jquery操作iframe</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">1.获得兄弟iframe对象</font></div><div><pre><code class="javascript">&lt;iframe id="iframe1"&gt;&lt;/iframe&gt; \r\n&lt;iframe id="iframe2"&gt;&lt;/iframe&gt;</code></pre></div><div><font color="#000000">iframe1中使用jQuery获得iframe2的ifram对象：</font></div><div><pre><code class="javascript">$("#iframe2",parent.document.body)</code></pre></div><div><font color="#000000">2.获得儿子ifram对象</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">当前页面有个ifram，id为,iframe1。</font></div><div><font color="#000000">在ifram之外获得iframe对象。</font></div><div><pre><code class="javascript">&lt;iframe id="iframe1"&gt;&lt;/iframe&gt; \r\n\r\n$("#mainiframe")</code></pre></div><div><br></div><div><font color="#000000">3.获得ifram对象内的元素的对象</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">有个&lt;iframe id="iframe1"&gt;&lt;/ifame&gt;&nbsp;</font></div><div><font color="#000000">iframe内有个&lt;div id="test"&gt;test&lt;/div&gt;&nbsp;</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">则获得ifran内id是test的对象：</font></div><div><pre><code class="javascript">$("#iframe1").contents().find("test")</code></pre></div><div><font color="#000000"><br></font></div><div><font color="#000000"><br></font></div><div><font color="#000000">3、获得ifram对象的元素对象后，就可以操作那个对象了</font></div><div><font color="#000000">&nbsp;</font></div><div><font color="#000000">获得内容</font></div><div><pre><code class="javascript">$("#iframe1").contents().find("test").html()\r\n</code></pre></div>\r\n\r\n\r\n', '', ''),
('tiankonguse1362968832', 'tiankonguse', '2013-03-11 10:27:12', 'session原理总结', '<div style="text-align: center;"><font color="#000000">session原理总结</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">本文转载自<a href="http://www.cnblogs.com/wangtao_20/archive/2011/02/16/1955659.html">这里</a></font></div><div><font color="#000000"><br></font></div><div><font color="#000000">之前在学校的时候，只知道session与cookie的区别在于：session是保存在服务器端，cookie保存在客户端。session怎么样保存的？以文件的形式保存。自己去测试过。有的忘记了。对应session的id号模糊不清。在开发中，非常有必要弄明白具体细节。不能停留在使用session_start()函数了，然后获取session值。不知道里面的机制，在开发中遇到了新的问题，解决起来比较费心。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">一、session是怎么保存的？怎么去查看其内容？</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">session是以文件的形式保存的。php.ini中有个配置项--session.save_path= "";这个里面填写的路径，将会使session文件保存在该路径下。session文件的命名格式是："sess_[PHPSESSID的值]"。每一个文件，里面保存了一个会话的数据。其实只要使用代码$_SESSION[''user_id''] = $value;就会促发php的session机制，结果往对应的session文件中写入一个值。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">二、session.save_path路径下这么多的session文件，php是如何确定要调用哪个session文件的？</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">php是依据，一个名为PHPSESSID的cookie，根据它的值，确定要调用哪个session文件的。去浏览器中，可以看到一个cookie名为PHPSESSID，假如它的值为"sess_adbjsf2q1ass26oootd163sf84"，那么，当访问服务器的时候，就会调用session目录下名为"sess_sess_adbjsf2q1ass26oootd163sf84"的文件。其实，PHPSESSID就是一个会话id，以此来确定，哪个是你的会话数据。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">cookie的名字PHPSESSID是可以改的，在php.ini中 session.name = PHPSESSID就是设置该cookie的名字。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">结合自己实际开发中遇到的问题，总结一下：要说session跟cookie有关联的地方，就是跟PHPSESSID这个cookie有绑定关系。其他，不管你设置什么cookie，使用session的时候是不会用到这些值的。也无法获取到。比如同步登陆，设置即使设置了cookie，而你的应用是依据session判断是否为登陆状态的(事实上也必须如此，因为session保存在服务器端，安全性更高，哪个依据cookie认为你已经登陆，那么很惨)。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">所以，这样的情况就会出现，即使成功设置了cookie。也还是不能同步登陆。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">三、经常遇到的现象：为什么删除一个session文件，之后生成一个session文件，新的文件名字还是与原来一样？</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">理解到session文件的命名规则是：“sess_PHPSESSID值“。那么，就很容易明白了。因为，客户端存在cookie：PHPSESSID。客户端发送请求后，会将该cookie发送给服务器(php可以使用$_COOKIE[''PHPSESSID'']看到其内容)，这样的话，还是会根据PHPSESSID生成一个session文件的。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">四、如何查看session文件中的session值？</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">我在开发中发现，如果仅仅依靠session_start()和$_SESSION[''user_id'']这样的代码，去调试，还不够全面的了解问题所在。比如，我想知道，session_start()到底在完成哪些操作？如果，想动态，实时知道session的值是如何被改写的，打开一个session文件，查看是很了然的。原来，里面就是保存的是一些被序列化后的值。也明白一个知识点，"php圣经"中讲解session的时候，提到session值做被序列化了。下面看到的session内容就是被序列化了。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">打开一个session文件，内容如下：</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">cityID|i:0;cityName|s:3:"all";fanwe_lang|s:5:"zh-cn";fanwe_currency|a:4:{s:2:"id";s:1:"1";s:6:"name_1";s:9:"人民币";s:4:"unit";s:3:"￥";s:5:"radio";s:6:"1.0000";}_fanwe_hash__|s:32:"77c18770c6cb5d89444c407aaa3e8477";</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">总结出读取规则：1.每一个session的值是以分号";"分开的。比如“cityID|i:0;cityName|s:3:"all";”就是一个完整的session值结束</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">2.里面的读取规则：符号“|”前面表示session名称。符号后面是该session的具体信息。包括：数据类型，字符长度，内容。上面第一个就相当于使用如下php代码访问:$_SESSION[''cityID'']</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">后面的s表示数据类型，这里s说明是字符串类型。3表示字符长度。最后"all"就表示session的具体值了。就是使用代码$_SESSION[''cityID'']后会得到的结果</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">3.一个session可以保存一个数组。符号{}表示数组的内容。上面的花括号{}是$_SESSION[''fanwe_currency'']所保存的内容。要想查看id的值，就使用代码：$_SESSION[''fanwe_currency''][''id'']</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">五、怎么样理解session_start等函数所做的实际操作是什么？</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">我是这样理解的：session_start，可以看成是创建一个session文件。假如有原来的session文件，或许没有创建。引入一个。往session文件中写值，那是代码“$_SESSION['''']=” 赋值所完成的操作。</font></div><div><font color="#000000">session_start()生成一个新的session文件名时。会判断是否存在cookie名为PHPSESSID的值。如果存在，那么就会按照它的值，组合成一个文件名"sess_[phpcookie值]"。所以，在目录下，老是能够看到之前删除过的session文件名。如果将浏览器中对应的cookie删掉。那么就不会生成同样的名字了。如果不存在名为PHPSESSID的cookie。php所做的估计为：先发送一个cookie，然后按照cookie的值生成一个(我可以在浏览器中马上看到一个名为PHPSESSID的cookie)</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">其实，现在也更加深刻地理解了一个知识：在调用session_start()之前不能有任何输出。有输出就会报错。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">session_start()已经封装了发送cookie的操作。涉及到http的一个原理:头部信息必须在内容之前发送才行。所以，使用echo ''内容'';</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">header(''Content-type: text/xml; charset=gb2312'');//头部信息，不算内容</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">可以这样认为：session_start()内部已经进行了一次发送头部动作。所以之前不能有任何输出内容。</font></div><div><font color="#000000">手册中的英文大致是这样说的：创建一个session，或者恢复当前一个session(基于request请求传递的session id)</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">实际开发应用总结：</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">只要是同一个用户的操作。导航程序访问记录和团购程序访问的记录都是保存在同一个session文件中</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">如果是不同的域呢？假如用户访问cs.test.com和daohang.test.com，两方程序都设置了session。那么session的结果</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">保存在同一个session文件中吗？</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">因为：服务器是统一管理session文件的存放的。而php引擎是根据phpsessionid的值确定要操作哪个session文件。session</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">文件名的格式是："sess_[phpcookie值]"。依次寻找对应的session文件(于是在浏览器查看名为PHPSESSIONID的cookie，过</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">期时间是在会话结束后)</font></div><div><font color="#000000">所以，只要cs.test.com和daohang.test.com使用的是同一台服务器。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000"><br></font></div><div><font color="#000000"><br></font></div><div><font color="#000000">这样的话，假如是多台服务器的情况。那么就不得不将session保存在数据库中去。这样实现session共享。跟具体的服务器</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">是无关的。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">session文件是某个用户整个会话过程中数据。那么，假如cs.test.com和daohang.test.com下的两个程序运行在同一</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">个服务器上。就意味着，访问cs.test.com与访问daohang.test.com是同一个会话。也就意味着，这两边访问后设置的</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">session数据是保存在同一个session文件中的。可以将名为PHPSESSIONID的cookie，其值看成是一个会话的id。会话结束后，该cookie过期或者被删。那么，服务器对应的session文件(名为"sess_[phpcookie值]")会被删掉吗？查看发现并不会被删掉。所以才会有session文件很多，出现读取性能的问题。session文件比较多的情况下，产生I/Q读写性能问题。了解到可以将session文件分多个目录保存(参考http://www.jb51.net/article/27941.htm)。php.ini中的配置项session.save_path,前面一个值M可以指定目录的深度级别。</font></div>\r\n\r\n\r\n', '', ''),
('tiankonguse1362969283', 'tiankonguse', '2013-03-11 10:34:43', 'URL详解', '<div style="text-align: center;"><font color="#000000">URL详解</font><br></div><div><font color="#000000"><br></font></div><div><font color="#000000">原文转自<a href="http://www.douban.com/note/204390654/">这里</a></font></div><div><font color="#000000"><br></font></div><div><font color="#000000">url,全称是UniformResourceLocator, 中文叫统一资源定位符,是互联网上用来标识某一处资源的地址。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">协议标准如下:</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">scheme://domain:port/path?query_string#fragment_id</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">对协议的各部分展开说明一下。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">=== scheme</font></div><div><font color="#000000">传输协议, 我们经常看到的传输协议有三种，分别是http,https,ftp</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">=== domain</font></div><div><font color="#000000">域名或ip</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">===port</font></div><div><font color="#000000">服务器端口</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">===path</font></div><div><font color="#000000">服务器路径</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">===query_string</font></div><div><font color="#000000">查询参数，以''?''为起点,每个参数通过&amp;分隔开,再以=分割参数key-value,</font></div><div><font color="#000000">对query_string进行utf8编码.</font></div><div><font color="#000000">根据rfc 1738文档规定, url必须由英文符号，数字和某些标点符号组成，不能出现其他文字，</font></div><div><font color="#000000">因此所有包含中文字符的url事实上都是非法的。我们为了实现在url中传递中文字符的目的。</font></div><div><font color="#000000">会提前对url里的中文进行编码。</font></div><div><font color="#000000">但由于rfc1738没有规定具体的中文编码类型，所以这一块处于未定义状态。比较混乱。由web服务商和浏览器独立定义，</font></div><div><font color="#000000">比如说百度会将中文转化成gbk编码，google会将中文转化成utf8编码。</font></div><div><font color="#000000">再比如说 firefox会将中文转化成gbk编码。而ie不对非ascii码的url进行编码，他会直接按照操作系统默认编码进行发送。</font></div><div><font color="#000000">所以这里要考虑两个方面，第一方面是浏览器的编码转化，第二方面是网站平台的编码转换。</font></div><div><font color="#000000">业内通行的做法，是对中文进行一次utf8编码。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">js和url编码相关的函数有以下几个</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">== escape</font></div><div><font color="#000000">对String对象编码以便使他们能在所有计算机上可读</font></div><div><font color="#000000">函数签名:escape(charString)</font></div><div><font color="#000000">必选项charstring参数是要编码的任意string对象</font></div><div><font color="#000000">escape方法返回一个包含了charstring内容的字符串值(Unicode格式). 所有空格，标点，重音符号以及其他非ascii字符都用%xx 编码代替，其中xx等于表示该字符的ascii值。例如，空格返回的是"%20", 字符值大于255的以%uxxxx格式存储,其中xxxx表示该字符的unicode值</font></div><div><font color="#000000">注意: escape方法不能用来对统一资源标识符(URI)进行编码。对其编码应使用encodeURI和encodeURIComponent方法。</font></div><div><font color="#000000">对应的解码函数为unescape函数</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">== encodeURI</font></div><div><font color="#000000">encodeURI函数可将字符串作为URI进行编码</font></div><div><font color="#000000">函数签名: encodeURI(URIString)</font></div><div><font color="#000000">URIString是一个含有URI或其他要编码的文本的字符串.返回一个URIString的副本，其中某些字符将被16进制的转义序列进行替换。 该方法不会对ascii字母和数字进行编码。</font></div><div><font color="#000000">该方法目的是对URI进行完整编码.因此对以下在URI中具有特殊意义的ascii标点符号，encodeURI函数是不会进行转义的. &nbsp;;/?:@&amp;=+$,#</font></div><div><font color="#000000">也不会对这些ascii标点符号进行编码: -_.!~*''()</font></div><div><font color="#000000">对应的解码函数为decodeURI</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">== encodeURICommponent</font></div><div><font color="#000000">该函数可把字符串作为URI组件进行编码。</font></div><div><font color="#000000">函数签名encodeURIComponent(URIstring)</font></div><div><font color="#000000">该方法不会对ASCII字母和数字进行编码，也不会对这些ascii标点符号进行编码: -_.!~*''()</font></div><div><font color="#000000">其他字符(比如 :;/?@&amp;=+$这些用于分割URI组件对标点符号)，都由一个或者多个16进制的转义序列替换</font></div><div><font color="#000000">和encodeURI的不同在于， 前者假定参数是URI的一部分(比如协议，主机名，路径或者查询字符串)。 因此encodeURIComponent对象将转义用于分割URI各个部分的标点符号.</font></div><div><font color="#000000">对应的解码函数为decodeURIComponent</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">== 总结</font></div><div><font color="#000000">escape除了acsii字母，数字和特定的符号外，对传进来的字符串全部进行转义编码，如果想对url编码，最好不要使用此方法。 而encodeURI用于编码整个URI,应为uRI中的合法字符都不会被编码转换。 encodeURIComponent方法编码URI的某一部分。它可以对中文进行转义而不会影响到整个URI.</font></div><div><font color="#000000">escape不对 @*/+编码</font></div><div><font color="#000000">encodeURI 不对 ~!@#$&amp;*()=:/,;?+编码</font></div><div><font color="#000000">encodeURIComponent不对~!*()''编码</font></div><div><font color="#000000">escape是window对象的方法</font></div><div><font color="#000000">encodeURIComponent和encodeURI是js内置函数</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">=== freagment_id &nbsp;锚参数</font></div><div><font color="#000000">锚参数不是服务器资源的一部分，理论上不会发送给服务器。js可以通过window.location.hash获取锚参数。</font></div>\r\n\r\n\r\n', '', '');
INSERT INTO `tk_blog` (`tk_blog_key`, `tk_blog_user`, `tk_blog_datetime`, `tk_blog_title`, `tk_blog_content`, `tk_blog_password`, `tk_blog_category`) VALUES
('tiankonguse1362969510', 'tiankonguse', '2013-03-11 10:38:30', 'PHP中如何保持SESSION以及由此引发的一些思考', '<div style="text-align: center;"><font color="#000000">PHP中如何保持SESSION以及由此引发的一些思考</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">本文转载自。。。</font></div><div><font color="#000000">注：由于网络中有很多这篇文章，原文地址无从考证</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">最近的一个项目，里面有一个比较大的表单。</font></div><div><font color="#000000">用户完成它需要很多时间，很多用户花了千辛万苦完成之后，一提交发现SESSION过期，系统退出了。</font></div><div><font color="#000000">所以引起了研究如何设置SESSION以及保持SESSION在线的需要。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">下面是一些心得体会。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">什么是SESSION？</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">按照WIKI的解释，SESSION是存在于两个通信设备间的交互信息，在某一时间建立，经过一定的时间后失效。</font></div><div><font color="#000000">常见的SESSION有：TCP SESSION、WEB SESSION（HTTP SESSION）、LOGIN SESSION等。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">根据OSI模型中，会话实现的位置不同，SESSION主要分为几种：</font></div><div><font color="#000000">一种是应用层会话，包括WEB SESSION（HTTP　SESSION）和telnet远程登录session；</font></div><div><font color="#000000">会话层实现的，包括Session Initiation Protocol（SIP）和Internet Phone Call；</font></div><div><font color="#000000">在传输层实现的有TCP　SESSION。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">本文主要讨论WEB SESSION。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">其一般有两种：客户端SESSION和服务器端SESSION，后一种最常见的属于Java Beans提供的。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000"><br></font></div><div><font color="#000000">SESSION是做什么的？</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">在计算机领域，特别是网络方面，SESSION使用的特别广泛，也可以称为是对话（Dialogue）、会话等</font></div><div><font color="#000000">一般是指在两个通信设备间存储的状态，有时也发生在用户和计算机之间（Login　SESSION）。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">区别于无状态的通信，SESSION通常用来存储通信状态，因此通信的双方至少有一方需要存储SESSION的历史记录，从而实现两者间的通信。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">SESSION（WEB　SESSION）是怎么实现的？</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">浏览器和服务器之间进行HTTP通信时，通常会包含一个　HTTP Cookie 来标识状态</font></div><div><font color="#000000">通常会有一个唯一的　SESSIONID　，SESSION通常记录着用户的一些验证信息和级别。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">在几中编程语言中最常用的Http Session Token是，JSESSIONID（JSP），PHPSESSID（PHP），ASPSESSIONID（ASP）</font></div><div><font color="#000000">这个标识通常由哈希函数产生，能够唯一表示这个用户的身份</font></div><div><font color="#000000">在服务器和客户端通信时，作为GET或者POST的参数存储在客户端。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">SESSION的实现方式通常有两种，服务器端SESSION和客户端SESSION，两种方式各有优缺点。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">服务器端SESSION实现容易并且效率比较高，但是遇到负载均衡或者高可用性需求的时候，处理起来就比较困难</font></div><div><font color="#000000">对于那种内生系统不存在存储设备的时候，也是不可用的。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">负载均衡可以通过共享文件系统或者强制客户只能登录到一台服务器上来实现，但是这样会降低效率。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">对于没有存储的设备，也可以通过使用RAM来解决服务器端SESSION的实现</font></div><div><font color="#000000">这种方法这对哪些客户端链接有限的系统有效（诸如路由或者接入点设备）。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">客户端SESSION的使用可以解决服务器端SESSION的一些问题</font></div><div><font color="#000000">比如避免了负载均衡的算法等，但是同时也会产生一些自身的问题。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">客户端SESSION使用Cookie和加密技术来在不同的请求间保存状态。</font></div><div><font color="#000000">在每一个动态页面结束后，会统计当前的SESSION，并把它发回客户端。</font></div><div><font color="#000000">每次成功请求后，会把cookie再发送到服务器端，来让服务器“记起”这个用户的身份。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">客户端SESSION最重要的问题就是安全问题，一旦cookie被劫持或者篡改了，用户的信息的安全性就丧失了。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">PHP中如何设置SESSION？</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">搭建好PHP的开发环境后，通过phpinfo()可以查看到与SESSION有关的部分包括：</font></div><div><font color="#000000">SESSION模块，在PHP V5.2.9版本中，一共有25个变量。其中，平时设置中常会用到的几个有：</font></div><div><font color="#000000">session.cookie_lifetime &nbsp; &nbsp; &nbsp; &nbsp;设置存储SESSIONID的cookie过期时间</font></div><div><font color="#000000">session.name &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;SESSION的COOKIE名称，默认为PHPSESSID</font></div><div><font color="#000000">session.save_handler &nbsp; &nbsp; &nbsp; &nbsp;SESSION的存储方式，默认为FILE &nbsp; &nbsp; &nbsp; &nbsp;</font></div><div><font color="#000000">session.save_path &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Fedora下面默认存储在/var/lib/php/session</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">session.gc_probability</font></div><div><font color="#000000">session.gc_divisor</font></div><div><font color="#000000">session.gc_maxlifetime &nbsp; &nbsp; &nbsp; &nbsp;这三个选项用来处理GC机制发生的机率</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">session.cache_limiter &nbsp; &nbsp;（nocache,private,private_no_expire,public）</font></div><div><font color="#000000">session.cache_expire &nbsp; &nbsp;这两个选项是用来缓存SESSION的页面</font></div><div><font color="#000000"><br></font></div><div><font color="#000000"><br></font></div><div><font color="#000000">先来考虑第一个问题，SESSION多久会过期，他是如何过期的？</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">如果要在PHP程序中使用SESSION，一定要先引用session_start()。</font></div><div><font color="#000000">这个函数一执行，就会在SESSION的存储目录（如果使用了file handler)生成一个SESSION文件，里面内容是空的</font></div><div><font color="#000000">同时浏览器会见里一个name为PHPSESSID的cookie，里面存储着一个hash出来的SESSION的名字。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000"><br></font></div><div><font color="#000000">SESSION的过期依赖于一个垃圾回收机制（Garbage Collection）</font></div><div><font color="#000000">SESSION创建后作为一个文件存放在服务器上，客户端脚本每访问一次SESSION中的变量，SESSION文件的访问时间就会进行更新。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">每次访问都是根据客户端存储的SESSIONID去请求服务器中存储的唯一的SESSION，当客户端的cookie过期后，就无法知道要访问的是哪一个SESSION，尽管此时服务器上的SESSION文件还没有被过期收回，这样就会造成服务器资源的浪费。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">但是同时，如果我们希望用户的session马上过期的话，我们就可以通过设置cookie的办法来实现。SESSION的回收是在每次访问页面的时候进行的，回收的机率由session.gc_probability，session_gc_divisor指定，默认士1/100。如果设置为1，则每次超过了SESSION的生存周期去访问的话，SESSION一定会被回收。</font></div><div><font color="#000000">&nbsp;</font></div><div><font color="#000000">两种需求：1、保持SESSION不过期或延长SESSION过期时间；2、使SESSION立即过期。&nbsp;</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">1、保持SESSION不过期和延长SESSION过期时间非常必要，特别是在内部应用系统中或者有很大的表单的时候。想想你的老板在填写一个表单，刚好碰上午饭时间，留着这个表单等吃饭回来，填写完剩余的内容，提交后他看到什么，一般来说都是一个登录界面。想要提高用户体验，关键是要让老板的表单不出问题，我们就必须延长SESSION的生存周期。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">保持SESSION不过期和延长SESSION过期时间，可以通过设置session.gc_maxlifetime来实现，不过首先需要保证客户端的cookie不会在gc执行回收之前失效。通过设置一个较长的gc_maxlifetime可以实现延长session的生存周期，可是对于不是所有请求都会保持很久的应用来说，这么做对于服务器配置显然不是一个最佳的选择。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">我们知道SESSION的回收机制是根据SESSION文件的最后访问时间来判断的，如果超过了maxlifetime，则根据回收机率进行回收。所以我们只需要定期的去访问一下SESSION就可以了，而这可以通过刷新页面来实现，根据这个思路，解决的方法就有了。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">通过JS定期的去访问页面；</font></div><div><font color="#000000">&nbsp; &nbsp; 利用Iframe定期的刷新页面；</font></div><div><font color="#000000">&nbsp; &nbsp; 直接利用程序发送HTTP请求，这样就可以避免在页面中嵌入其他的元素；</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">下面是利用JS发送请求实现的保持SESSION不过期的实现方法，这样我们就只需要在需要SESSION保持长时间的页面（比如大表单页面）。</font></div><div><font color="#000000">&nbsp; &nbsp; &lt;script type="text/javascript"&gt;</font></div><div><font color="#000000">&nbsp; &nbsp; &nbsp; &nbsp; function keepMeAlive(imgName){</font></div><div><font color="#000000">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; myImg = document.getElementById(imgName);</font></div><div><font color="#000000">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(myImg) myImg.src = myImg.src.replace(/\\?.*$/, ''?'' + Math.random());</font></div><div><font color="#000000">&nbsp; &nbsp; &nbsp; &nbsp; }</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">&nbsp; &nbsp; &nbsp; &nbsp; window.setInterval("keepMeAlive(''phpImg'');", 4000);</font></div><div><font color="#000000">&nbsp; &nbsp; &lt;/script&gt;</font></div><div><font color="#000000">&nbsp; &nbsp; &lt;img id="phpImg" src="http://www.tiankonguse.com/sess_refresh.php?" width="1" height="1" /&gt;</font></div><div><font color="#000000"><b>其中URL后加入一个随机数是为了避免这个链接的请求被浏览器缓存</b>。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">2、使SESSION立即过期的方法就比较多了，我们可以session_destroy()，也可以用上面的思路，请求一个session_destroy的页面。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">SESSION安全吗？</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">PHP的手册中明确写出：SESSION并不能保证储存在SESSION中的信息一定只能被他的创建者所看到。</font></div><div><font color="#000000">如果想要安全的处理一些远程的操作，那么HTTPS是唯一的选择。</font></div><div><font color="#000000">最基本的，不要认为一个用户信息在SESSION中存在就认为这个用户一定就是他本人，虽然SESSION中的信息会给你他已经经过了用户名和密码验证的假象。所以，如果需要做一些修改密码或者类似的事情的时候，让用户重新输入密码是一个比较好的选择。</font></div><div><font color="#000000">早期的Apache版本并没有采用COOKIE的方式来存储PHPSESSID，而是采用的URL-rewrite，也就是每个URL后面都会加上PHPSESSID=&lt;sessionid&gt;来表明它属于那个激活的SESSION，新版的Apache已经将这个属性设置为默认关闭。</font></div><div><font color="#000000">session.use_trans_id = 0;</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">所以从这个意义上来讲，延长SESSION的时间过长或者保持SESSION一直在线对于安全来说始终不是一件好事情。终极的解决办法就是用户提交跳转到登录窗口，登录后又能够回到填写页面，并且所有的数据都还在。这个的实现方式现在用Ajax来解决应该没什么困难，每隔一定时间就把当前的用户数据POST到一个存储位置，不管是XML或者JSON。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000"><br></font></div><div><font color="#000000">对于客户端不支持JavaScript的情况可以采用的方法：</font></div><div><font color="#000000">1、写一个浮层，显示在最顶层，如果用户未禁用JS，则让浮层消失；</font></div><div><font color="#000000">2、将所有的INPUT都设置为disable，然后再用JS设置为enabled；</font></div><div><font color="#000000">以上这两种方式都是在JS被禁用的时候，所有功能都不能用，如何在JS被禁用的情况下使我们的应用仍然正常工作，这个貌似就比较困难。实现这个的所花的时间和所收到的效果大家要权衡一下。</font></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><br></div>\r\n\r\n\r\n', '', ''),
('tiankonguse1362979887', 'tiankonguse', '2013-03-11 13:31:27', 'apache代理', '<div style="text-align: center;"><font color="#000000">apache代理</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">apache代理分为正向代理和反向代理.</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">1 正向代理:&nbsp;</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">客户端无法直接访问外部的web,需要在客户端所在的网络内架设一台代理服务器,客户端通过代理服务器访问外部的web(需要在客户端的浏览器中设置代理服务器)</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">适用于:&nbsp;</font></div><div><font color="#000000">①局域网的代理服务器(一般是网关,相当于squid的一般用法)</font></div><div><font color="#000000">②访问某个受限网络的代理服务器,如教育网访问某些国外网站需要找代理</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">2 反向代理:&nbsp;</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">客户端能访问外部的web,但是不能访问目标web,目标web所在的网络内一台机器充当目标web的代理,客户端直接访问代理就像访问目标web一样(此代理对客户端透明,即客户端不用做如何设置,并不知道实际访问的只是代理而已,以为就是访问的目标)</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">适用于:&nbsp;</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">①idc的某台目标机器只对内开放web,外部的客户端要访问,就让另一台机器做proxy,外部直接访问proxy即相当于访问目标</font></div><div><font color="#000000">②idc的目标机器的某个特殊的web服务跑在非正常端口如9000,而防火墙上只对外开放了80,此时可在80上做proxy映射到9000,外部访问80即相当于9000</font></div>\r\n\r\n\r\n', '', ''),
('tiankonguse1362989604', 'tiankonguse', '2013-03-11 16:13:24', '【windows】Windows Script Host', '<br><div style="color: rgb(0, 0, 0);">今天认识到了windows下的好多脚本语言。</div><div style="color: rgb(0, 0, 0);"><br></div><div style="color: rgb(0, 0, 0);">这里，要说的是WSH脚本。</div><div style="color: rgb(0, 0, 0);"><br></div><div style="color: rgb(0, 0, 0);">官方解释在<a href="http://msdn.microsoft.com/en-us/library/ec0wcxh3(v=vs.85).aspx">这里</a></div><div style="color: rgb(0, 0, 0);"><br></div><div style="color: rgb(0, 0, 0);"><span style="color: rgb(68, 68, 68); line-height: 1.333;">简单的说，WSH就是一个独立的宿主脚本语言。</span><br></div><div style="color: rgb(0, 0, 0);"><br></div><div style="color: rgb(0, 0, 0);">这里的独立是相对于javascript来说的，<span style="color: rgb(68, 68, 68); line-height: 1.333;">javascript必须依靠浏览器来执行。</span></div><div style="color: rgb(0, 0, 0);"><span style="color: rgb(68, 68, 68); line-height: 1.333;"><br></span></div><div>而WSH在windows上双击就能运行，不依靠浏览器。</div><div><br></div><div>WSH主要用于非交互的任务，例如批处理。</div><div style="color: rgb(0, 0, 0);"><br></div>', '', ''),
('tiankonguse1362990448', 'tiankonguse', '2013-03-11 16:27:28', '【windows】Windows Script Files', '<div style="color: rgb(0, 0, 0); font-size: 22px;"><br></div><font color="#000000">今天还知道了WSF</font><div style="color: rgb(0, 0, 0); font-size: 22px;">官方解释见<a href="http://msdn.microsoft.com/en-us/library/15x4407c(v=vs.85).aspx">这里</a></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><br></div><div><font color="#000000">A Windows script (*.wsf) file is a text document containing Extensible Markup Language (XML) code.&nbsp;</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">It incorporates several features that offer you increased scripting flexibility.</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">Because Windows script files are not engine-specific, they can contain script from any Windows Script compatible scripting engine.</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">They act as a container.</font><br></div><div><font color="#000000"><br></font></div><div><font color="#000000">简单的说WSF是一个包含XML代码的javascript文本文件。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">具体的功能请参考官方文档。</font></div>', '', ''),
('tiankonguse1363003455', 'tiankonguse', '2013-03-11 20:04:15', '【框架问题集】window.location.href 中 target 的问题', '<div style="text-align: center;"><font color="#000000">window.location.href 中 target 的问题</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">在使用框架时，经常会对框架子页面进行页面重定向。</font></div><div><font color="#000000">如果只是简单的设置location.href="",重定向的页面还在框架内。</font></div><div><font color="#000000">这显然不是我们想看到的。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">最笨的方法：使用form</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">例如，我加了个form,在form里就可以使用 target 了。</font></div><div><font color="#000000">然后，</font></div><div><font color="#000000"><br></font></div><div><pre><code class="javascript">&lt;form id="form_tmp" method="post" target="_top" action="url" &gt;\r\n&lt;/form&gt;\r\n&lt;script language="JavaScript" type="text/javascript"&gt;\r\n	document.getElementById("form_tmp").submit();\r\n&lt;/script&gt;</code></pre></div><div><font color="#000000"><br></font></div><div><font color="#000000">实际上只要指定子框架的父级框架页面链接至目标页面即可。</font></div><div><font color="#000000"><br></font></div><div><pre><code class="javascript">window.top.frames("framename").location.href = url;\r\n\r\nwindow.parent.location.href=url;\r\n\r\nmainframe.location.href=url;</code></pre></div><div><font color="#000000"><br></font></div><div><font color="#000000"><br></font></div><div><font color="#000000"><br></font></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><br></div>\r\n\r\n\r\n', '', ''),
('tiankonguse1363045487', 'tiankonguse', '2013-03-12 07:44:47', 'JavaScript基础之对象', '<div style="text-align: center;"><font color="#000000">JavaScript基础之对象</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">原文转载自<a href="http://www.w3school.com.cn/js/pro_js_object_defining.asp">这里</a></font></div><div><font color="#000000"><br></font></div><div><font color="#000000">1 JavaScript对象</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">&nbsp; &nbsp; ECMA-262将对象（object）定义为"属性的无序集合，每个属性存放一个原始值、对象或函数"（unordered collection of properties each of which contains a primitive value, object, or function）。这意味着对象是无特定顺序的值的数组。在ECMAScript中，对象由特性（Attribute）构成，特性可以是原始值，也可以是引用值。如果特性存放的是函数，它将被看作对象的方法（Method），否则该特性被看作属性（Property）。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">2 对象的废除</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">&nbsp; &nbsp; ECMAScript有无用存储单元收集程序（就像C#的垃圾收集器），意味着不必专门销毁对象来释放内存。当再没有对对象的引用时，该对象就被废除了。运行无用存储单元收集程序时，所有废除的对象都会被销毁。每当函数执行完它的代码，无用存储单元收集程序都会运行，释放所有的局部变量，还有在一些其它不可预知的情况下，无用存储单元收集程序也会运行。&nbsp;</font></div><div><font color="#000000">&nbsp; &nbsp; 把对象的所有引用都设置为null，可以强制性的废除对象。例如：</font></div><div><pre><code class="javascript">    Var oObject=new Object();\r\n\r\n    // 程序逻辑\r\n\r\n    oObject=null;</code></pre></div><div><font color="#000000">&nbsp; &nbsp; 当变量oObject设置为null后，对第一个创建的对象的引用就不存在了。这意味着下次运行无用存储单元收集程序时，该对象将被销毁。&nbsp;</font></div><div><font color="#000000">&nbsp; &nbsp; 每用完一个对象后，就将其废除，来释放内存，这是个好习惯。这样还确保不再使用已经不能访问的对象，从而防止程序设计错误的出现。此外，旧的浏览器（如IE）没有完全的无用存储单元收集程序，所以卸载页面时，对象可能不能被正确地销毁。以前IE6就有这样的诟病，当页面被关闭后对象还是没有被释放，所以总是会导致内存溢出的错误。废除对象和它所有的特性是确保内存正确使用的最好方法。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">3 对象的类型</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">&nbsp; &nbsp; JavaScript中对象分为：本地对象（native object）、内置对象（built-in object）、宿主对象（host object）。其中本地对象和宿主对象大家一般用的比较多，比较熟。这里我就重点说明一下内置对象。&nbsp;</font></div><div><font color="#000000">&nbsp; &nbsp; ECMA-262把内置对象定义为"由ECMAScript实现提供的、独立于宿主环境的所有对象，在ECMAScript程序开始执行时出现"（any object supplied by an ECMAScript implementation, independent of the host environment, which is present at the start of the execution of an ECMAScript program.）。这意味着开发者不必明确实例化内置对象，它已经被实例化了。但ECMAScript只定义了两个内置对象：</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">3.1 Math对象</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">&nbsp; &nbsp; Math对象就是解决数学问题的所有公式。这个在各种编程语言中都有类似的实现，就不做介绍了。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">3.2 Global对象</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">&nbsp; &nbsp; 园子里很多搞ASP.net的，相信大家对其中的Global.asax非常熟悉了。但这个对象在ECMAScript中却比较特殊。因为它实际上根本就不存在。如果尝试编写下面的代码去实例化它，将得到错误：&nbsp;</font></div><div><pre><code class="javascript">    Var _global=new Global(); </code></pre></div><div><font color="#000000">&nbsp; &nbsp; 错误消息显示Global不是对象，但上文却说Global是一个内置对象，这不就自相矛盾了吗？不矛盾。这里需要理解的主要概念是，在ECMAScript中，不存在独立的函数，所有的函数都必须是某个对象的方法。ECMAScript中常用的函数例如isNaN()、isFinite（）等，看起来都像独立的函数。实际上，它们都是Global对象的方法。而且Global对象的方法还不止这些。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">4 定义类或对象</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">&nbsp; &nbsp; 虽然ECMAScript越来越正规化了，但创建对象的方法却被置之不理。在高级的编程语言（如C#）中，创建对象的方法被明确的定义了。所以不会有太大的分歧。但在脚本语言中创建对象的方法就是多种多样了。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">4.1 工厂方式</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">由于对象的属性可在对象创建后动态定义，所以许多开发者都在初次引入JavaScript时编写类似下面的代码：&nbsp;</font></div><div><pre><code class="javascript">    Var oCar=new Object(); \r\n    oCar.color="red"; \r\n    oCar.doors=4; \r\n    oCar.mpg=23; \r\n    oCar.showColor=function(){alert(this.color);}; </code></pre></div><div><font color="#000000">&nbsp; &nbsp; 在这段代码中，创建对象car。然后给它设置几个属性：它的颜色是红色，有四个门，每加仑油23英里。最后一个属性是指向函数的指针，意味着该属性其实是个方法。执行这段代码后，就可以使用对象car了。可是要创建多个car实例就麻烦了。&nbsp;</font></div><div><font color="#000000">&nbsp; &nbsp; 要解决此问题，开发者可以创建并返回特定类型的对象的工厂函数。例如，函数CreateCar（）可用于封装前面列出的创建car对象的操作：&nbsp;</font></div><div><pre><code class="javascript">    Function createCar() \r\n    { \r\n        Var oTempCar=new Object(); \r\n        oTempCar.color="red"; \r\n        oTempCar.doors=4; \r\n        oTempCar.mpg=23; \r\n        oTempCar.showColor=function(){alert(this.color)};\r\n    \r\n        return oTempCar; \r\n    } \r\n\r\n    Var oCar1=createCar(); \r\n    Var oCar2=createCar();</code></pre></div><div><font color="#000000"><br></font></div><div><font color="#000000">&nbsp; &nbsp; 这里，前面的所有代码都包含在createCar()函数中，此外还有一行额外的代码，返回Car对象作为函数值。调用此函数时，将创建新对象，并赋予它所有必要的属性，复制出一个前面说明的car对象。使用该方法，可以容易地创建car对象的两个版本，他们的属性完全一样。当然，还可以修改creatCar（）函数，给它传递各个属性的默认值，而不是赋予属性默认值：&nbsp;</font></div><div><pre><code class="javascript">    Function createCar(sColor,iDoors,iMpg) \r\n    { \r\n        Var oTempCar=new Object(); \r\n        oTempCar.color= sColor; \r\n        oTempCar.doors= iDoors; \r\n        oTempCar.mpg= iMpg; \r\n        oTempCar.showColor=function(){alert(this.color)};\r\n\r\n        return oTempCar; \r\n    } \r\n    \r\n    Var oCar1=createCar("red",4,23); \r\n    Var oCar2=createCar("blue",2,26); \r\n    oCar1.showColor();            // 输出"red" \r\n    oCar2.showColor();            // 输出"blue"</code></pre></div><div><font color="#000000"><br></font></div><div><font color="#000000">&nbsp; &nbsp; 给createCar（）函数加上参数，即可为要创建的car对象的color、doors和mpg属性赋值。使这两个对象具有相同的属性，却有不同的属性值。但这里有个问题：每次调用函数createCar（），都要创建新函数showColor()，意味着每个对象都有自己的showColor（）版本。事实上，每个对象用的都是同一段代码。这样的定义方法还有一个如下的变形：</font></div><div><pre><code class="javascript">    Function Car(sColor,iDoors,iMpg) \r\n    { \r\n        this.color= sColor; \r\n        this.doors= iDoors; \r\n        this.mpg= iMpg; \r\n        this.showColor=function(){alert(this.color)}; \r\n    }\r\n\r\n    Var oCar1=new Car("red",4,23); \r\n    Var oCar2=new Car("blue",2,26);\r\n\r\n    oCar1.showColor();            // 输出"red" \r\n    oCar2.showColor();            // 输出"blue" </code></pre></div><div><font color="#000000">&nbsp; &nbsp; 这个方法和上一个方法有个一样的缺陷：重复的创建了showColor()函数。为了解决这个缺陷我们可以用下面的方法。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">4.2 原型方式</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">&nbsp; &nbsp; 该方法利用了对象的Prototype属性。用空构造函数来设置类名，然后所有的属性和方法都被直接赋予prototype属性：&nbsp;</font></div><div><pre><code class="javascript">    Function Car() \r\n    {} \r\n\r\n    Car.prototype.color="red"; \r\n    Car.prototype.doors=4;\r\n    Car.prototype.mpg=23; \r\n    Car.prototype.showColor=function(){alert(this.color)};\r\n\r\n     Var oCar1=new Car(); \r\n    Var oCar2=new Car();</code></pre></div><div><font color="#000000"><br></font></div><div><font color="#000000">&nbsp; &nbsp; 使用这个方法可以解决重复创建showColor（）函数，但又会有新的问题，考虑下面的例子：&nbsp;</font></div><div><pre><code class="javascript">    Function Car() \r\n    {} \r\n\r\n    Car.prototype.color="red"; \r\n    Car.prototype.doors=4; \r\n    Car.prototype.mpg=23; \r\n    Car.prototype.drivers=new Array("Mike","Sue"); \r\n    Car.prototype.showColor=function(){alert(this.color)};\r\n\r\n     Var oCar1=new Car(); \r\n    Var oCar2=new Car();\r\n\r\n    oCar1.drivers.push("Matt"); \r\n\r\n    alert(oCar1.drivers);        // 输出"Mike,Sue,Matt" \r\n    alert(oCar2.drivers);        // 输出"Mike,Sue,Matt"</code></pre></div><div><font color="#000000">&nbsp; &nbsp; 这里，属性drivers是指向Array对象的指针。改变指针指向的内容，所有的实例都会改变。看来这种方法也不可取</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">&nbsp; &nbsp; 4.3 混合方式</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">&nbsp; &nbsp; 这种方式就是用构造函数定义对象的所有非函数属性，用原型方式定义对象的函数属性（方法）。结果所有的函数只创建一次，而每个对象都具有自己的对象属性实例。&nbsp;</font></div><div><pre><code class="javascript">    Function Car(sColor,iDoors,iMpg) \r\n    { \r\n        this.color= sColor; \r\n        this.doors= iDoors;\r\n\r\n	this.mpg= iMpg;\r\n	Car.drivers=new Array("Mike","Sue"); \r\n    } \r\n\r\nCar.prototype.showColor=function(){alert(this.color)}; \r\n\r\nVar oCar1=new Car("red",4,23); \r\nVar oCar2=new Car("blue",3,25); \r\n\r\noCar1.drivers.push("Matt"); \r\n\r\nalert(oCar1.drivers);        // 输出"Mike,Sue,Matt" \r\nalert(oCar2.drivers);        // 输出"Mike,Sue"</code></pre></div><div><font color="#000000"><br></font></div><div><font color="#000000">这种方式是ECMAScript主要采用的方式，它具有其他方式的特性，却没有它们的缺陷。在实际编程中应用的也是最多了。&nbsp;</font></div><div><font color="#000000">另外还有JSON创建方式。其创建的方式如下：</font></div><div><font color="#000000"><br></font></div><div><pre><code class="javascript">var Car = \r\n{ \r\n    color: "red", \r\n    doors: 4, \r\n    mpg: 23, \r\n    drivers: [{name: "Mike", age: 20, Married: false}, {name: "Sue", age: 30, Marred: true}],\r\n    showColor: function() {alert(this.color)} \r\n}; </code></pre></div><div><font color="#000000">这种创建对象的方式也比较优雅。可作为Ajax返回的文本，然后用eval()函数将其还原成一个对象。著名的脚本框架JQuery就有专门接收返回文本为JSON对象的异步方法。</font></div><div><font color="#000000"><br></font></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><br></div>', '', ''),
('tiankonguse1363056627', 'tiankonguse', '2013-03-12 10:50:27', '疯癫了一个世纪 仍爱你', '<div style="text-align: center;"><font color="#000000">疯癫了一个世纪 仍爱你</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">[1]</font></div><div><font color="#000000">那年。陈奕迅在《红玫瑰》里唱着</font></div><div><font color="#000000">得不到的永远在骚动 被偏爱的都有恃无恐</font></div><div><font color="#000000">所以你是我 得不到的悲</font></div><div><font color="#000000">&nbsp;</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">[2]</font></div><div><font color="#000000">那年。李玖哲在《想太多》里唱着</font></div><div><font color="#000000">他霸占了你的心中 属于我的角落</font></div><div><font color="#000000">所以你说 我们不是你和我</font></div><div><font color="#000000">&nbsp;</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">[3]</font></div><div><font color="#000000">那年。周杰伦在《珊瑚海》里唱着</font></div><div><font color="#000000">海鸟跟鱼相爱</font></div><div><font color="#000000">只是一场意外</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">[4]</font></div><div><font color="#000000">那年。林宥嘉在《说谎》里唱着</font></div><div><font color="#000000">我没有说谎</font></div><div><font color="#000000">我何必说谎</font></div><div><font color="#000000">你懂我的</font></div><div><font color="#000000">我对你从来就不会假装。</font></div><div><font color="#000000">&nbsp;</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">[5]</font></div><div><font color="#000000">那年。孙燕姿在《风筝》里唱着</font></div><div><font color="#000000">天上的风筝哪儿去了</font></div><div><font color="#000000">一眨眼 不见了</font></div><div><font color="#000000">谁把它的线剪断了</font></div><div><font color="#000000">你知不知道</font></div><div><font color="#000000">&nbsp;</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">[6]</font></div><div><font color="#000000">那年。辛晓琪在《味道》里唱着</font></div><div><font color="#000000">我以为伤心可以很少</font></div><div><font color="#000000">我以为我能过得很好</font></div><div><font color="#000000">谁知道一想你</font></div><div><font color="#000000">思念苦无药</font></div><div><font color="#000000">无处可逃</font></div><div><font color="#000000">&nbsp;</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">[7]</font></div><div><font color="#000000">那年。 萧敬腾在《原谅我》里唱着</font></div><div><font color="#000000">请原谅我 原谅我不成熟</font></div><div><font color="#000000">不爱你是藉口 好让你离开我</font></div><div><font color="#000000">&nbsp;</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">[8]</font></div><div><font color="#000000">那年。张惠妹在《记得》里唱着</font></div><div><font color="#000000">谁还记得爱情开始变化的时候</font></div><div><font color="#000000">我和你的眼中看见了　不同的天空</font></div><div><font color="#000000">&nbsp;</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">[9]</font></div><div><font color="#000000">那年。张学友在《我等到花儿也谢了》里唱着</font></div><div><font color="#000000">每个人都在问 我到底还在等什么</font></div><div><font color="#000000">等到春夏秋冬都过了 难道还不够</font></div><div><font color="#000000">其实是因为我的心有一个缺口</font></div><div><font color="#000000">等待拿走的人把它还给我</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">[10]</font></div><div><font color="#000000">那年。孙燕姿在《我不难过》中哭着唱着</font></div><div><font color="#000000">我真的懂 你不是喜新厌旧</font></div><div><font color="#000000">是我没有 陪在你身边 当你寂寞时候</font></div><div><font color="#000000">&nbsp;</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">[11]</font></div><div><font color="#000000">那年。林俊杰在《一千年以后》生情地唱着</font></div><div><font color="#000000">一千年以后 世界早已没有我</font></div><div><font color="#000000">无法深情挽着你的手浅吻着你的额头</font></div><div><font color="#000000">&nbsp;</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">[12]</font></div><div><font color="#000000">那年。刘若英在《后来 》里追悔地唱着</font></div><div><font color="#000000">后来</font></div><div><font color="#000000">我总算学会了如何去爱</font></div><div><font color="#000000">可惜你 早已远去</font></div><div><font color="#000000">消失在人海</font></div><div><font color="#000000">但是 后来</font></div><div><font color="#000000">念你的时光比相爱更长 现在的你还好吗</font></div>', '', ''),
('tiankonguse1363056971', 'tiankonguse', '2013-03-12 10:56:11', '关于ASP中提示[Microsoft][ODBC Microsoft Access Dri', '<div style="text-align: center;"><font color="#000000">关于ASP中提示[Microsoft][ODBC Microsoft Access Driver] 不能更新</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">数据库或对象为只读。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">可能是你的Access所在的盘为ntfs格式</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">而这个格式中要求相应的帐户具有修改的权限 这样access才能够进行更新</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">方法：</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">如果配置站点的时候，分区是NTFS格式的情况下，会遇到80004005的数据库或对象为只读错误，如：</font></div><div><font color="#000000">Microsoft OLE DB Provider for ODBC Drivers 错误 ''80004005''</font></div><div><font color="#000000">[Microsoft][ODBC Microsoft Access Driver] 不能更新。数据库或对象为只读。</font></div><div><font color="#000000">造成这个原因的问题就是站点目录的访问权限问题，因为在使用Access数据库的时候，要在同目录生成一个.ldb文件，如果此目录没有写权限或者Access数据库本身没有写的权限，那么就会报这个错误。由于通过浏览器访问网站大都使用Internet匿名访问，我们只需要在数据库的目录权限里添加上“IUSR_计算机名”用户就可以了，分给它“写入”权限。我发现一些文章说让加入EveryOne用户，并给“写入”权限，这个太危险了。原则上是此目录加的可以写入用户就是在IIS中配置的时候加的Internet匿名访问用户，一般默认为“IUSR_计算机名”，不过如果是虚拟主机就要自己看看了。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">操作方式就是：</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">鼠标右键点击数据库所在目录（或者它上级目录，但是注意要能够继承权限）-〉选择“共享和安全”-〉选择“安全”选项卡-〉点击“添加”按钮-〉点击“高级...”按钮-〉点击“立即查找(N)”按钮-〉找到前缀为“IUSR_”的用户名（格式为IUSR_计算机名）-〉选中此用户，点击确定-〉这样这个用户就被加进来了-〉在“Internet来宾帐户”的权限框中，除了默认的还要选中“写入权限”-〉“应用”或者“确定”即可。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">提示：如果是WinXP系统下找不到“共享和安全”选项，需要先进行一下设置：“工具”-〉“文件夹选项”-〉“查看”-〉“默认使用简单共享(推荐)”，把这个选项去掉，再在文件夹上右键点击，就会出现安全这个选项。</font></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><br></div>', '', ''),
('tiankonguse1363074606', 'tiankonguse', '2013-03-12 15:50:06', '我相信你 正如你相信我', '<div style="text-align: center;"><font color="#000000">我相信你 正如你相信我</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">转载自网上</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">前些天，在报纸上看到这样一篇故事：两个陌生人因为网络而相识，男子因为独自一人在外打工，所以便靠网络打发时间，一次无意间加了一个女孩为好友，两人便试着聊了起来，而且聊的很投机，几个小时后，便互留了手机号码。男子告诉女孩，自己在一家图文店打工，但自己的理想是做一名记者和作家，因为中途缀学所以没拿到文凭，偶有小文被编辑看中发表在报纸一角，然后收藏到博客里聊以Z·W。女孩告诉男子，自己正在读大四，为了减轻家里负担，一边读书一边打工。男子一直忙于加班，所以两人一直没有机会见面。直到有一天，男子收到女孩的短信，说是她放在宿舍门口的行李箱被盗了，里面有钱包和身份证。她原打算今天回家的，早上睡过头，谁知道一觉醒来行李箱就不见了，她想向男子借200元回家路费的钱，男子二话没说，便答应了。事后男子的同事都笑他傻，这样的骗局都相信。男子付之一笑，他说相信她那么坚强勤奋的一个女孩，不会去骗人的。转眼九月，男子无意中接到了女孩打开的电话，说是还200元，男子说不用了，可是女孩坚持要还，说是冲到他手机话费上，之后便匆匆挂了电话。第二天，男子没想到他的手机话费上果然多出了200元，那晚，两人在湖边见面，男子问她为什么敢单独与自己见面，这么晚就不怕自己？女孩又还不犹豫的反问道男子为什么又敢把钱毫不犹豫地借给从没见过的陌生人？难道不怕自己是一个骗子？“我相信你，一如你相信我。”两人几乎同时说出了这句话。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">我相信你，一如你相信我！一句简简单单的话语，便折射出人与人之间应有的信任。苏霍姆林斯基说过：对人的热情，对人的信任，形像点说，是爱抚、温存的翅膀赖以飞翔的空气。“生命不可能从谎言中开出灿烂的鲜花。”</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">信任需要真诚，需要心灵相惜，它是相互的，也同时是人与人之间的纽带，它可以不用言语，可以不用行动，只是心灵上的升华，一种虔诚、诚恳的艺术。它是一种美德，也是一种坚定。高尚与可敬，都隐含于信任的真谛里，信任不是一种态度，而是一种能力，它是一种健康的冒险，它拥有关怀与爱。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">一个人对外界的人和事物的信任，是对自己的信任外向投射的结果，敢于适度冒险的人，心理健康程度相对于来说会高点。心理学家认为，对一个人的信任意味着，坚信每一个人的自然倾向是愿意被主流社会所接受。信任不仅仅是人与人之间，而是一种社会常态的体现，一种主流趋势的尊重和遵守。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">我们需要信任，但不能肤浅的去相信，否则旋踵而至的则是猜忌、背叛、懊恼、伤心等负面情绪，盲目相信，是毫无意义的行为，我们所需要的相信是真正能够驾驭心灵的那种获得爱的甘醇的温暖。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">信任是一种抉择，它更是一种拥有。人生如白驹过隙，生命在拥有与失去之间，早已间隙流干，我们何尝不能在这一袭白羽间获得一份宁静。我们经历着不同的坎坷与考验，我们崛起奋斗诺言的承付，我们亦可选择真诚，选择相信。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">信任，源于我们内心的依靠，相信，是我们信任的结果。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">正如我相信你，正如你相信我，正如我们携手同行。</font></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><br></div>', '', '');
INSERT INTO `tk_blog` (`tk_blog_key`, `tk_blog_user`, `tk_blog_datetime`, `tk_blog_title`, `tk_blog_content`, `tk_blog_password`, `tk_blog_category`) VALUES
('tiankonguse1363074757', 'tiankonguse', '2013-03-12 15:52:37', '一个人的爱恋', '<div style="text-align: center;"><font color="#000000">一个人的爱恋</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">转载自网络</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">漆黑的夜，不见了那熟悉的画面，于是站到最高点，看着路口，我希望站在最显眼的地方，你能看见。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">田维说：“我多想在一个结了冰花的晨早，醒在你的梦里。我们都是留恋人间的天使。万物美好，我在中央。”是啊，我多想活在你思绪的某个瞬间，仅仅是那刹那、那一个瞬间，我也会觉得万物美好，我就会觉得我是生活在幸福的中央。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">也许，在每一个寂静的夜晚，你会静静的向着他。思念是一季的花香，不曾让人遗忘。可是他不知道你在想他，一如你不知道我在思念着你。人生就是这样，充满着无可奈何，可是每一次的思念，每一次的痛苦却是自己心甘情愿。不是不怕痛了，不是不怕思念成为穿肠毒药，只是害怕失去你，害怕没有你的日子。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">心有千千结。喜欢一个人，就是这么一件千回百转的事。没有弄懂自己感情的人，是孩子，无忧无虑，心性天真，纯洁无瑕；弄懂自己感情的人是大人，知道自己会跟什么样的人在一起，又会和什么样的人过一辈子；最糟糕的是那些活在青春岁月里的人，懵懵懂懂，面对感情，不知如何是好。这样的人是最可怜的。这样的人拼命地装的潇洒，拼命地装的洒脱，什么都不在乎，只是伪装而已，因为他们害怕，有的人害怕面对，有的人害怕未知的结果，还有的人害怕自己。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">一个人的爱恋是孤独的。你一直希望，一觉醒来，什么都没有变，那个他还在原地，没有走开，等待着你去追寻。你看到他的身影，也许会不顾一切的去前进，为的就是可以一直看到那个熟悉的背影，哪怕就这样一直远远的看着就好。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">一个人的爱恋是萧瑟的。我一直希望，不再睡去，每一年、每一月、 每一天 、每一个小时，甚至每一分钟都可以看到你，看到你的身影。岁月悠悠，有你的日子，就不孤单。就这样看着，远远的，便是永恒。再也不敢睡去，如果睡去，就再也不要醒来，那样，你就永远在我的梦里，不曾离去。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">一个人的爱恋是悲哀。你一直，在他的身后紧紧追随，你是多么希望他能回转过来，牵起你的手，以后的日子不管多难，不管多苦，也不把你留下，让你一个人孤独。可惜只是自己的一厢情愿，不管你怎么去呼喊，他都没有停下，甚至没有回头。跌倒了，摔伤了，喊哑了，充耳不闻，视而不见，做他最冷漠的人，也许那就是他。痛了，碎了，不管不顾，一直前行，这就是你。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">一个人的爱恋是卑微的。我一直跟着你，不曾离去。你摔倒了，跌上了，默默扶起你，守在你身后，看着你，心疼。多想去安慰你，就此放手，可是卑微的我又有什么资格去这么说。你伤心的哭泣，心碎的流泪 ，就好比一把尖刀，一刀一刀的划着我的心，把我凌迟。心在流血，可是依然不能失去你。哪怕守候的是那么的卑微。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">一个人的爱恋总是那么的让人伤痕累累、一个人的爱恋总是让人那么的伤悲、一个人的爱恋总是那么的让人心碎、一个人的爱恋一旦爱了就再也收不回。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">我爱着你，你却爱着他，我的心都碎了。一个人的爱恋，只是他又单恋着谁？每一个人，都有一个人在默默的关注着他。只是自己不知道。就好比一个人的爱恋，你拼命的去付出，即便如此，也不过是多了一些无谓的烦恼，也不过是多了许多伤痛。可是，一个人的爱恋，就如同走火入魔，再也丢不开、放不下。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">一个人的爱恋，在时间的流逝中，也许就会隐藏，不对任何人说，只在某一个瞬间突然想起，原来也曾深深的爱恋过一个人。这是一份都么美好的回忆。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">一个人的爱恋，有一个人值得你去思念，有一个人值得你去守候，有一个人值得你去等待，风吹日晒，这份爱恋的感情依然存在。一个人的爱恋又岂是说忘记就能忘记。值得打包、珍藏在心底最珍贵的地方。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">一个人的爱恋，如同一坛美酒，时间越久，香味越是醇正。爱恋一个人，久久的，金岳霖爱恋林徽因，那是一件多么值得回味的故事。如果爱恋一个人，当如金岳霖。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">一个人的爱恋，是四季的花开，在每一个季节里，都让你魂牵梦绕着那样的一个人，那样的一个人一直生活在你的生活里，你不曾孤单，因为有这希望，有着期盼，就会有义无反顾的等待。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">四季花开，我转身，未曾离开，可是，你却不在。深深失落，却也欣然。一个人的爱恋终归要有终点。爱恋一个人，又何必强求着那个人的幸福就要你来给？爱恋一个人，深深爱着，就好。</font></div>', '', ''),
('tiankonguse1363074980', 'tiankonguse', '2013-03-12 15:56:20', '你不必完美', '<div style="text-align: center;"><font color="#000000">你不必完美</font></div><div><font color="#000000"><br></font></div><div><span style="color: rgb(0, 0, 0); line-height: 1.333;">我们当然应该努力做到最好，但人是无法要求完美的。我们面对的情况如此复杂，以致无人能始终不出错。</span><br></div><div><font color="#000000"><br></font></div><div><font color="#000000">好几次，当我必须告诉我的孩子们我在某件事上做错了时，我多害怕他们不再爱戴我。但我非常惊奇地发现，他们因为我愿意承认自己的错误而更爱我。比较起来，他们更需要我诚实、正直。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">然而，有时人们并不能正确对待自己的过失。也许我们的父母期望我们完美无瑕；也许我们的朋友常念叨我们的缺点，因为他们希望我们能够改正。而他们难以谅解的是因为我们的过失总在他们最脆弱的时候触痛了他们的心。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">这让我们感到负疚。但在承担过错之前，我们必须问问自己，那是否真是我们应该背负的包袱。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">我是从一个童话中得到启示的。一个被劈去了一小片的圆想要找回一个完整的自己，到处寻找自己的碎片。由于它是不完整的，滚动得非常慢，从而领略了沿途美丽的鲜花，它和虫子们聊天，它充分地感受到阳光的温暖。它找到许多不同的碎片，但它们都不是它原来的那一块，于是它坚持着找寻……直到有一天，它实现了自己的心愿。然而，作为一个完美无缺的圆，它滚动得太快了，错过了花开的时节，忽略了虫子。当它意识到这一切时，它依然舍弃了历尽千辛万苦才找到的碎片。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">这个故事告诉我们：也许正是失去，才令我们完整。一个完美的人，在某种意义上说，是一个可怜的人，他永远无法体会有所追求、有所希冀的感觉，他永远无法体会爱他的人带给他某些他一直追求而得不到的东西的喜悦。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">一个有勇气放弃他无法实现的梦想的人是完整的；一个能坚强地面对失去亲人的悲痛的人是完整的–因为他们经历了最坏的遭遇，却成功地抵御了这种冲击。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">生命不是上帝用于捕捉你的错误的陷阱。你不会因为一个错误而成为不合格的人。生命是一场球赛，最好的球队也有丢分的记录，最差的球队也有辉煌的一天。我们的目标是尽可能让自己得到的多于失去的。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">当我们接受人的不完美时，当我们能为生命的继续运转而心存感激时，我们就能成就完整，而别的人却渴求完整–当他们为完美而困惑的时候。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">如果我们能勇敢去爱、去原谅，为别人的幸福慷慨地表达我们的欣慰，理智地珍惜环绕自己的爱，那么，我们就能得到别的生命不曾获得的圆满。</font></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><br></div><div style="color: rgb(0, 0, 0); font-size: 22px;">转载自网络<br></div>', '', ''),
('tiankonguse1363083108', 'tiankonguse', '2013-03-12 18:11:48', 'android.os.NetworkOnMainThreadException异常', '<div style="text-align: center;"><font color="#000000">android.os.NetworkOnMainThreadException异常</font></div><div><font color="#000000"><br></font></div><div><font color="#000000"><br></font></div><div><font color="#000000">这个异常大概意思是在主线程访问网络时出的异常。&nbsp;</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">Android在4.0之前的版本 支持在主线程中访问网络，但是在4.0以后对这部分程序进行了优化，也就是说访问网络的代码不能写在主线程中了。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">那么如何做才能正常运行呢？</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">官方给的建议是加入这两个函数</font></div><pre><code class="java">StrictMode.setThreadPolicy(new StrictMode.ThreadPolicy.Builder()  \r\n        .detectDiskReads()  \r\n        .detectDiskWrites()  \r\n        .detectNetwork()   // or .detectAll() for all detectable problems  \r\n        .penaltyLog()  \r\n        .build());  \r\nStrictMode.setVmPolicy(new StrictMode.VmPolicy.Builder()  \r\n        .detectLeakedSqlLiteObjects()  \r\n        .detectLeakedClosableObjects()  \r\n        .penaltyLog()  \r\n        .penaltyDeath()  \r\n</code></pre><div><span style="font-family: ''Courier New'', monospace; font-size: 12px; line-height: 1.333;">&nbsp; &nbsp; &nbsp; &nbsp; .build());&nbsp;</span><span style="color: rgb(0, 0, 0); line-height: 1.333; white-space: pre;">		</span><br></div><div><font color="#000000">然后我把这两个函数封装起来了</font></div><div><pre><code class="java">import android.annotation.SuppressLint;\r\nimport android.os.StrictMode;\r\n\r\n@SuppressLint("NewApi")\r\npublic class MyStrictMode {\r\n	public static void strictMode() {\r\n		StrictMode.setThreadPolicy(new StrictMode.ThreadPolicy.Builder()\r\n				.detectDiskReads().detectDiskWrites().detectNetwork()\r\n				.penaltyLog().build());\r\n		StrictMode.setVmPolicy(new StrictMode.VmPolicy.Builder()\r\n				.detectLeakedSqlLiteObjects() // 探测SQLite数据库操作\r\n				.penaltyLog() // 打印logcat\r\n				.penaltyDeath().build());\r\n	}\r\n}</code></pre></div><div><font color="#000000"><br></font></div><div><font color="#000000">然后在需要的时候，在onCreate(Bundle savedInstanceState) 中写入一些代码：</font></div><div><pre><code class="java">\r\nMyStrictMode.strictMode();</code></pre></div><div><font color="#000000"><br></font></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><br></div>', '', ''),
('tiankonguse1363095847', 'tiankonguse', '2013-03-12 21:44:07', 'debuggex 正则表达式可视化工具', '<div style="color: rgb(0, 0, 0); font-size: 22px; text-align: center;"><font color="#000000">debuggex 正则表达式可视化工具</font></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><font color="#000000"><br></font></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><font color="#000000">如果你看过我之前发过的几篇正则表达式有关的记录，就会发现，分析正则表达式很抽象</font></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><font color="#000000"><br></font></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><font color="#000000">以前的记录见这里</font></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><font color="#000000"><span class="Apple-tab-span" style="white-space:pre">	</span><a href="http://www.tiankonguse.com/blog/tiankonguse1362204003.html">url正则表达式详细分析</a></font></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><font color="#000000"><span class="Apple-tab-span" style="white-space:pre">	</span><a href="http://www.tiankonguse.com/blog/tiankonguse1362559295.html">(请忽略这篇文章)学习 javascript 正则表达式 的实验(3)</a>&nbsp;</font></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><font color="#000000"><span class="Apple-tab-span" style="white-space:pre">	</span><a href="http://www.tiankonguse.com/blog/tiankonguse1362558780.html">(请忽略这篇文章)学习 javascript 正则表达式 的实验(2)</a>&nbsp;</font></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><font color="#000000"><span class="Apple-tab-span" style="white-space:pre">	</span><a href="http://www.tiankonguse.com/blog/tiankonguse1362217735.html">number正则表达式</a>&nbsp;</font></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><font color="#000000"><br></font></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><font color="#000000">现在，我在网络中发现了一个网站，对写的正则表达式进行了图解，这样就变得很形象了。</font></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><font color="#000000"><br></font></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><font color="#000000">这个网站的地址是：<a href="http://www.debuggex.com/?re=&amp;str=">这里&nbsp;</a></font></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><br></div><div><font color="#000000">A visual regular expression debugger, tester, and helper.</font><br></div>', '', ''),
('tiankonguse1363096277', 'tiankonguse', '2013-03-12 21:51:17', '监测网页在不同的显示器上的效果', '<div style="text-align: center;"><font color="#000000">Responsive Web Design Testing Tool</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">做一个网站，不仅要适应不同的浏览器(软件层)，还要适应不同的显示器(硬件层)。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">这有个网站，可以测试自己的网站在不同的硬件层上的效果。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">这个网站的地址是： <a href="http://mattkersley.com/responsive/">这里</a></font></div><div><font color="#000000"><br></font></div><div><font color="#000000">This tool has been built to help with testing your responsive websites while you design and build them.</font></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><br></div>', '', ''),
('tiankonguse1363185519', 'tiankonguse', '2013-03-13 22:38:39', 'FileZilla读取目录列表失败的解决办法', '<div style="text-align: center;"><font color="#000000">FileZilla读取目录列表失败的解决办法</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">FileZilla这个软件是<a href="http://winguse.com/">小程</a>介绍给我的，之后我就一直在用着。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">可是最近使用FileZilla时出现“读取目录列表失败”的错误提示，无法正常连接该服务器。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">起初我以为是网络不好的原因，可是后来我在网络中发现有很多人使用FileZilla时都遇到这个问题。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">解决方案：</font></div><div><span class="Apple-tab-span" style="white-space:pre"><font color="#000000"><span style="white-space: normal;">	</span></font></span><font color="#000000">检查FileZilla传输模式是否设置为被动。</font></div><div><span class="Apple-tab-span" style="white-space:pre"><font color="#000000"><span style="white-space: normal;">	</span></font></span><font color="#000000">如果是被动的话就要设置为主动，可以在“文件”-“站点管理器”中设置。</font></div><div><span class="Apple-tab-span" style="white-space: pre;"><font color="#000000"><span style="white-space: normal;">	</span></font></span><font color="#000000">如果FileZilla的站点管理器中尚未有站点，就把你要用的ftp站点添加进去，然后再设置。</font></div>', '', ''),
('tiankonguse1363218199', 'tiankonguse', '2013-03-14 07:43:19', 'Notepad++ 快捷键 大全', '<div style="text-align: center;"><font color="#000000">Notepad++ 快捷键 大全</font></div><div><font color="#000000"><br></font></div><div><font color="#000000"><br></font></div><div><font color="#000000">Ctrl+C 复制</font></div><div><font color="#000000">Ctrl+X 剪切</font></div><div><font color="#000000">Ctrl+V 粘贴</font></div><div><font color="#000000">Ctrl+Z 撤消</font></div><div><font color="#000000">Ctrl+Y 恢复</font></div><div><font color="#000000">Ctrl+A 全选</font></div><div><font color="#000000">Ctrl+F 键查找对话框启动</font></div><div><font color="#000000">Ctrl+H 查找/替换对话框</font></div><div><font color="#000000">Ctrl+D 复制并粘贴当行</font></div><div><font color="#000000">Ctrl+L 删除当前行</font></div><div><font color="#000000">Ctrl+T 当行向上移动一行</font></div><div><font color="#000000">F3 查找下一个</font></div><div><font color="#000000">Shift+F3 查找上一个</font></div><div><font color="#000000">Ctrl+Shift+F 组合在文件中查找</font></div><div><font color="#000000">Ctrl+F3 查找（volatil）下一页</font></div><div><font color="#000000">Ctrl+Shift+F3 查找（volatil）上一页</font></div><div><font color="#000000">Ctrl+Shift+I 组合增量搜索</font></div><div><font color="#000000">Ctrl+S 保存文件</font></div><div><font color="#000000">Ctrl+Alt+S 另存为</font></div><div><font color="#000000">Ctrl+Shift+S 保存所有文件</font></div><div><font color="#000000">Ctrl+O 打开文件</font></div><div><font color="#000000">Ctrl+N 新建立文件</font></div><div><font color="#000000">Ctrl+F2 切换书签</font></div><div><font color="#000000">F2 转到下一个书签</font></div><div><font color="#000000">Shift+F2 转到上一个书签</font></div><div><font color="#000000">CTRL+G 定位换行,偏移量</font></div><div><font color="#000000">Ctrl+W 关闭当前文档</font></div><div><font color="#000000">Alt+Shift+Arrow 键移箭头键或</font></div><div><font color="#000000">ALT+鼠标左键 单击列选择</font></div><div><font color="#000000">F5 启动运行对话框</font></div><div><font color="#000000">Ctrl+空格 输入法切换</font></div><div><font color="#000000">Alt+空格 程序单击右键</font></div><div><font color="#000000">Tab 插入缩进</font></div><div><font color="#000000">Shift+Tab 删除缩进</font></div><div><font color="#000000">Alt-Shift-Arrow 或</font></div><div><font color="#000000">Ctrl +鼠标滚轮钮 放大缩小</font></div><div><font color="#000000">Ctrl +Keypad/恢复原来的大小</font></div><div><font color="#000000">F11 全屏模式</font></div><div><font color="#000000">Ctrl+Tab 下一个文档</font></div><div><font color="#000000">Ctrl+Shift+Tab 上一个文档</font></div><div><font color="#000000">Ctrl+Shift+Up 当前线向上移</font></div><div><font color="#000000">Ctrl-Shift-Down 当前线向下移</font></div><div><font color="#000000">Ctrl+Alt+F 折叠当前层次</font></div><div><font color="#000000">Ctrl+Alt+Shift+F展开当前层次</font></div><div><font color="#000000">Alt+0 折叠全部</font></div><div><font color="#000000">Alt+Shift+0 展开全部</font></div><div><font color="#000000">Alt+(1~8) 折叠级别（1~8）</font></div><div><font color="#000000">Alt+Shift+(1~8) 展开级别（1~8）</font></div><div><font color="#000000">Ctrl+BackSpace 删除开始词</font></div><div><font color="#000000">Ctrl+Delete 删除结束词</font></div><div><font color="#000000">Ctrl+Shift+BackSpace 删除至行</font></div><div><font color="#000000">Ctrl+Shift+Delete 删除至行尾</font></div><div><font color="#000000">CTRL+U 转换为小写</font></div><div><font color="#000000">Ctrl+Shift+U 转换为大写</font></div><div><font color="#000000">Ctrl+B 转至匹配的括号</font></div><div><font color="#000000">Ctrl+Shift+R 的开始录制/停止录制宏</font></div><div><font color="#000000">Ctrl+Shift+P 播放录制的宏</font></div><div><font color="#000000">CTRL+Q 注释/取消注释</font></div><div><font color="#000000">Ctrl+Shift+Q 值流评论</font></div><div><font color="#000000">Ctrl+Shift+T 当前行复制到剪贴板</font></div><div><font color="#000000">Ctrl+P 打印</font></div><div><font color="#000000">Alt+F4 退出</font></div><div><font color="#000000">Ctrl+I 分割线</font></div><div><font color="#000000">Ctrl+J 连接行</font></div><div><font color="#000000">Ctrl+Alt+R 从右边阅读</font></div><div><font color="#000000">Ctrl+Alt+L 从左边阅读</font></div><div><font color="#000000">Ctrl+H 打开Find / Replace 对话框</font></div><div><font color="#000000">Ctrl+D 复制当前行</font></div><div><font color="#000000">Ctrl+L 删除当前行</font></div><div><font color="#000000">Ctrl+T 上下行交换</font></div><div><font color="#000000">F3 找下一个</font></div><div><font color="#000000">Shift+F3 找上一个</font></div><div><font color="#000000">Ctrl+Shift-F 在文件中找</font></div><div><font color="#000000">Ctrl+F2 触发书签</font></div><div><font color="#000000">F2 到前一个书签</font></div><div><font color="#000000">Shift+F2 到下一个书签</font></div><div><font color="#000000">F5 打开run对话框</font></div><div><font color="#000000">Ctrl+Space 打开CallTip列表框</font></div><div><font color="#000000">Tab (selection of several lines) 加入Space</font></div><div><font color="#000000">Shift+Tab (selection of several lines) 移除Space</font></div><div><font color="#000000">F11 全屏</font></div><div><font color="#000000">Alt+0 折叠全部</font></div><div><font color="#000000">Alt+Shift+0 展开全部</font></div><div><font color="#000000">Ctrl+U 变为小写</font></div><div><font color="#000000">Ctrl+Shift+U 变为大写</font></div><div><font color="#000000">Ctrl+Q 块注释/消除注释</font></div>', '', ''),
('tiankonguse1363244420', 'tiankonguse', '2013-03-14 15:00:20', 'Google Reader 将关闭', '<div style="text-align: center;"><font color="#000000">Google Reader 将关闭</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">本来我打算每天去Google Reader上看文章的，结果有个不好的消息。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">谷歌今天宣布，将于今年7月1日关闭 RSS 订阅服务 Google Reader。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">还是老老实实的做自己的事吧！</font></div>', '', ''),
('tiankonguse1363268796', 'tiankonguse', '2013-03-14 21:46:36', '【asp做网站】错误代码 0x80004005 不能更新。数据库或对象为只读。', '<div><font color="#000000">Microsoft OLE DB Provider for ODBC Drivers (0x80004005)</font></div><div><font color="#000000">[Microsoft][ODBC Microsoft Access Driver] 不能更新。数据库或对象为只读。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000"><br></font></div><div><font color="#000000">造成这个原因的问题就是站点目录的访问权限问题</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">因为在使用Access数据库的时候，要在同目录生成一个.ldb文件，如果此目录没有写权限或者Access数据库本身没有写的权限，那么就会报这个错误。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">由于通过浏览器访问网站大都使用Internet匿名访问，我们只需要在数据库的目录权限里添加上“IUSR_计算机名”用户就可以了，分给它“写入”权限。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">在IIS中配置中，Internet匿名访问用户默认为“IUSR_计算机名”。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">具体的操作方式就是：</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">鼠标右键点击数据库所在目录（或者它上级目录，但是注意要能够继承权限）-〉选择“共享和安全”-〉选择“安全”选项卡-〉点击“添加”按钮-〉点击“高级...”按钮-〉点击“立即查找(N)”按钮-〉找到前缀为“IUSR_”的用户名（格式为IUSR_计算机名）-〉选中此用户，点击确定-〉这样这个用户就被加进来了-〉在“Internet来宾帐户”的权限框中，除了默认的还要选中“写入权限”-〉“应用”或者“确定”即可。</font></div><div><font color="#000000"><br></font></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><br></div>', '', ''),
('tiankonguse1363269770', 'tiankonguse', '2013-03-14 22:02:50', 'PHP Simple HTML DOM Parser Manual', '<div><font color="#000000"><br></font></div><div style="text-align: center;"><font color="#000000">PHP Simple HTML DOM Parser Manual</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">在html中，我们可以使用javascript非常方便的来操作html的文档。</font></div><div><font color="#000000">但是，如果我们只有html的代码，这些代码并未在浏览器上运行，则我们很难来操作html文档。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">今天<a href="http://winguse.com/">小程</a>给我介绍了一个工具PHP Simple HTML DOM Parser Manual。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">这个工具是php上的一个插件。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">使用它后，我们在php服务器上就能想在浏览器上一样方便的操纵html代码了。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">首先，我们要下载这个插件了，下载地址在<a href="http://simplehtmldom.sourceforge.net">这里</a></font></div><div><font color="#000000"><br></font></div><div><font color="#000000">然后，我们在需要使用这个插件的文件中引用插件文件。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">1.create HTML DOM object</font></div><div><font color="#000000"><br></font></div><div><pre><code class="php">// 使用字符串创建一个 DOM object\r\n$html = str_get_html(''&lt;html&gt;&lt;body&gt;Hello!&lt;/body&gt;&lt;/html&gt;'');\r\n\r\n// 使用一个url地址创建一个 DOM object\r\n$html = file_get_html(''http://www.google.com/'');\r\n\r\n// 使用自己服务器上的一个文件创建一个 DOM object\r\n$html = file_get_html(''test.htm'');\r\n\r\n//创建一个空的 DOM object\r\n$html = new simple_html_dom();\r\n\r\n// 也可以使用加载的方法，来创建一个 DOM object\r\n$html-&gt;load(''&lt;html&gt;&lt;body&gt;Hello!&lt;/body&gt;&lt;/html&gt;'');\r\n$html-&gt;load_file(''http://www.google.com/''); \r\n$html-&gt;load_file(''test.htm'');</code></pre></div><div><font color="#000000"><br></font></div><div><font color="#000000"><br></font></div><div><font color="#000000">2.获得HTML element objects</font></div><div><pre><code class="php">\r\n//获得所有a标签对象\r\n$ret = $html-&gt;find(''a'');\r\n\r\n//返回第一个a标签对象\r\n$ret = $html-&gt;find(''a'', 0);\r\n\r\n//返回最后一个a标签对象\r\n$ret = $html-&gt;find(''a'', -1); \r\n\r\n//返回带有id的div对象\r\n$ret = $html-&gt;find(''div[id]'');\r\n\r\n//返回带有id为foo的div对象\r\n$ret = $html-&gt;find(''div[id=foo]''); \r\n\r\n//返回所有id为foo的对象\r\n$ret = $html-&gt;find(''#foo'');\r\n\r\n//返回所有class为foo的对象\r\n$ret = $html-&gt;find(''.foo'');\r\n\r\n//返回所有含有id的对象\r\n$ret = $html-&gt;find(''*[id]''); \r\n\r\n//返回所有的链接和图片对象\r\n$ret = $html-&gt;find(''a, img''); \r\n\r\n//返回所有li的一个祖先是ul的li对象\r\n$es = $html-&gt;find(''ul li'');\r\n\r\n//返回所有div的一个祖先是div且这个div的祖先还有一个div的div对象\r\n$es = $html-&gt;find(''div div div''); \r\n\r\n//返回所有 table具有hello类的td对象\r\n$es = $html-&gt;find(''table.hello td'');\r\n\r\n\r\n\r\n//返回所有的额注释对象(&lt;!--...--&gt;)s \r\n$es = $html-&gt;find(''comment'');\r\n\r\n\r\n\r\n// 返回第一个ul中的第一个li\r\n$e = $html-&gt;find(''ul'', 0)-&gt;find(''li'', 0);</code></pre></div><div><font color="#000000"><br></font></div><div><font color="#000000">注：</font></div><div><font color="#000000">find函数简介</font></div><div><font color="#000000">&nbsp; &nbsp; find函数第一个参数为查找条件，如果有第二个参数，为查找第几个对象，若为负数则逆着查找</font></div><div><font color="#000000">&nbsp; &nbsp; find函数返回的是一个数组，如果未找到，返回null</font></div><div><font color="#000000">&nbsp; &nbsp; 对于find返回的对象可以继续执行find操作。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">在查找中中括号中的属性有以下几种情况</font></div><div><font color="#000000">[attribute]</font><span class="Apple-tab-span" style="white-space:pre"><font color="#000000"><span style="white-space: normal;">	</span></font></span><font color="#000000"> 匹配有attribute属性的对象</font></div><div><font color="#000000">[!attribute] 匹配没有 attribute属性的对象</font></div><div><font color="#000000">[attribute=value]</font><span class="Apple-tab-span" style="white-space:pre"><font color="#000000"><span style="white-space: normal;">	</span></font></span><font color="#000000">匹配attribute属性的值为value的对象</font></div><div><font color="#000000">[attribute!=value]</font><span class="Apple-tab-span" style="white-space:pre"><font color="#000000"><span style="white-space: normal;">	</span></font></span><font color="#000000">匹配attribute属性的值不为value的对象</font></div><div><font color="#000000">[attribute^=value]</font><span class="Apple-tab-span" style="white-space:pre"><font color="#000000"><span style="white-space: normal;">	</span></font></span><font color="#000000">匹配attribute属性的值以value开始的对象(value是匹配的值的前缀)</font></div><div><font color="#000000">[attribute$=value]</font><span class="Apple-tab-span" style="white-space:pre"><font color="#000000"><span style="white-space: normal;">	</span></font></span><font color="#000000">匹配attribute属性的值以value结束的对象(value是匹配的值的后缀)</font></div><div><font color="#000000">[attribute*=value]</font><span class="Apple-tab-span" style="white-space:pre"><font color="#000000"><span style="white-space: normal;">	</span></font></span><font color="#000000">匹配attribute属性的值含有value的对象(value是匹配的值的子串)</font></div><div><font color="#000000">&nbsp; &nbsp;&nbsp;</font></div><div><font color="#000000">3.得到对象的属性</font></div><div><font color="#000000">access the HTML element''s attributes</font></div><div><font color="#000000"><br></font></div><div><pre><code class="php">\r\n//返回一个属性值(如果是非属性值，例如checked, selected,则返回true or false)\r\n$value = $e-&gt;href;\r\n\r\n//设置一个属性值(如果是非属性值，例如checked, selected,则设置true or false)\r\n$e-&gt;href = ''my link'';\r\n\r\n//删除一个属性值\r\n$e-&gt;href = null;\r\n\r\n//判断一个属性值是否存在\r\nif(isset($e-&gt;href)) echo ''href exist!'';\r\n        \r\n// 例如\r\n$html = str_get_html("&lt;div&gt;foo &lt;b&gt;bar&lt;/b&gt;&lt;/div&gt;"); \r\n$e = $html-&gt;find("div", 0);\r\n\r\n//得到 div\r\necho $e-&gt;tag; \r\n\r\n// 得到 " &lt;div&gt;foo &lt;b&gt;bar&lt;/b&gt;&lt;/div&gt;"\r\necho $e-&gt;outertext; \r\n\r\n// 得到: " foo &lt;b&gt;bar&lt;/b&gt;"\r\necho $e-&gt;innertext;\r\n\r\n// 得到: " foo bar"\r\necho $e-&gt;plaintext; \r\n\r\n// Extract contents from HTML \r\necho $html-&gt;plaintext;\r\n\r\n//在对象外面添加一个标签\r\n$e-&gt;outertext = ''&lt;div class="wrap"&gt;'' . $e-&gt;outertext . ''&lt;div&gt;'';\r\n\r\n//清空一个对象\r\n$e-&gt;outertext = '''';\r\n\r\n//这个对象后面或前边增加一些东西\r\n$e-&gt;outertext = $e-&gt;outertext . ''&lt;div&gt;foo&lt;div&gt;'';\r\n$e-&gt;outertext = ''&lt;div&gt;foo&lt;div&gt;'' . $e-&gt;outertext;</code></pre></div><div><font color="#000000"><br></font></div><div><font color="#000000">注：</font></div><div><font color="#000000">属性简介：</font></div><div><font color="#000000">Read or write the tag name of element.</font></div><div><font color="#000000">$e-&gt;tag</font><span class="Apple-tab-span" style="white-space:pre"><font color="#000000"><span style="white-space: normal;">	</span></font></span><font color="#000000"> &nbsp; &nbsp; &nbsp; &nbsp;</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">Read or write the outer HTML text of element.</font></div><div><font color="#000000">$e-&gt;outertext</font><span class="Apple-tab-span" style="white-space:pre"><font color="#000000"><span style="white-space: normal;">	</span></font></span></div><div><font color="#000000"><br></font></div><div><font color="#000000">Read or write the inner HTML text of element.</font></div><div><font color="#000000">$e-&gt;innertext</font><span class="Apple-tab-span" style="white-space:pre"><font color="#000000"><span style="white-space: normal;">	</span></font></span></div><div><font color="#000000"><br></font></div><div><font color="#000000">Read or write the plain text of element.</font></div><div><font color="#000000">$e-&gt;plaintext</font><span class="Apple-tab-span" style="white-space:pre"><font color="#000000"><span style="white-space: normal;">	</span></font></span></div><div><font color="#000000"><br></font></div><div><font color="#000000"><br></font></div><div><font color="#000000">4.遍历dom对象</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">Returns the Nth child object if index is set, otherwise return an array of children.</font></div><div><font color="#000000">$e-&gt;children ( [int $index] )</font><span class="Apple-tab-span" style="white-space:pre"><font color="#000000"><span style="white-space: normal;">	</span></font></span></div><div><font color="#000000"><br></font></div><div><font color="#000000">Returns the parent of element.</font></div><div><font color="#000000">element$e-&gt;parent ()</font><span class="Apple-tab-span" style="white-space:pre"><font color="#000000"><span style="white-space: normal;">	</span></font></span></div><div><font color="#000000"><br></font></div><div><font color="#000000">Returns the first child of element, or null if not found.</font></div><div><font color="#000000">element$e-&gt;first_child ()</font><span class="Apple-tab-span" style="white-space:pre"><font color="#000000"><span style="white-space: normal;">	</span></font></span></div><div><font color="#000000"><br></font></div><div><font color="#000000">Returns the last child of element, or null if not found.</font></div><div><font color="#000000">element$e-&gt;last_child ()</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">Returns the next sibling of element, or null if not found.</font></div><div><font color="#000000">element$e-&gt;next_sibling ()</font><span class="Apple-tab-span" style="white-space:pre"><font color="#000000"><span style="white-space: normal;">	</span></font></span></div><div><font color="#000000"><br></font></div><div><font color="#000000">Returns the previous sibling of element, or null if not found.</font></div><div><font color="#000000">element$e-&gt;prev_sibling ()</font><span class="Apple-tab-span" style="white-space:pre"><font color="#000000"><span style="white-space: normal;">	</span></font></span></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><br></div>', '', '');
INSERT INTO `tk_blog` (`tk_blog_key`, `tk_blog_user`, `tk_blog_datetime`, `tk_blog_title`, `tk_blog_content`, `tk_blog_password`, `tk_blog_category`) VALUES
('tiankonguse1363270054', 'tiankonguse', '2013-03-14 22:07:34', '【API Reference】PHP Simple HTML DOM Parser', '<div><div style="text-align: center;">【API Reference】PHP Simple HTML DOM Parser<br></div><div style="text-align: left;"><br></div><div style="text-align: left;">由于<a href="http://simplehtmldom.sourceforge.net/">这个网站</a>有时候会被墙，所以，我把PHP Simple HTML DOM Parser的api作为记录放在这里，以后就不用翻过去去查看文档了。</div><div style="text-align: left;"><br></div><div><span class="Apple-tab-span" style="white-space:pre"><span style="white-space: normal;">	</span></span></div></div><strong style="color: rgb(0, 33, 102); font-size: 12px; font-family: Monaco, Verdana, sans-serif; line-height: 14px;">Helper</strong><span style="color: rgb(0, 33, 102); font-size: 12px; font-family: Monaco, Verdana, sans-serif; line-height: 14px; background-color: rgb(246, 246, 246);">&nbsp;functions</span><table width="100%" cellpadding="1" cellspacing="1" style="color: rgb(0, 33, 102); font-size: 12px; font-family: Monaco, Verdana, sans-serif; line-height: 14px;"><tbody><tr><th width="320" style="font-family: ''Lucida Grande'', Verdana, Geneva, sans-serif; color: rgb(0, 0, 0); background-color: rgb(207, 212, 230); margin: 2px; padding: 2px; font-size: 13px; font-weight: normal;">Name</th><th style="font-family: ''Lucida Grande'', Verdana, Geneva, sans-serif; color: rgb(0, 0, 0); background-color: rgb(207, 212, 230); margin: 2px; padding: 2px; font-size: 13px; font-weight: normal;">Description</th></tr><tr><td style="background-color: rgb(221, 221, 221);"><span class="returns" style="font-size: 10px; color: rgb(136, 136, 136); float: left; text-align: right; margin-right: 4px; width: 48px;">object</span>str_get_html (&nbsp;<span class="var" style="color: rgb(119, 0, 0);">string $content</span>&nbsp;)</td><td class="description" style="background-color: rgb(221, 221, 221); font-family: ''Lucida Grande'', Verdana, Geneva, sans-serif; font-size: 11px; color: rgb(51, 51, 51);">Creates a DOM object from a string.</td></tr><tr><td style="background-color: rgb(221, 221, 221);"><span class="returns" style="font-size: 10px; color: rgb(136, 136, 136); float: left; text-align: right; margin-right: 4px; width: 48px;">object</span>file_get_html (&nbsp;<span class="var" style="color: rgb(119, 0, 0);">string $filename</span>&nbsp;)</td><td class="description" style="background-color: rgb(221, 221, 221); font-family: ''Lucida Grande'', Verdana, Geneva, sans-serif; font-size: 11px; color: rgb(51, 51, 51);">Creates a DOM object from a file or a URL.</td></tr></tbody></table><br style="color: rgb(0, 33, 102); font-family: Monaco, Verdana, sans-serif; font-size: 12px; line-height: 14px;"><strong style="color: rgb(0, 33, 102); font-size: 12px; font-family: Monaco, Verdana, sans-serif; line-height: 14px;">DOM</strong><span style="color: rgb(0, 33, 102); font-size: 12px; font-family: Monaco, Verdana, sans-serif; line-height: 14px; background-color: rgb(246, 246, 246);">&nbsp;methods &amp; properties&nbsp;</span><br style="color: rgb(0, 33, 102); font-family: Monaco, Verdana, sans-serif; font-size: 12px; line-height: 14px;"><table width="100%" cellpadding="1" cellspacing="1" style="color: rgb(0, 33, 102); font-size: 12px; font-family: Monaco, Verdana, sans-serif; line-height: 14px;"><tbody><tr><th width="320" style="font-family: ''Lucida Grande'', Verdana, Geneva, sans-serif; color: rgb(0, 0, 0); background-color: rgb(207, 212, 230); margin: 2px; padding: 2px; font-size: 13px; font-weight: normal;">Name</th><th style="font-family: ''Lucida Grande'', Verdana, Geneva, sans-serif; color: rgb(0, 0, 0); background-color: rgb(207, 212, 230); margin: 2px; padding: 2px; font-size: 13px; font-weight: normal;">Description</th></tr><tr><td style="background-color: rgb(221, 221, 221);"><div class="returns" style="font-size: 10px; color: rgb(136, 136, 136); float: left; text-align: right; margin-right: 4px; width: 48px;">void</div>__construct (&nbsp;<span class="var" style="color: rgb(119, 0, 0);">[string $filename]</span>&nbsp;)</td><td class="description" style="background-color: rgb(221, 221, 221); font-family: ''Lucida Grande'', Verdana, Geneva, sans-serif; font-size: 11px; color: rgb(51, 51, 51);">Constructor, set the filename parameter will automatically load the contents, either text or file/url.</td></tr><tr><td style="background-color: rgb(221, 221, 221);"><div class="returns" style="font-size: 10px; color: rgb(136, 136, 136); float: left; text-align: right; margin-right: 4px; width: 48px;">string</div>plaintext</td><td class="description" style="background-color: rgb(221, 221, 221); font-family: ''Lucida Grande'', Verdana, Geneva, sans-serif; font-size: 11px; color: rgb(51, 51, 51);">Returns the contents extracted from HTML.</td></tr><tr><td style="background-color: rgb(221, 221, 221);"><div class="returns" style="font-size: 10px; color: rgb(136, 136, 136); float: left; text-align: right; margin-right: 4px; width: 48px;">void</div>clear ()</td><td class="description" style="background-color: rgb(221, 221, 221); font-family: ''Lucida Grande'', Verdana, Geneva, sans-serif; font-size: 11px; color: rgb(51, 51, 51);">Clean up memory.</td></tr><tr><td style="background-color: rgb(221, 221, 221);"><div class="returns" style="font-size: 10px; color: rgb(136, 136, 136); float: left; text-align: right; margin-right: 4px; width: 48px;">void</div>load (&nbsp;<span class="var" style="color: rgb(119, 0, 0);">string $content&nbsp;</span>)</td><td class="description" style="background-color: rgb(221, 221, 221); font-family: ''Lucida Grande'', Verdana, Geneva, sans-serif; font-size: 11px; color: rgb(51, 51, 51);">Load contents from a&nbsp;<strong>string</strong>.</td></tr><tr><td style="background-color: rgb(221, 221, 221);"><div class="returns" style="font-size: 10px; color: rgb(136, 136, 136); float: left; text-align: right; margin-right: 4px; width: 48px;">string</div>save (&nbsp;<span class="var" style="color: rgb(119, 0, 0);">[string $filename]</span>&nbsp;)</td><td class="description" style="background-color: rgb(221, 221, 221); font-family: ''Lucida Grande'', Verdana, Geneva, sans-serif; font-size: 11px; color: rgb(51, 51, 51);">Dumps the internal DOM tree back into a&nbsp;<strong>string</strong>. If the $filename is set, result string will save to file.</td></tr><tr><td style="background-color: rgb(221, 221, 221);"><div class="returns" style="font-size: 10px; color: rgb(136, 136, 136); float: left; text-align: right; margin-right: 4px; width: 48px;">void</div>load_file (<span class="var" style="color: rgb(119, 0, 0);">&nbsp;string $filename</span>&nbsp;)</td><td class="description" style="background-color: rgb(221, 221, 221); font-family: ''Lucida Grande'', Verdana, Geneva, sans-serif; font-size: 11px; color: rgb(51, 51, 51);">Load contents from a from a file or a URL.</td></tr><tr><td style="background-color: rgb(221, 221, 221);"><div class="returns" style="font-size: 10px; color: rgb(136, 136, 136); float: left; text-align: right; margin-right: 4px; width: 48px;">void</div>set_callback (&nbsp;<span class="var" style="color: rgb(119, 0, 0);">string $function_name&nbsp;</span>)</td><td class="description" style="background-color: rgb(221, 221, 221); font-family: ''Lucida Grande'', Verdana, Geneva, sans-serif; font-size: 11px; color: rgb(51, 51, 51);">Set a callback function.</td></tr><tr><td style="background-color: rgb(221, 221, 221);"><div class="returns" style="font-size: 10px; color: rgb(136, 136, 136); float: left; text-align: right; margin-right: 4px; width: 48px;">mixed</div>find (<span class="var" style="color: rgb(119, 0, 0);">&nbsp;string $selector [, int $index]&nbsp;</span>)</td><td class="description" style="background-color: rgb(221, 221, 221); font-family: ''Lucida Grande'', Verdana, Geneva, sans-serif; font-size: 11px; color: rgb(51, 51, 51);">Find elements by the CSS selector. Returns the Nth element&nbsp;<strong>object</strong>&nbsp;if&nbsp;<strong>index</strong>&nbsp;is set, otherwise return an&nbsp;<strong>array</strong>&nbsp;of object.</td></tr></tbody></table><br style="color: rgb(0, 33, 102); font-family: Monaco, Verdana, sans-serif; font-size: 12px; line-height: 14px;"><strong style="color: rgb(0, 33, 102); font-size: 12px; font-family: Monaco, Verdana, sans-serif; line-height: 14px;">Element</strong><span style="color: rgb(0, 33, 102); font-size: 12px; font-family: Monaco, Verdana, sans-serif; line-height: 14px; background-color: rgb(246, 246, 246);">&nbsp;methods &amp; properties&nbsp;</span><br style="color: rgb(0, 33, 102); font-family: Monaco, Verdana, sans-serif; font-size: 12px; line-height: 14px;"><table width="100%" cellpadding="1" cellspacing="1" style="color: rgb(0, 33, 102); font-size: 12px; font-family: Monaco, Verdana, sans-serif; line-height: 14px;"><tbody><tr><th width="320" style="font-family: ''Lucida Grande'', Verdana, Geneva, sans-serif; color: rgb(0, 0, 0); background-color: rgb(207, 212, 230); margin: 2px; padding: 2px; font-size: 13px; font-weight: normal;">Name</th><th style="font-family: ''Lucida Grande'', Verdana, Geneva, sans-serif; color: rgb(0, 0, 0); background-color: rgb(207, 212, 230); margin: 2px; padding: 2px; font-size: 13px; font-weight: normal;">Description</th></tr><tr><td style="background-color: rgb(221, 221, 221);"><div class="returns" style="font-size: 10px; color: rgb(136, 136, 136); float: left; text-align: right; margin-right: 4px; width: 48px;">string</div><span class="var" style="color: rgb(119, 0, 0);">[attribute]</span></td><td class="description" style="background-color: rgb(221, 221, 221); font-family: ''Lucida Grande'', Verdana, Geneva, sans-serif; font-size: 11px; color: rgb(51, 51, 51);">Read or write element''s attribure value.</td></tr><tr><td style="background-color: rgb(221, 221, 221);"><div class="returns" style="font-size: 10px; color: rgb(136, 136, 136); float: left; text-align: right; margin-right: 4px; width: 48px;">string</div>tag</td><td class="description" style="background-color: rgb(221, 221, 221); font-family: ''Lucida Grande'', Verdana, Geneva, sans-serif; font-size: 11px; color: rgb(51, 51, 51);">Read or write the tag name of element.</td></tr><tr><td style="background-color: rgb(221, 221, 221);"><div class="returns" style="font-size: 10px; color: rgb(136, 136, 136); float: left; text-align: right; margin-right: 4px; width: 48px;">string</div>outertext</td><td class="description" style="background-color: rgb(221, 221, 221); font-family: ''Lucida Grande'', Verdana, Geneva, sans-serif; font-size: 11px; color: rgb(51, 51, 51);">Read or write the outer HTML text of element.</td></tr><tr><td style="background-color: rgb(221, 221, 221);"><div class="returns" style="font-size: 10px; color: rgb(136, 136, 136); float: left; text-align: right; margin-right: 4px; width: 48px;">string</div>innertext</td><td class="description" style="background-color: rgb(221, 221, 221); font-family: ''Lucida Grande'', Verdana, Geneva, sans-serif; font-size: 11px; color: rgb(51, 51, 51);">Read or write the inner HTML text of element.</td></tr><tr><td style="background-color: rgb(221, 221, 221);"><div class="returns" style="font-size: 10px; color: rgb(136, 136, 136); float: left; text-align: right; margin-right: 4px; width: 48px;">string</div>plaintext</td><td class="description" style="background-color: rgb(221, 221, 221); font-family: ''Lucida Grande'', Verdana, Geneva, sans-serif; font-size: 11px; color: rgb(51, 51, 51);">Read or write the plain text of element.</td></tr><tr><td style="background-color: rgb(221, 221, 221);"><div class="returns" style="font-size: 10px; color: rgb(136, 136, 136); float: left; text-align: right; margin-right: 4px; width: 48px;">mixed</div>find (<span class="var" style="color: rgb(119, 0, 0);">&nbsp;string $selector [, int $index]&nbsp;</span>)</td><td class="description" style="background-color: rgb(221, 221, 221); font-family: ''Lucida Grande'', Verdana, Geneva, sans-serif; font-size: 11px; color: rgb(51, 51, 51);">Find children by the CSS selector. Returns the Nth element&nbsp;<strong>object</strong>&nbsp;if&nbsp;<strong>index</strong>&nbsp;is set, otherwise, return an&nbsp;<strong>array</strong>&nbsp;of object.</td></tr></tbody></table><strong style="color: rgb(0, 33, 102); font-size: 12px; font-family: Monaco, Verdana, sans-serif; line-height: 14px;"><br>DOM</strong><span style="color: rgb(0, 33, 102); font-size: 12px; font-family: Monaco, Verdana, sans-serif; line-height: 14px; background-color: rgb(246, 246, 246);">&nbsp;traversing</span><br style="color: rgb(0, 33, 102); font-family: Monaco, Verdana, sans-serif; font-size: 12px; line-height: 14px;"><table width="100%" cellpadding="1" cellspacing="1" style="color: rgb(0, 33, 102); font-size: 12px; font-family: Monaco, Verdana, sans-serif; line-height: 14px;"><tbody><tr><th width="320" style="font-family: ''Lucida Grande'', Verdana, Geneva, sans-serif; color: rgb(0, 0, 0); background-color: rgb(207, 212, 230); margin: 2px; padding: 2px; font-size: 13px; font-weight: normal;">Name</th><th style="font-family: ''Lucida Grande'', Verdana, Geneva, sans-serif; color: rgb(0, 0, 0); background-color: rgb(207, 212, 230); margin: 2px; padding: 2px; font-size: 13px; font-weight: normal;">Description</th></tr><tr><td style="background-color: rgb(221, 221, 221);"><div class="returns" style="font-size: 10px; color: rgb(136, 136, 136); float: left; text-align: right; margin-right: 4px; width: 48px;">mixed</div>$e-&gt;children (&nbsp;<span class="var" style="color: rgb(119, 0, 0);">[int $index]</span>&nbsp;)</td><td class="description" style="background-color: rgb(221, 221, 221); font-family: ''Lucida Grande'', Verdana, Geneva, sans-serif; font-size: 11px; color: rgb(51, 51, 51);">Returns the Nth child&nbsp;<strong>object</strong>&nbsp;if&nbsp;<strong>index</strong>&nbsp;is set, otherwise return an&nbsp;<strong>array</strong>&nbsp;of children.</td></tr><tr><td style="background-color: rgb(221, 221, 221);"><div class="returns" style="font-size: 10px; color: rgb(136, 136, 136); float: left; text-align: right; margin-right: 4px; width: 48px;">element</div>$e-&gt;parent ()</td><td class="description" style="background-color: rgb(221, 221, 221); font-family: ''Lucida Grande'', Verdana, Geneva, sans-serif; font-size: 11px; color: rgb(51, 51, 51);">Returns the parent of element.</td></tr><tr><td style="background-color: rgb(221, 221, 221);"><div class="returns" style="font-size: 10px; color: rgb(136, 136, 136); float: left; text-align: right; margin-right: 4px; width: 48px;">element</div>$e-&gt;first_child ()</td><td class="description" style="background-color: rgb(221, 221, 221); font-family: ''Lucida Grande'', Verdana, Geneva, sans-serif; font-size: 11px; color: rgb(51, 51, 51);">Returns the first child of element, or&nbsp;<strong>null</strong>&nbsp;if not found.</td></tr><tr><td style="background-color: rgb(221, 221, 221);"><div class="returns" style="font-size: 10px; color: rgb(136, 136, 136); float: left; text-align: right; margin-right: 4px; width: 48px;">element</div>$e-&gt;last_child ()</td><td class="description" style="background-color: rgb(221, 221, 221); font-family: ''Lucida Grande'', Verdana, Geneva, sans-serif; font-size: 11px; color: rgb(51, 51, 51);">Returns the last child of element, or&nbsp;<strong>null</strong>&nbsp;if not found.</td></tr><tr><td style="background-color: rgb(221, 221, 221);"><div class="returns" style="font-size: 10px; color: rgb(136, 136, 136); float: left; text-align: right; margin-right: 4px; width: 48px;">element</div>$e-&gt;next_sibling ()</td><td class="description" style="background-color: rgb(221, 221, 221); font-family: ''Lucida Grande'', Verdana, Geneva, sans-serif; font-size: 11px; color: rgb(51, 51, 51);">Returns the next sibling of element, or<strong>&nbsp;null</strong>&nbsp;if not found.</td></tr><tr><td style="background-color: rgb(221, 221, 221);"><div class="returns" style="font-size: 10px; color: rgb(136, 136, 136); float: left; text-align: right; margin-right: 4px; width: 48px;">element</div>$e-&gt;prev_sibling ()</td><td class="description" style="background-color: rgb(221, 221, 221); font-family: ''Lucida Grande'', Verdana, Geneva, sans-serif; font-size: 11px; color: rgb(51, 51, 51);">Returns the previous sibling of element, or&nbsp;<strong>null</strong>&nbsp;if not found.</td></tr></tbody>\r\n\r\n</table><br><div style="color: rgb(0, 0, 0); font-size: 22px;"><span style="color: rgb(0, 33, 102); font-family: Monaco, Verdana, sans-serif; font-size: 12px; line-height: 14px; background-color: rgb(246, 246, 246);">You can also call methods with W3C STANDARD camel naming convertions.</span><br style="color: rgb(0, 33, 102); font-family: Monaco, Verdana, sans-serif; font-size: 12px; line-height: 14px;"><table width="100%" cellpadding="1" cellspacing="1" style="color: rgb(0, 33, 102); font-family: Monaco, Verdana, sans-serif; font-size: 12px; line-height: 14px;"><tbody><tr><th width="50%" style="font-family: ''Lucida Grande'', Verdana, Geneva, sans-serif; color: rgb(0, 0, 0); background-color: rgb(207, 212, 230); margin: 2px; padding: 2px; font-size: 13px; font-weight: normal;">Method</th><th style="font-family: ''Lucida Grande'', Verdana, Geneva, sans-serif; color: rgb(0, 0, 0); background-color: rgb(207, 212, 230); margin: 2px; padding: 2px; font-size: 13px; font-weight: normal;">Mapping</th></tr><tr bgcolor="#EEEEEE"><td style="background-color: rgb(221, 221, 221);"><div class="returns" style="font-size: 10px; color: rgb(136, 136, 136); float: left; text-align: right; margin-right: 4px; width: 48px;">array</div>$e-&gt;getAllAttributes ()</td><td style="background-color: rgb(221, 221, 221);"><div class="returns" style="font-size: 10px; color: rgb(136, 136, 136); float: left; text-align: right; margin-right: 4px; width: 48px;">array</div>$e-&gt;<span class="var" style="color: rgb(119, 0, 0);">attr</span></td></tr><tr bgcolor="#EEEEEE"><td style="background-color: rgb(221, 221, 221);"><div class="returns" style="font-size: 10px; color: rgb(136, 136, 136); float: left; text-align: right; margin-right: 4px; width: 48px;">string</div>$e-&gt;getAttribute (&nbsp;<span class="var" style="color: rgb(119, 0, 0);">$name</span>&nbsp;)</td><td style="background-color: rgb(221, 221, 221);"><div class="returns" style="font-size: 10px; color: rgb(136, 136, 136); float: left; text-align: right; margin-right: 4px; width: 48px;">string</div>$e-&gt;<span class="var" style="color: rgb(119, 0, 0);">attribute</span></td></tr><tr bgcolor="#EEEEEE"><td style="background-color: rgb(221, 221, 221);"><div class="returns" style="font-size: 10px; color: rgb(136, 136, 136); float: left; text-align: right; margin-right: 4px; width: 48px;">void</div>$e-&gt;setAttribute (&nbsp;<span class="var" style="color: rgb(119, 0, 0);">$name, $value</span>&nbsp;)</td><td style="background-color: rgb(221, 221, 221);"><div class="returns" style="font-size: 10px; color: rgb(136, 136, 136); float: left; text-align: right; margin-right: 4px; width: 48px;">void</div>$value = $e-&gt;<span class="var" style="color: rgb(119, 0, 0);">attribute</span></td></tr><tr bgcolor="#EEEEEE"><td style="background-color: rgb(221, 221, 221);"><div class="returns" style="font-size: 10px; color: rgb(136, 136, 136); float: left; text-align: right; margin-right: 4px; width: 48px;">bool</div>$e-&gt;hasAttribute (&nbsp;<span class="var" style="color: rgb(119, 0, 0);">$name</span>&nbsp;)</td><td style="background-color: rgb(221, 221, 221);"><div class="returns" style="font-size: 10px; color: rgb(136, 136, 136); float: left; text-align: right; margin-right: 4px; width: 48px;">bool</div>isset($e-&gt;<span class="var" style="color: rgb(119, 0, 0);">attribute</span>)</td></tr><tr bgcolor="#EEEEEE"><td style="background-color: rgb(221, 221, 221);"><div class="returns" style="font-size: 10px; color: rgb(136, 136, 136); float: left; text-align: right; margin-right: 4px; width: 48px;">void</div>$e-&gt;removeAttribute (&nbsp;<span class="var" style="color: rgb(119, 0, 0);">$name</span>&nbsp;)</td><td style="background-color: rgb(221, 221, 221);"><div class="returns" style="font-size: 10px; color: rgb(136, 136, 136); float: left; text-align: right; margin-right: 4px; width: 48px;">void</div>$e-&gt;<span class="var" style="color: rgb(119, 0, 0);">attribute</span>&nbsp;= null</td></tr><tr bgcolor="#EEEEEE"><td style="background-color: rgb(221, 221, 221);"><div class="returns" style="font-size: 10px; color: rgb(136, 136, 136); float: left; text-align: right; margin-right: 4px; width: 48px;">element</div>$e-&gt;getElementById (&nbsp;<span class="var" style="color: rgb(119, 0, 0);">$id</span>&nbsp;)</td><td style="background-color: rgb(221, 221, 221);"><div class="returns" style="font-size: 10px; color: rgb(136, 136, 136); float: left; text-align: right; margin-right: 4px; width: 48px;">mixed</div>$e-&gt;find (<span class="var" style="color: rgb(119, 0, 0);">&nbsp;"#$id", 0&nbsp;</span>)</td></tr><tr bgcolor="#EEEEEE"><td style="background-color: rgb(221, 221, 221);"><div class="returns" style="font-size: 10px; color: rgb(136, 136, 136); float: left; text-align: right; margin-right: 4px; width: 48px;">mixed</div>$e-&gt;getElementsById (&nbsp;<span class="var" style="color: rgb(119, 0, 0);">$id [,$index]&nbsp;</span>)</td><td style="background-color: rgb(221, 221, 221);"><div class="returns" style="font-size: 10px; color: rgb(136, 136, 136); float: left; text-align: right; margin-right: 4px; width: 48px;">mixed</div>$e-&gt;find (<span class="var" style="color: rgb(119, 0, 0);">&nbsp;"#$id" [, int $index]&nbsp;</span>)</td></tr><tr bgcolor="#EEEEEE"><td style="background-color: rgb(221, 221, 221);"><div class="returns" style="font-size: 10px; color: rgb(136, 136, 136); float: left; text-align: right; margin-right: 4px; width: 48px;">element</div>$e-&gt;getElementByTagName (<span class="var" style="color: rgb(119, 0, 0);">$name</span>&nbsp;)</td><td style="background-color: rgb(221, 221, 221);"><div class="returns" style="font-size: 10px; color: rgb(136, 136, 136); float: left; text-align: right; margin-right: 4px; width: 48px;">mixed</div>$e-&gt;find (<span class="var" style="color: rgb(119, 0, 0);">&nbsp;$name, 0&nbsp;</span>)</td></tr><tr bgcolor="#EEEEEE"><td style="background-color: rgb(221, 221, 221);"><div class="returns" style="font-size: 10px; color: rgb(136, 136, 136); float: left; text-align: right; margin-right: 4px; width: 48px;">mixed</div>$e-&gt;getElementsByTagName (&nbsp;<span class="var" style="color: rgb(119, 0, 0);">$name [, $index]</span>&nbsp;)</td><td style="background-color: rgb(221, 221, 221);"><div class="returns" style="font-size: 10px; color: rgb(136, 136, 136); float: left; text-align: right; margin-right: 4px; width: 48px;">mixed</div>$e-&gt;find (<span class="var" style="color: rgb(119, 0, 0);">&nbsp;$name [, int $index]&nbsp;</span>)</td></tr><tr bgcolor="#EEEEEE"><td style="background-color: rgb(221, 221, 221);"><div class="returns" style="font-size: 10px; color: rgb(136, 136, 136); float: left; text-align: right; margin-right: 4px; width: 48px;">element</div>$e-&gt;parentNode ()</td><td style="background-color: rgb(221, 221, 221);"><div class="returns" style="font-size: 10px; color: rgb(136, 136, 136); float: left; text-align: right; margin-right: 4px; width: 48px;">element</div>$e-&gt;parent ()</td></tr><tr bgcolor="#EEEEEE"><td style="background-color: rgb(221, 221, 221);"><div class="returns" style="font-size: 10px; color: rgb(136, 136, 136); float: left; text-align: right; margin-right: 4px; width: 48px;">mixed</div>$e-&gt;childNodes (&nbsp;<span class="var" style="color: rgb(119, 0, 0);">[$index]</span>&nbsp;)</td><td style="background-color: rgb(221, 221, 221);"><div class="returns" style="font-size: 10px; color: rgb(136, 136, 136); float: left; text-align: right; margin-right: 4px; width: 48px;">mixed</div>$e-&gt;children (&nbsp;<span class="var" style="color: rgb(119, 0, 0);">[int $index]</span>&nbsp;)</td></tr><tr bgcolor="#EEEEEE"><td style="background-color: rgb(221, 221, 221);"><div class="returns" style="font-size: 10px; color: rgb(136, 136, 136); float: left; text-align: right; margin-right: 4px; width: 48px;">element</div>$e-&gt;firstChild ()</td><td style="background-color: rgb(221, 221, 221);"><div class="returns" style="font-size: 10px; color: rgb(136, 136, 136); float: left; text-align: right; margin-right: 4px; width: 48px;">element</div>$e-&gt;first_child ()</td></tr><tr bgcolor="#EEEEEE"><td style="background-color: rgb(221, 221, 221);"><div class="returns" style="font-size: 10px; color: rgb(136, 136, 136); float: left; text-align: right; margin-right: 4px; width: 48px;">element</div>$e-&gt;lastChild ()</td><td style="background-color: rgb(221, 221, 221);"><div class="returns" style="font-size: 10px; color: rgb(136, 136, 136); float: left; text-align: right; margin-right: 4px; width: 48px;">element</div>$e-&gt;last_child ()</td></tr><tr bgcolor="#EEEEEE"><td style="background-color: rgb(221, 221, 221);"><div class="returns" style="font-size: 10px; color: rgb(136, 136, 136); float: left; text-align: right; margin-right: 4px; width: 48px;">element</div>$e-&gt;nextSibling ()</td><td style="background-color: rgb(221, 221, 221);"><div class="returns" style="font-size: 10px; color: rgb(136, 136, 136); float: left; text-align: right; margin-right: 4px; width: 48px;">element</div>$e-&gt;next_sibling ()</td></tr><tr bgcolor="#EEEEEE"><td style="background-color: rgb(221, 221, 221);"><div class="returns" style="font-size: 10px; color: rgb(136, 136, 136); float: left; text-align: right; margin-right: 4px; width: 48px;">element</div>$e-&gt;previousSibling ()</td><td style="background-color: rgb(221, 221, 221);"><div class="returns" style="font-size: 10px; color: rgb(136, 136, 136); float: left; text-align: right; margin-right: 4px; width: 48px;">element</div>$e-&gt;prev_sibling ()</td></tr></tbody></table></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><br></div>', '', ''),
('tiankonguse1363272200', 'tiankonguse', '2013-03-14 22:43:20', '【实验版】注册表之文件的类型', '<div style="text-align: center;"><font color="#000000">注册表之文件的类型</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">自己在删除注册表时，顺便记录这么几个英文对应的作用，这些仅是我的猜想，仅作参考。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">OpenWithList</font></div><div><span class="Apple-tab-span" style="white-space:pre"><font color="#000000"><span style="white-space: normal;">	</span></font></span><font color="#000000">点打开方式时，显示的的列表</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">openwithprogids</font></div><div><font color="#000000"><br></font></div><div><span class="Apple-tab-span" style="white-space:pre"><font color="#000000"><span style="white-space: normal;">	</span></font></span><font color="#000000">以什么程序打开的，也就是这一类型的文件是用什么程序来打开的</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">persistenhandler</font></div><div><span class="Apple-tab-span" style="white-space:pre"><font color="#000000"><span style="white-space: normal;">	</span></font></span><font color="#000000">系统提供的搜索功能要用到的&nbsp;</font></div><div><font color="#000000"><br></font></div><div><span class="Apple-tab-span" style="white-space:pre"><font color="#000000"><span style="white-space: normal;">	</span></font></span></div><div><font color="#000000">shellnew</font></div><div><span class="Apple-tab-span" style="white-space:pre"><font color="#000000"><span style="white-space: normal;">	</span></font></span><font color="#000000">新建下面的类型文件</font></div><div><span class="Apple-tab-span" style="white-space:pre"><font color="#000000"><span style="white-space: normal;">	</span></font></span></div><div><span class="Apple-tab-span" style="white-space: pre;"><font color="#000000"><span style="white-space: normal;">	</span></font></span></div>', '', ''),
('tiankonguse1363272328', 'tiankonguse', '2013-03-14 22:45:28', 'windows firewall/internet connection sharing ', '<div style="text-align: center;"><font color="#000000">windows firewall/internet connection sharing (ics)</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">Windows Firewall/Internet Connection Sharing 服务为家庭或小型办公网络中通过拨号连接或宽带连接的所有计算机提供网络地址转换 (NAT)、地址以及名称解析和/或防止入侵服务。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">启用此服务后、计算机即成为网络上的“Internet 网关”。它允许其他客户端计算机共享到 Internet 的一个连接、共享文件和使用相同打印机。此服务具有一个位置识别组策略。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">此服务以前在 Windows 2000 和 Windows XP Service Pack 1 中称为“Internet Connection Sharing”。Windows Server 2003 原始版本中不包含此服务。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">Windows Firewall/Internet Connection Sharing 服务是在 Windows XP 计算机上安装和自动启动的默认服务。默认情况下，该服务也在 Windows Server 2003 计算机上安装，但被配置为“已禁用”。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">如果 Windows Firewall/Internet Connection Sharing 服务停止，网络服务如 Internet 共享、名称解析、地址解析和/或防止入侵等将不可用。网络中的客户端可能无法访问 Internet，它们的 IP 地址将过期，这将导致一些客户端使用自动专用 IP 寻址 (APIPA) 来进行对等网络连接。&nbsp;</font></div><div><br></div><div><br></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><br></div>', '', ''),
('tiankonguse1363272771', 'tiankonguse', '2013-03-14 22:52:51', '黄金法则 之 Focus on the user and all else will fo', '<div style="text-align: center;"><font color="#000000" size="6">Ten things we know to be true</font></div><div><font color="#000000"><br></font></div><div style="text-align: center;"><font color="#000000" size="6">&nbsp;</font><font color="#000000" size="5">Focus on the user and all else will follow</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">原文：</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">Since the beginning, we’ve focused on providing the best user experience possible.&nbsp;</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">Whether we’re designing a new Internet browser or a new tweak to the look of the homepage, we take great care to ensure that they will ultimately serve you, rather than our own internal goal or bottom line.&nbsp;</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">Our homepage interface is clear and simple, and pages load instantly.&nbsp;</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">Placement in search results is never sold to anyone, and advertising is not only clearly marked as such, it offers relevant content and is not distracting.&nbsp;</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">And when we build new tools and applications, we believe they should work so well you don’t have to consider how they might have been designed differently.</font></div>', '', ''),
('tiankonguse1363272971', 'tiankonguse', '2013-03-14 22:56:11', '大数据能做什么', '<div style="text-align: center;"><font color="#000000">大数据能做什么</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">原文转自<a href="http://slaytanic.blog.51cto.com/2057708/1142958">这里</a></font></div><div><font color="#000000"><br></font></div><div><font color="#000000"><br></font></div><div><font color="#000000">Hadoop和大数据是这两年最火的词儿们之一，越来越多的公司对这个东西感兴趣，但是我接触到的大多数公司里的人，无论是技术人员还是老板。都不知道怎么能把这些东西用于改善自己公司的业务。在解答的过程中，提炼出几个要点，记录一下。</font></div><div><font color="#000000">&nbsp;</font></div><div><font color="#000000"><b>大数据和云是不是一回事？</b></font></div><div><font color="#000000"><br></font></div><div><font color="#000000">这是最容易混淆的概念之一，我个人认为这是两回事，云服务，无论是云主机还是云存储还是云的其他应用，都是向用户提供一个接口，但这个接口的后端是虚拟机技术，或者分布式存储技术，或者其他分布式计算技术等等。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">简而言之，云的概念就是我向你提供服务，而你不需要关心这种服务的架构或者技术实现有多么复杂。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">打个比方，就好象是，云之前的时代我们要用电，就需要自己造一个电厂发电，造机组，造变电站，然后再去用它。而云服务就好象是别人搭好了一个电厂，电线直接进你家，你要用，只需要插上插头，不需要关心电是怎么被制造出来的。电力的生产和电力设备的维护都由国家电网承担。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">联系到网络方面，就是，我们以前要自己买服务器，自己装系统，自己上架，自己做负载均衡，自己维护软硬件环境。有了云之后，这些都通过云服务商的虚拟机技术完成了。数据安全和网络安全都由云服务商提供，你也不需要专门请人维护一堆设备。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">而说到大数据，这个可以是基于云的，也可以是不基于云的。大数据的处理技术与提供云服务的技术是不尽相同的，但是又有所交集。可以说，云服务是基础设施，是市政工程，而大数据是城市里的高楼大厦。大数据可以基于云，也可以不基于云。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">从技术角度上说，国内的大多数云服务商，主要提供的是虚拟机服务，这是一种分的概念，把一台物理服务器拆成多个虚拟的小服务器，尽可能多的使用其物理资源，避免浪费。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">而大数据是合的思想，是把很多台服务器合并成一个虚拟的巨型服务器，通过分配计算资源使数据可以快速的为生产力服务。用一句中国的老话形容大数据和Hadoop就是：三个臭皮匠顶个诸葛亮。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">用合并起来的计算资源超越小型机或者中型机的计算能力。这里面当然也有云的概念存在着，就是说，你不需要关心数据的存储和计算到底是怎么完成的，你只需要用就可以了。</font></div><div><font color="#000000">&nbsp;</font></div><div><font color="#000000">大数据技术是不是一定需要数据量大才可以，数据量不大就不需要用？</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">通常是这样认为的，但是并不绝对，计算维度大，计算过程复杂也都可以认为是大数据。换句话说，就是，如果你所需要的数据，在你所需要的时间内无法正常计算出来，你可能就需要用到大数据的技术了。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">一方面，你的数据需要的存储量超过数据库或者数据仓库的能力范围，你可能需要大数据技术；另一方面，你的计算量超过传统的数据处理手段的时效性能力范围之外，你也可能需要大数据技术。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">而典型的计算能力的挑战就是来自于数据挖掘和多维度分析。可能数据量不大，但是算法和过程很复杂，也可能会需要大数据的技术。比如对用户做推荐，基于用户群的分类做精准的广告投放。或者在传统行业计算气象预报，计算地质数据做石油探测，矿产探测。又或者用在金融行业，通过对历史数据建立数学模型，对证券和期货贷款等做风险预估。之所以阿里巴巴对于中国的经济和进出口的预测比商务部和统计局更精准，除了他们有一群数学和统计专家外，大数据是完全不可或缺的技术手段。</font></div><div><font color="#000000">&nbsp;</font></div><div><font color="#000000"><b>大数据技术是不是就是那个什么憨杜普？</b></font></div><div><font color="#000000"><br></font></div><div><font color="#000000">显然不是，大数据领域存在很多厂商和应用，有开源的，有收费的。比如一些非Hadoop大数据处理的公司和软件，EMC的Greenplum，Splunk公司的splunk等等。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">这些都不是基于Hadoop的，但是也有共同的缺陷，就是很贵。所以，大多数公司采用开源软件来完成大数据的业务处理。而开源领域做得最好的，应该就是hadoop了。所以现在hadoop基本成了大数据处理的代名词了。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">基于Hadoop衍生了很多家商业公司，因为Apache的许可协议并不拒绝商业。像国内比较知名的Cloudera，MapR，他们的商业产品都是基于Hadoop及其周边的生态软件。</font></div><div><font color="#000000">&nbsp;</font></div><div><font color="#000000"><b>大数据应该怎么推进公司业务的发展？</b></font></div><div><font color="#000000"><br></font></div><div><font color="#000000">这是个关乎想象力的事情，有了大容量和大计算，至于怎么用，这只能自己想。原来数据怎么做现在还怎么做，不过除了啤酒与尿布，口香糖与避孕套之外，还有一个比较生动的案例大约是这样的：美国有一个公司，在各产粮区每隔一英里插一个传感器，收集空气湿度和土壤含氮量等数据。收集上来以后通过大数据的处理手段和算法，预测出该地区的收成可能会是什么情况，然后把预测报告卖给美国的农业保险公司。</font></div><div><font color="#000000">&nbsp;</font></div><div><font color="#000000">Hadoop有什么优缺点？</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">Hadoop的优点是数据的容量和计算能力以及数据的备份安全性有了很大程度的提升，1.0最大可以支持到大约4000台服务器的并行存储和运算，而2.0大约可以支持6000台服务器。不过2.0现在还不是很完善，所以生产环境还是建议用1.0。我认为4000台集群的容量和计算能力足以匹敌IBM的大型机，从去年12月15号的中国银行大型机宕机事件来看。大型机就算安全性再有保障，也毕竟是单点。真出了故障，谁也不敢拍板切换到备份大型机上。Hadoop 1.0已经有了很多方案去解决单点问题，2.0自己就支持单点故障切换。或许未来继续发展，将全面超越大型机。事实上，IBM已经开始出自己的Hadoop发行版了。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">至于缺点，就是Hadoop1.0还是存在单点问题，但是可以通过其他技术手段弥补做到热切换，只是要求维护人员的技术水平较高。另外一个缺点是计算的时间会比较长，还无法做到实时查询和快速决策响应。但是有很多其他的方案在弥补Hadoop的这个问题，像Apache出的跟Google Dremel竞争的Drill，Cloudera推出的Impala，和其他一些产品。而实时计算则有Twitter开源的Storm集群，设计理念跟Hadoop是一样的，但是可以对实时数据流进行计算，并即刻生成计算结果。做到随查随出。</font></div><div><font color="#000000">&nbsp;</font></div><div><font color="#000000">在各个开源社区的支持下，在全世界程序员的共同努力下，大数据的处理能力也在高速的发展，程序员们正在用自己的智慧改造这个世界。</font></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><br></div>', '', ''),
('tiankonguse1363326492', 'tiankonguse', '2013-03-15 13:48:12', 'android.os.NetworkOnMainThreadException异常', '<div style="text-align: center;"><span style="color: rgb(0, 0, 0); line-height: 1.333;">android.os.NetworkOnMainThreadException</span></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><br></div><div style="color: rgb(0, 0, 0); font-size: 22px;">在做安卓4.0以上的系统上开发时，以前可以正常运行的程序去遇到了这个错误，后来在<a href="http://stackoverflow.com/questions/6343166/android-os-networkonmainthreadexception">stackoverflow</a>发现，这是由于在主进程进行了网络操作导致的。</div><div style="color: rgb(0, 0, 0); font-size: 22px;"><br></div><div style="color: rgb(0, 0, 0); font-size: 22px;">其中一个解决方法是在需要进行网络操作的oncreate函数中加入以下代码</div><div style="color: rgb(0, 0, 0); font-size: 22px;"><br></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><pre><code class="java">		StrictMode.setThreadPolicy(new StrictMode.ThreadPolicy.Builder()\r\n				.detectDiskReads().detectDiskWrites().detectNetwork()\r\n				.penaltyLog().build());\r\n		StrictMode.setVmPolicy(new StrictMode.VmPolicy.Builder()\r\n				.detectLeakedSqlLiteObjects() // 探测SQLite数据库操作\r\n				.penaltyLog() // 打印logcat\r\n				.penaltyDeath().build());</code></pre></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><br></div><div style="color: rgb(0, 0, 0); font-size: 22px;">我把他封装起来了，以后使用时只需调用</div><div style="color: rgb(0, 0, 0); font-size: 22px;"><br></div><div style="font-size: 22px; color: rgb(0, 0, 0);"><pre><code class="java">MyStrictMode.strictMode();</code></pre></div><div style="font-size: 22px; color: rgb(0, 0, 0);"><br></div><div style="font-size: 22px; color: rgb(0, 0, 0);">封装代码：</div><div style="font-size: 22px; color: rgb(0, 0, 0);"><br></div><div style="font-size: 22px; color: rgb(0, 0, 0);"><pre><code class="java">@SuppressLint("NewApi")\r\npublic class MyStrictMode {\r\n	public static void strictMode() {\r\n		StrictMode.setThreadPolicy(new StrictMode.ThreadPolicy.Builder()\r\n				.detectDiskReads().detectDiskWrites().detectNetwork()\r\n				.penaltyLog().build());\r\n		StrictMode.setVmPolicy(new StrictMode.VmPolicy.Builder()\r\n				.detectLeakedSqlLiteObjects() // 探测SQLite数据库操作\r\n				.penaltyLog() // 打印logcat\r\n				.penaltyDeath().build());\r\n	}\r\n}</code></pre></div>', '', ''),
('tiankonguse1363411707', 'tiankonguse', '2013-03-16 13:28:27', 'jquery 绑定事件函数 bind', '<div style="text-align: center;"><font color="#000000">jquery 绑定事件函数 bind</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">1.为不同的事件绑定一个函数</font></div><div><font color="#000000"><br></font></div><div><pre><code class="javascript">bind(eventNameList,function)</code></pre></div><div><font color="#000000">参数:(事件名列表,事件响应的函数)</font></div><div><font color="#000000">作用：为每个匹配元素的特定事件绑定事件处理函数。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">例如：</font></div><div><font color="#000000">绑定一个事件</font></div><div><pre><code class="javascript">$("#button").bind("click", function(){\r\n  alert( "click me!" );\r\n});</code></pre></div><div><font color="#000000"><br></font></div><div><font color="#000000">绑定多个事件</font></div><div><pre><code class="javascript">$(''#button'').bind(''mouseenter mouseleave'', function() {\r\n  alert( "移入或移出按钮" );\r\n});</code></pre></div><div><font color="#000000">2.为不同的事件分别绑定事件</font></div><div><font color="#000000"><br></font></div><div><pre><code class="javascript">bind({eventName1,function1,eventName2,function2})</code></pre></div><div><font color="#000000">参数:(一个对象，为事件实现的函数)</font></div><div><font color="#000000">作用：为每个匹元素的特定事件绑定特定的事件处理函数。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">例如：</font></div><div><pre><code class="javascript">$("#button").bind({\r\n  click:function(){alert( "click me!" );},\r\n  mouseenter:function(){alert( "mouseenter" );},  \r\n  mouseout:function(){alert( "mouseout" );}  \r\n});</code></pre></div><div><font color="#000000"><br></font></div><div><font color="#000000">3.为响应的事件传进数据</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">你可以在事件处理之前传递一些附加的数据。</font></div><div><font color="#000000">例如：</font></div><div><pre><code class="javascript">$("#button").bind("click", {foo: "bar"}, function(event) {\r\n  alert("传入的数据是："+event.data.foo);\r\n});</code></pre></div><div><font color="#000000"><br></font></div><div><font color="#000000">4.取消事件的默认行为</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">通过返回false来取消默认的行为并阻止事件起泡。</font></div><div><pre><code class="javascript">$("form").bind("submit", function() {\r\n    //do something\r\n    return false; \r\n})</code></pre></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><br></div>', '', ''),
('tiankonguse1363417875', 'tiankonguse', '2013-03-16 15:11:15', '【自己实现jquery】之bind(1)', '<br><div>由于某些原因，也可能是由于我对jquery的不了解，我这个问题目前不能使用jquery解决，于是，我打算自己来实现bind这个绑定事件的功能。</div><div><br></div><div>后来发现，我并没有实现我想要的功能，而我最初的一个函数就能解决我那个问题，于是，我又去使用我自己编的古老的函数。</div><div><br></div><div>我的jquery的bind的函数如下：</div><div><br></div><div><pre><code class="javascript">    \r\n    TK.bind = function(){\r\n        "use strict"\r\n        if(arguments.length == 1){\r\n            var evenList = arguments[0];\r\n            var eventName;\r\n            for (eventName in evenList){\r\n                addEventListener(eventName,evenList[eventName]);\r\n            }\r\n        }else if(arguments.length == 2){\r\n            var eventNameList =  arguments[0].split(" ");\r\n            var eventName;\r\n            for (eventName in eventNameList){\r\n                addEventListener(eventName,arguments[1]);\r\n            }\r\n        }else if(arguments.length == 3){\r\n            var eventNameList =  arguments[0].split(" ");\r\n            var eventName;\r\n            for (eventName in eventNameList){\r\n                var _eventName = eventName;\r\n                var _eventfunction = evenList[eventName];\r\n                addEventListener(eventName,function(e){\r\n                    var _e = e;\r\n                    _e.data = arguments[1];\r\n                    evenList[eventName].call(this,_e);\r\n                });\r\n            }\r\n        }\r\n\r\n        function addEventListener(eventName,eventFun){\r\n            if(document.addEventListener){\r\n                window.addEventListener(eventName, eventFun, !1);\r\n            }else if(document.attachEvent){\r\n                window.attachEvent(eventName, eventFun);\r\n            }\r\n        }\r\n    };</code></pre></div><div><br></div><div><br></div><div><br></div>', '', ''),
('tiankonguse1363418983', 'tiankonguse', '2013-03-16 15:29:43', '【自己实现jquery】之ready在框架iframe中失效', '<div><br></div>使用jquery的ready很方便，但是当用ready来执行框架iframe内的元素时，有时就会出现一些问题了。<div><br></div><div>问题的原因也很容易想到，有时框架iframe内的元素尚未加载完，jquery的ready函数已经执行了。</div><div><br></div><div>这样我们也感到很无奈，只好自己写个监听器来监听页面是否完全加载完。</div><div><div><br></div><div>下面的监听器执行函数时，框架iframe内的元素全部加载完成。</div><div><br></div><div><div>代码如下：</div></div></div><div><pre><code class="javascript">    TK.addReadyListener = function(listener){\r\n        if(document.addEventListener){\r\n            window.addEventListener("load", listener, !1);\r\n        }else if(document.attachEvent){\r\n            window.attachEvent("onload", listener);\r\n        }\r\n    };</code></pre></div><div><div><br></div>使用方法：</div><div><br></div><div><pre><code class="javascript">TK.addReadyListener(setBlog);</code></pre></div>', '', '');
INSERT INTO `tk_blog` (`tk_blog_key`, `tk_blog_user`, `tk_blog_datetime`, `tk_blog_title`, `tk_blog_content`, `tk_blog_password`, `tk_blog_category`) VALUES
('tiankonguse1363437950', 'tiankonguse', '2013-03-16 20:45:50', '为什么 ++[[]][+[]]+[+[]] = 10 ？', '<div><font color="#000000"><br></font></div><div><font color="#000000">　首先，问这个问题的人是个天才，他怎么会遇到这样的一个问题。其次，回答这个问题的人更是一个天才，我难以想象他会回答这个问题，更难以想象的是，他的回答是如此的详细和丰富和完整，真正称得上诲人不倦。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">　　既然遇到了这个问题，我们不妨也跟着提高一下。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">　　这是一个Javascript语言题目，一个完全有效的等式，不信自己可以试一下，下面看看高人的题解：</font></div><div><pre><code class="javascript">\r\n++[[]][+[]]+[+[]]\r\n</code></pre></div><div><font color="#000000">　　如果把这段表达式拆分开来，它相等于：</font></div><div><pre><code class="javascript">\r\n++[[]][+[]]\r\n+\r\n[+[]]</code></pre></div><div><font color="#000000"><br></font></div><div><font color="#000000">　　在JavaScript里，+[] === 0 是完全正确的。 + 会把一些字符转化成数字，在这里，这个式子会变成 +”" 或 0。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">　　因此，我们可以简化一下(++ 比 + 有更高的优先级)：</font></div><div><font color="#000000"><br></font></div><div><pre><code class="javascript">++[[]][0]\r\n+\r\n[0]\r\n</code></pre></div><div><font color="#000000">&nbsp;</font></div><div><font color="#000000">因为 [[]][0] 的意思是：获取 [[]] 的第一个元素，这就得出了下面的结果：</font><span style="color: rgb(0, 0, 0); line-height: 1.333;">[[]][0] 返回内部数组 ([])。</span></div><div><font color="#000000"><br></font></div><div><font color="#000000">根据语言规范，我们说 [[]][0] === [] 是不正确的，但让我们把这个内部数组称作 A，以避免错误的写法。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">++[[]][0] == A + 1， 因为 ++ 的意思是“加一”。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">++[[]][0] === +(A + 1)</font><span style="color: rgb(0, 0, 0); line-height: 1.333;">；换句话说，你得到的永远是个数值( +1 并不一定得到的是个数值，但 ++ 一定是)。</span></div><div><span style="color: rgb(0, 0, 0); line-height: 1.333;"><br></span></div><div><font color="#000000">同样，我们可以把这一堆代码简化的更清晰。让我们把 A 换回成 [] :</font></div><div><pre><code class="javascript">\r\n+([] + 1)\r\n+\r\n[0]</code></pre></div><div><font color="#000000"><br></font></div><div><font color="#000000">　　在JavaScript里，这也是正确的：[] + 1 === "1"，因为 [] == "" (这相当于一个空的数组的内部元素连接)，于是：</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">+([] + 1) === +("" + 1)，并且</font></div><div><font color="#000000">+("" + 1) === +(“1″)，并且</font></div><div><font color="#000000">+("1″) === 1</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">让我们再次简化一下：</font></div><div><font color="#000000"><br></font></div><div><pre><code class="javascript">1\r\n+\r\n[0]</code></pre></div><div><font color="#000000"><br></font></div><div><font color="#000000">　　同样，在Javascript里，这是正确的：[0] == "0″，因为这是相当于一个有一个元素的数组的内部元素的连接。各元素会使用，分隔。当只有一个元素时，你可以推论出这个过程的结果就是它自身的第一个元素。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">　　所以，最终我们得到(数字 + 字符串 = 字符串)：</font></div><div><font color="#000000"><br></font></div><div><pre><code class="javascript">1 + "0" === "10"</code></pre></div>', '', ''),
('tiankonguse1363443005', 'tiankonguse', '2013-03-16 22:10:05', '码畜、码奴、码农', '<div style="text-align: center;"><font color="#000000">码畜、码奴、码农</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">IT领袖：年入过亿</font></div><div><font color="#000000"><span class="Apple-tab-span" style="white-space:pre">	</span><span class="Apple-tab-span" style="white-space:pre"><html><body spellcheck="false" style="height: 100%;"><div><br></div></body></html></span>例如任正非、马化腾、李彦宏、丁磊、马云等，包括期权股票以及投资理财等收入。</font></div><div><font color="#000000">&nbsp;</font></div><div><font color="#000000">IT大哥：年入千万</font></div><div><font color="#000000"><span class="Apple-tab-span" style="white-space:pre">	</span><span class="Apple-tab-span" style="white-space:pre"><html><body spellcheck="false" style="height: 100%;"><div><br></div></body></html></span>级别次于以上几位大佬的公司老板，不缺钱，普遍对上一条里的人物羡慕嫉妒恨。</font></div><div><font color="#000000">&nbsp;</font></div><div><font color="#000000">IT精英：年入百万</font></div><div><font color="#000000"><span class="Apple-tab-span" style="white-space:pre">	</span><span class="Apple-tab-span" style="white-space:pre"><html><body spellcheck="false" style="height: 100%;"><div><br></div></body></html></span>各IT公司副总裁级别人物，包括COO、CTO等，大多为职业经理人，赚够前就跑。</font></div><div><font color="#000000">&nbsp;</font></div><div><font color="#000000">IT人才：年入50万</font></div><div><font color="#000000"><span class="Apple-tab-span" style="white-space:pre">	</span><span class="Apple-tab-span" style="white-space:pre"><html><body spellcheck="false" style="height: 100%;"><div><br></div></body></html></span>各IT公司总监级别人物，有房有车，生活压力相对较小</font></div><div><font color="#000000">&nbsp;</font></div><div><font color="#000000">IT工程师：年入20万</font></div><div><font color="#000000"><span class="Apple-tab-span" style="white-space:pre">	</span><span class="Apple-tab-span" style="white-space:pre"><html><body spellcheck="false" style="height: 100%;"><div><br></div></body></html></span>高级经理级别，有房贷，生活压力大</font></div><div><br></div><div><font color="#000000">IT民工：年入10万</font></div><div><font color="#000000"><span class="Apple-tab-span" style="white-space:pre">	</span><span class="Apple-tab-span" style="white-space:pre"><html><body spellcheck="false" style="height: 100%;"><div><br></div></body></html></span>经理级别，基本无房，学会装波一，生活压力大</font></div><div><font color="#000000">&nbsp;</font></div><div><font color="#000000">码农：年入6万到10万</font></div><div><font color="#000000"><span class="Apple-tab-span" style="white-space:pre">	</span><span class="Apple-tab-span" style="white-space:pre"><html><body spellcheck="false" style="height: 100%;"><div><br></div></body></html></span>工作三四年，租房，继续混日子</font></div><div><font color="#000000">&nbsp;</font></div><div><font color="#000000">码奴：年入3万到6万</font></div><div><font color="#000000"><span class="Apple-tab-span" style="white-space:pre">	</span><span class="Apple-tab-span" style="white-space:pre"><html><body spellcheck="false" style="height: 100%;"><div><br></div></body></html></span>工作一两年，租房，混日子</font></div><div><font color="#000000">&nbsp;</font></div><div><font color="#000000">码畜：年入低于3万</font></div><div><font color="#000000"><span class="Apple-tab-span" style="white-space:pre">	</span><span class="Apple-tab-span" style="white-space:pre"><html><body spellcheck="false" style="height: 100%;"><div><br></div></body></html></span>刚毕业的，租房，傻乐</font></div>', '', ''),
('tiankonguse1363505023', 'tiankonguse', '2013-03-17 15:23:43', 'NVIDIA 系统工具 复制错误 安装程序无法复制文件 ', '<div><font color="#000000">NVIDIA 系统工具&nbsp;</font><span style="color: rgb(0, 0, 0);">复制错误 安装程序无法复制文件&nbsp;</span></div><div><span style="color: rgb(0, 0, 0);"><br></span></div><div><font color="#000000">请确认以下指定的位置是正确的，或更改它并且在指定的驱动器中插入 。。。。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">文件复制来源。。。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000"><br></font></div><div><font color="#000000"><br></font></div><div><font color="#000000">这个问题的原因我不知道，不过解决方法很简单。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">既然它提示目前的位置无法复制，可能这个位置有问题了。</font></div><div><font color="#000000">那这个位置有没有需要的文件呢？</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">是有的。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">那它为什么还说不能复制呢？</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">谁知道呢？反正我是不知道。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">不过，我们就指定一个位置让它来复制吧。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">解决方案：</font></div><div><font color="#000000">复制文件复制来源里的地址，找到这个地址所在的文件夹。</font></div><div><font color="#000000">在里面可以找到需要的文件，然后复制到其他地方。</font></div><div><font color="#000000">然后点击浏览，指定到你复制到的地方。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">OK了。</font></div><div><font color="#000000"><br></font></div><div><font color="#000000"><br></font></div><div><font color="#000000"><br></font></div><div><font color="#000000"><br></font></div><div><font color="#000000"><br></font></div><div style="color: rgb(0, 0, 0); font-size: 22px;"><br></div>', '', ''),
('tiankonguse2', 'tiankonguse', '2013-01-26 16:53:36', 'hello', '<div style="text-align: center;">my editer is ok!</div>', NULL, NULL),
('tiankonguse3', 'tiankonguse', '2013-01-26 19:29:41', '汉字测试', '不知道能不能使用汉字……', NULL, NULL),
('tiankonguse4', 'tiankonguse', '2013-01-27 18:35:44', 'CSS中的position 属性', '<font color="#000000">CSS的 position 属性允许您控制文档中某个元素的定位。 &nbsp;</font><div style="color: rgb(0, 0, 0);"><br></div><div style="color: rgb(0, 0, 0);">position:relative 属性可向对于一个元素的当前位置来定位此元素。</div><div><font color="#000000">position:absolute 属性根据距离窗口的 margin 来定位一个元素。</font></div><div style="color: rgb(0, 0, 0);"><br></div><div><div><font color="#000000">定义了position 属性后，我们就可以定义下列属性了。</font></div></div><blockquote style="margin: 0 0 0 40px; border: none; padding: 0px;"><div><ul><li><span style="color: rgb(0, 0, 0);">left - 元素的左侧位置</span></li><li><span style="color: rgb(0, 0, 0);">top - 元素的顶端位置</span></li><li><span style="color: rgb(0, 0, 0);">visibility - 指定元素应当可见还是隐藏</span></li><li><span style="color: rgb(0, 0, 0);">z-index - 元素的堆叠次序</span></li><li><span style="color: rgb(0, 0, 0);">clip - 元素裁剪</span></li><li><span style="color: rgb(0, 0, 0);">overflow - 如何处理溢出的内容</span></li></ul></div></blockquote><div style="color: rgb(0, 0, 0);"><br></div><div><div><font color="#000000">1. visibility 属性可决定一个元素是否可见。</font></div></div><blockquote style="margin: 0 0 0 40px; border: none; padding: 0px;"><div><div><font color="#000000">visible 属性可使元素可见。</font></div></div><div><div><font color="#000000">hidden 属性可使元素不可见。</font></div></div></blockquote><div><div><br></div><div><font color="#000000">2. z-index 属性用于把一个元素放置于另一个元素之后。z-index 的默认值是 0。值越高，其优先权也越高。z-index: -1 更低的优先权。</font></div><div><br></div><div><br></div></div><div><span style="color: rgb(0, 0, 0);"><br></span></div><div><span style="color: rgb(0, 0, 0);"><br></span></div><div><span style="color: rgb(0, 0, 0);"><br></span></div>', NULL, NULL),
('tiankonguse5', 'tiankonguse', '2013-01-27 20:27:27', 'HTML 5中的video标签测试', '<div><font color="#000000"><span style="font-size: 22px; line-height: 29px;">&lt;video&gt; 标签是 HTML 5 的新标签。</span></font></div><div><h2 style="color: rgb(0, 0, 0); line-height: normal; background-color: rgb(249, 249, 249);"><font size="6">属性</font></h2></div><div><div><ul><ul><ul><li><span style="font-size: 22px; line-height: 29px; color: rgb(0, 0, 0);"><b>autoplay：</b> 属性规定一旦视频就绪马上开始播放。</span></li><li><span style="font-size: 22px; line-height: 29px; color: rgb(0, 0, 0);"><b>controls：</b> 属性规定浏览器应该为视频提供播放控件。</span></li><li><span style="font-size: 22px; line-height: 29px; color: rgb(0, 0, 0);">如果设置了该属性，则规定不存在作者设置的脚本控件。</span></li><li><span class="Apple-tab-span" style="font-size: 22px; line-height: 29px; color: rgb(0, 0, 0); white-space: pre;">	</span><span style="font-size: 22px; line-height: 29px; color: rgb(0, 0, 0);">浏览器控件应该包括：</span></li><li><span class="Apple-tab-span" style="font-size: 22px; line-height: 29px; color: rgb(0, 0, 0); white-space: pre;">	</span><span style="font-size: 22px; line-height: 29px; color: rgb(0, 0, 0);">播放</span></li><li><span class="Apple-tab-span" style="font-size: 22px; line-height: 29px; color: rgb(0, 0, 0); white-space: pre;">	</span><span style="font-size: 22px; line-height: 29px; color: rgb(0, 0, 0);">暂停</span></li><li><span class="Apple-tab-span" style="font-size: 22px; line-height: 29px; color: rgb(0, 0, 0); white-space: pre;">	</span><span style="font-size: 22px; line-height: 29px; color: rgb(0, 0, 0);">定位</span></li><li><span class="Apple-tab-span" style="font-size: 22px; line-height: 29px; color: rgb(0, 0, 0); white-space: pre;">	</span><span style="font-size: 22px; line-height: 29px; color: rgb(0, 0, 0);">音量</span></li><li><span class="Apple-tab-span" style="font-size: 22px; line-height: 29px; color: rgb(0, 0, 0); white-space: pre;">	</span><span style="font-size: 22px; line-height: 29px; color: rgb(0, 0, 0);">全屏切换</span></li><li><span class="Apple-tab-span" style="font-size: 22px; line-height: 29px; color: rgb(0, 0, 0); white-space: pre;">	</span><span style="font-size: 22px; line-height: 29px; color: rgb(0, 0, 0);">字幕（如果可用）</span></li><li><span class="Apple-tab-span" style="font-size: 22px; line-height: 29px; color: rgb(0, 0, 0); white-space: pre;">	</span><span style="font-size: 22px; line-height: 29px; color: rgb(0, 0, 0);">音轨（如果可用）</span></li><li><span style="font-size: 22px; line-height: 29px; color: rgb(0, 0, 0);"><b>height：</b> 属性指定视频播放器的高度</span></li><li><span style="font-size: 22px; line-height: 29px; color: rgb(0, 0, 0);"><b>width ：</b>属性指定视频播放器的宽度。</span></li><li><span style="font-size: 22px; line-height: 29px; color: rgb(0, 0, 0);"><b>loop ：</b>属性规定当视频结束后将重新开始播放。</span></li><li><span style="font-size: 22px; line-height: 29px; color: rgb(0, 0, 0);"><b>preload</b>&nbsp;：属性规定是否在页面加载后载入视频。</span></li><li><span style="font-size: 22px; line-height: 29px; color: rgb(0, 0, 0);"><b>src：</b>&nbsp;属性规定要播放的视频的 URL,也可以使用 source 标签 来设置视频。</span></li></ul></ul></ul></div></div><div style="color: rgb(0, 0, 0); font-size: 22px;">\r\n<video width="320" height="640" controls="controls" src="video /20121214_banji_6.mp4">\r\n<source src="video /20121214_banji_6.mp4" type="video/mp4">Your browser does not support the video tag.</video></div>', NULL, NULL);

-- --------------------------------------------------------

--
-- 表的结构 `tk_category`
--

CREATE TABLE IF NOT EXISTS `tk_category` (
  `tk_category_key` varchar(45) NOT NULL,
  `tk_category_name` varchar(45) NOT NULL,
  PRIMARY KEY (`tk_category_key`)
) ENGINE=InnoDB DEFAULT CHARSET=ujis;

-- --------------------------------------------------------

--
-- 表的结构 `tk_comment`
--

CREATE TABLE IF NOT EXISTS `tk_comment` (
  `tk_comment_blog_key` varchar(45) NOT NULL,
  `tk_comment_user_log` varchar(45) NOT NULL,
  `tk_comment_parent` varchar(45) NOT NULL,
  `tk_comment_content` text NOT NULL,
  `tk_comment_datetime` datetime NOT NULL,
  `tk_comment_key` varchar(45) NOT NULL,
  `tk_comment_user_name` varchar(45) NOT NULL,
  PRIMARY KEY (`tk_comment_key`),
  KEY `tk_comment_people_log_idx` (`tk_comment_user_log`),
  KEY `tk_comment_blog_idx` (`tk_comment_blog_key`),
  KEY `tk_comment_blog_key_idx` (`tk_comment_blog_key`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- --------------------------------------------------------

--
-- 表的结构 `tk_file`
--

CREATE TABLE IF NOT EXISTS `tk_file` (
  `tk_file_date` varchar(45) NOT NULL,
  `tk_file_number` int(11) NOT NULL,
  PRIMARY KEY (`tk_file_date`)
) ENGINE=InnoDB DEFAULT CHARSET=ujis;

--
-- 转存表中的数据 `tk_file`
--

INSERT INTO `tk_file` (`tk_file_date`, `tk_file_number`) VALUES
('2013-01', 10),
('2013-02', 42),
('2013-03', 95);

-- --------------------------------------------------------

--
-- 表的结构 `tk_file_blog`
--

CREATE TABLE IF NOT EXISTS `tk_file_blog` (
  `tk_file_blog_file` varchar(45) NOT NULL,
  `tk_file_blog_blog` varchar(45) NOT NULL,
  PRIMARY KEY (`tk_file_blog_file`,`tk_file_blog_blog`),
  KEY `tk_file_blog_file_idx` (`tk_file_blog_file`)
) ENGINE=InnoDB DEFAULT CHARSET=ujis;

--
-- 转存表中的数据 `tk_file_blog`
--

INSERT INTO `tk_file_blog` (`tk_file_blog_file`, `tk_file_blog_blog`) VALUES
('2013-01', 'tiankong1359350462'),
('2013-01', 'tiankonguse1'),
('2013-01', 'tiankonguse1359554429'),
('2013-01', 'tiankonguse1359556594'),
('2013-01', 'tiankonguse1359559203'),
('2013-01', 'tiankonguse1359643510'),
('2013-01', 'tiankonguse2'),
('2013-01', 'tiankonguse3'),
('2013-01', 'tiankonguse4'),
('2013-01', 'tiankonguse5'),
('2013-02', 'tiankong1359908257'),
('2013-02', 'tiankonguse1359656251'),
('2013-02', 'tiankonguse1359786466'),
('2013-02', 'tiankonguse1359863639'),
('2013-02', 'tiankonguse1359863772'),
('2013-02', 'tiankonguse1359864035'),
('2013-02', 'tiankonguse1359864183'),
('2013-02', 'tiankonguse1359869093'),
('2013-02', 'tiankonguse1359893811'),
('2013-02', 'tiankonguse1359895734'),
('2013-02', 'tiankonguse1359896121'),
('2013-02', 'tiankonguse1359950664'),
('2013-02', 'tiankonguse1359968605'),
('2013-02', 'tiankonguse1360409334'),
('2013-02', 'tiankonguse1360410188'),
('2013-02', 'tiankonguse1360639087'),
('2013-02', 'tiankonguse1360639188'),
('2013-02', 'tiankonguse1360656430'),
('2013-02', 'tiankonguse1360656896'),
('2013-02', 'tiankonguse1360660465'),
('2013-02', 'tiankonguse1360673726'),
('2013-02', 'tiankonguse1360676681'),
('2013-02', 'tiankonguse1360677146'),
('2013-02', 'tiankonguse1360678070'),
('2013-02', 'tiankonguse1360728841'),
('2013-02', 'tiankonguse1360730187'),
('2013-02', 'tiankonguse1360731174'),
('2013-02', 'tiankonguse1360731999'),
('2013-02', 'tiankonguse1360732385'),
('2013-02', 'tiankonguse1360736627'),
('2013-02', 'tiankonguse1360736710'),
('2013-02', 'tiankonguse1360736924'),
('2013-02', 'tiankonguse1360737269'),
('2013-02', 'tiankonguse1360737385'),
('2013-02', 'tiankonguse1360841264'),
('2013-02', 'tiankonguse1360846829'),
('2013-02', 'tiankonguse1361942839'),
('2013-02', 'tiankonguse1362059443'),
('2013-02', 'tiankonguse1362062476'),
('2013-02', 'tiankonguse1362064048'),
('2013-02', 'tiankonguse1362064148'),
('2013-02', 'tiankonguse1362064894'),
('2013-03', 'tiankonguse1362102139'),
('2013-03', 'tiankonguse1362102250'),
('2013-03', 'tiankonguse1362103348'),
('2013-03', 'tiankonguse1362108343'),
('2013-03', 'tiankonguse1362120223'),
('2013-03', 'tiankonguse1362120587'),
('2013-03', 'tiankonguse1362128219'),
('2013-03', 'tiankonguse1362128651'),
('2013-03', 'tiankonguse1362128898'),
('2013-03', 'tiankonguse1362129086'),
('2013-03', 'tiankonguse1362129146'),
('2013-03', 'tiankonguse1362129354'),
('2013-03', 'tiankonguse1362129997'),
('2013-03', 'tiankonguse1362130968'),
('2013-03', 'tiankonguse1362131632'),
('2013-03', 'tiankonguse1362132538'),
('2013-03', 'tiankonguse1362148535'),
('2013-03', 'tiankonguse1362188934'),
('2013-03', 'tiankonguse1362191864'),
('2013-03', 'tiankonguse1362194470'),
('2013-03', 'tiankonguse1362194626'),
('2013-03', 'tiankonguse1362195135'),
('2013-03', 'tiankonguse1362197390'),
('2013-03', 'tiankonguse1362202898'),
('2013-03', 'tiankonguse1362204003'),
('2013-03', 'tiankonguse1362204575'),
('2013-03', 'tiankonguse1362205592'),
('2013-03', 'tiankonguse1362205685'),
('2013-03', 'tiankonguse1362207549'),
('2013-03', 'tiankonguse1362208391'),
('2013-03', 'tiankonguse1362210195'),
('2013-03', 'tiankonguse1362210474'),
('2013-03', 'tiankonguse1362216444'),
('2013-03', 'tiankonguse1362217042'),
('2013-03', 'tiankonguse1362217259'),
('2013-03', 'tiankonguse1362217735'),
('2013-03', 'tiankonguse1362233316'),
('2013-03', 'tiankonguse1362233458'),
('2013-03', 'tiankonguse1362233602'),
('2013-03', 'tiankonguse1362234034'),
('2013-03', 'tiankonguse1362234220'),
('2013-03', 'tiankonguse1362235084'),
('2013-03', 'tiankonguse1362304355'),
('2013-03', 'tiankonguse1362304463'),
('2013-03', 'tiankonguse1362304583'),
('2013-03', 'tiankonguse1362321310'),
('2013-03', 'tiankonguse1362321624'),
('2013-03', 'tiankonguse1362321981'),
('2013-03', 'tiankonguse1362322109'),
('2013-03', 'tiankonguse1362322228'),
('2013-03', 'tiankonguse1362350909'),
('2013-03', 'tiankonguse1362383915'),
('2013-03', 'tiankonguse1362384404'),
('2013-03', 'tiankonguse1362384773'),
('2013-03', 'tiankonguse1362385376'),
('2013-03', 'tiankonguse1362385579'),
('2013-03', 'tiankonguse1362385663'),
('2013-03', 'tiankonguse1362385944'),
('2013-03', 'tiankonguse1362386820'),
('2013-03', 'tiankonguse1362386974'),
('2013-03', 'tiankonguse1362389703'),
('2013-03', 'tiankonguse1362390496'),
('2013-03', 'tiankonguse1362439415'),
('2013-03', 'tiankonguse1362468956'),
('2013-03', 'tiankonguse1362470077'),
('2013-03', 'tiankonguse1362473165'),
('2013-03', 'tiankonguse1362492641'),
('2013-03', 'tiankonguse1362531959'),
('2013-03', 'tiankonguse1362555853'),
('2013-03', 'tiankonguse1362556050'),
('2013-03', 'tiankonguse1362556524'),
('2013-03', 'tiankonguse1362556698'),
('2013-03', 'tiankonguse1362556945'),
('2013-03', 'tiankonguse1362557696'),
('2013-03', 'tiankonguse1362558199'),
('2013-03', 'tiankonguse1362558780'),
('2013-03', 'tiankonguse1362559295'),
('2013-03', 'tiankonguse1362560981'),
('2013-03', 'tiankonguse1362561267'),
('2013-03', 'tiankonguse1362654762'),
('2013-03', 'tiankonguse1362704273'),
('2013-03', 'tiankonguse1362726890'),
('2013-03', 'tiankonguse1362796830'),
('2013-03', 'tiankonguse1362800820'),
('2013-03', 'tiankonguse1362801239'),
('2013-03', 'tiankonguse1362808099'),
('2013-03', 'tiankonguse1362822047'),
('2013-03', 'tiankonguse1362823397'),
('2013-03', 'tiankonguse1362823729'),
('2013-03', 'tiankonguse1362837012'),
('2013-03', 'tiankonguse1362837513'),
('2013-03', 'tiankonguse1362837681'),
('2013-03', 'tiankonguse1362837872'),
('2013-03', 'tiankonguse1362837991'),
('2013-03', 'tiankonguse1362838299');

-- --------------------------------------------------------

--
-- 表的结构 `tk_message_board`
--

CREATE TABLE IF NOT EXISTS `tk_message_board` (
  `tk_message_board_key` varchar(45) NOT NULL COMMENT '考虑到数据合并时，id并不可靠（id自动生成的,值会不同），所以自己生成一个唯一的key来辨别这些数据。其实id已经可以被放弃使用了，但id可以用于网页显示,这样网页也安全了。',
  `tk_message_board_name` varchar(45) NOT NULL,
  `tk_message_board_message` longtext NOT NULL,
  `tk_message_board_datetime` datetime NOT NULL,
  `tk_message_board_log` varchar(45) DEFAULT NULL,
  `tk_message_board_parent` varchar(45) DEFAULT NULL COMMENT '打算不采用递归的显示方式，因此，这里只储存要回复的名字即可。',
  PRIMARY KEY (`tk_message_board_key`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- 转存表中的数据 `tk_message_board`
--

INSERT INTO `tk_message_board` (`tk_message_board_key`, `tk_message_board_name`, `tk_message_board_message`, `tk_message_board_datetime`, `tk_message_board_log`, `tk_message_board_parent`) VALUES
('shen1359354123', 'shen', 'hello', '2013-01-28 14:22:03', NULL, NULL),
('天空1359354428', '天空', '今天很冷！\r\n\r\n\r\n\r\n\r\n', '2013-01-28 14:27:08', NULL, NULL);

-- --------------------------------------------------------

--
-- 表的结构 `tk_tag`
--

CREATE TABLE IF NOT EXISTS `tk_tag` (
  `tk_tag_key` varchar(45) NOT NULL,
  `tk_tag_name` varchar(45) NOT NULL,
  PRIMARY KEY (`tk_tag_key`)
) ENGINE=InnoDB DEFAULT CHARSET=ujis;

-- --------------------------------------------------------

--
-- 表的结构 `tk_tag_blog`
--

CREATE TABLE IF NOT EXISTS `tk_tag_blog` (
  `tk_tag_blog_tag` varchar(45) NOT NULL,
  `tk_tag_blog_blog` varchar(45) NOT NULL,
  PRIMARY KEY (`tk_tag_blog_tag`,`tk_tag_blog_blog`),
  KEY `tk_tag_blog_tag_idx` (`tk_tag_blog_tag`)
) ENGINE=InnoDB DEFAULT CHARSET=ujis;

-- --------------------------------------------------------

--
-- 表的结构 `tk_user`
--

CREATE TABLE IF NOT EXISTS `tk_user` (
  `tk_user_name` varchar(45) NOT NULL COMMENT '这里就不使用自己生成的key了，name就可以当做key来使用',
  `tk_user_password` varchar(45) NOT NULL,
  `tk_user_email` varchar(45) NOT NULL,
  PRIMARY KEY (`tk_user_name`),
  UNIQUE KEY `tk_user_name_UNIQUE` (`tk_user_name`),
  UNIQUE KEY `tk_user_email_UNIQUE` (`tk_user_email`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- 转存表中的数据 `tk_user`
--

INSERT INTO `tk_user` (`tk_user_name`, `tk_user_password`, `tk_user_email`) VALUES
('tiankong', 'shen1000', '804345178@qq.com'),
('tiankonguse', 'shen1000', 'shen10000shen@gmail.com');

-- --------------------------------------------------------

--
-- 表的结构 `tk_user_info`
--

CREATE TABLE IF NOT EXISTS `tk_user_info` (
  `tk_user_info_email` varchar(45) NOT NULL COMMENT '这里就不使用自己生成的key了，email就可以当做key来使用',
  `tk_user_info_registered` datetime NOT NULL,
  `tk_user_info_qq` varchar(45) DEFAULT NULL,
  `tk_user_info_blogusl` varchar(45) DEFAULT NULL,
  `tk_user_info_sex` varchar(45) DEFAULT NULL,
  `tk_user_info_age` int(11) DEFAULT NULL,
  `tk_user_info_truename` varchar(45) DEFAULT NULL,
  PRIMARY KEY (`tk_user_info_email`),
  UNIQUE KEY `tk_user_info_email_UNIQUE` (`tk_user_info_email`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- 转存表中的数据 `tk_user_info`
--

INSERT INTO `tk_user_info` (`tk_user_info_email`, `tk_user_info_registered`, `tk_user_info_qq`, `tk_user_info_blogusl`, `tk_user_info_sex`, `tk_user_info_age`, `tk_user_info_truename`) VALUES
('804345178@qq.com', '2013-01-28 13:07:06', NULL, NULL, NULL, NULL, NULL),
('shen10000shen@gmail.com', '2013-01-25 20:36:33', NULL, NULL, NULL, NULL, NULL);

-- --------------------------------------------------------

--
-- 表的结构 `tk_user_log`
--

CREATE TABLE IF NOT EXISTS `tk_user_log` (
  `tk_user_log_ip` varchar(45) NOT NULL,
  `tk_user_log_osinfo` varchar(45) NOT NULL,
  `tk_user_log_browerinfo` varchar(45) NOT NULL,
  `tk_user_log_datetime` datetime NOT NULL,
  `tk_user_log_name` varchar(45) DEFAULT NULL,
  `tk_user_log_key` varchar(45) NOT NULL COMMENT '这里需要使用key了，来作为一条记录的唯一标示',
  PRIMARY KEY (`tk_user_log_key`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- 限制导出的表
--

--
-- 限制表 `tk_android_class_name`
--
ALTER TABLE `tk_android_class_name`
  ADD CONSTRAINT `tk_android_class` FOREIGN KEY (`tk_android_class`) REFERENCES `tk_android_class` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  ADD CONSTRAINT `tk_android_name` FOREIGN KEY (`tk_android_name`) REFERENCES `tk_android_name` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION;

--
-- 限制表 `tk_blog`
--
ALTER TABLE `tk_blog`
  ADD CONSTRAINT `tk_blog_user` FOREIGN KEY (`tk_blog_user`) REFERENCES `tk_user` (`tk_user_name`) ON DELETE NO ACTION ON UPDATE NO ACTION;

--
-- 限制表 `tk_file_blog`
--
ALTER TABLE `tk_file_blog`
  ADD CONSTRAINT `tk_file_blog_file` FOREIGN KEY (`tk_file_blog_file`) REFERENCES `tk_file` (`tk_file_date`) ON DELETE NO ACTION ON UPDATE NO ACTION;

--
-- 限制表 `tk_tag_blog`
--
ALTER TABLE `tk_tag_blog`
  ADD CONSTRAINT `tk_tag_blog_tag` FOREIGN KEY (`tk_tag_blog_tag`) REFERENCES `tk_tag` (`tk_tag_key`) ON DELETE NO ACTION ON UPDATE NO ACTION;

--
-- 限制表 `tk_user`
--
ALTER TABLE `tk_user`
  ADD CONSTRAINT `tk_user_email` FOREIGN KEY (`tk_user_email`) REFERENCES `tk_user_info` (`tk_user_info_email`) ON DELETE NO ACTION ON UPDATE NO ACTION;

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
